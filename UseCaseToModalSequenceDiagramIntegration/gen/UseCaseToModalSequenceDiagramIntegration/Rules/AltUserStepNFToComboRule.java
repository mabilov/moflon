/**
 */
package UseCaseToModalSequenceDiagramIntegration.Rules;

import ModalSequenceDiagram.CombinedFragment;
import ModalSequenceDiagram.Constraint;
import ModalSequenceDiagram.Interaction;
import ModalSequenceDiagram.InteractionConstraint;
import ModalSequenceDiagram.InteractionOperand;
import ModalSequenceDiagram.Lifeline;
import ModalSequenceDiagram.LiteralString;
import ModalSequenceDiagram.Message;
import ModalSequenceDiagram.MessageEnd;
import ModalSequenceDiagram.MessageOccurrenceSpecification;
import ModalSequenceDiagram.ModalSequenceDiagramFactory;
import ModalSequenceDiagram.Model;

import TGGLanguage.csp.*;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NamedFlow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import UseCaseToModalSequenceDiagramIntegration.ActorToLifeline;
import UseCaseToModalSequenceDiagramIntegration.FlowToInteractionFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToMessage;
import UseCaseToModalSequenceDiagramIntegration.PackageDeclarationToPackage;
import UseCaseToModalSequenceDiagramIntegration.ParallelStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.StepAlternativeToInteractionOperand;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToInteraction;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToMessage;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToModalSequenceDiagramIntegrationFactory;
import UseCaseToModalSequenceDiagramIntegration.UseCasesModelToModel;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Alt User Step NF To Combo Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see UseCaseToModalSequenceDiagramIntegration.Rules.RulesPackage#getAltUserStepNFToComboRule()
 * @model
 * @generated
 */
public interface AltUserStepNFToComboRule extends AbstractRule,
		AltStepNFToComboRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __packageDeclaration_actors_sysActor = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object sysActor is really bound\n         JavaSDM.ensure ( sysActor != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,packageDeclaration,actor,sysActor,flow,useCase,step,alt,altFlow));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object sysActor is really bound\n            JavaSDM.ensure ( sysActor != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects sysActor and actor \n            JavaSDM.ensure ( !sysActor.equals (actor) );\n\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __step_actor_actor\n            __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_stepAlternative_alt\n            __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __alt_ref_altFlow\n            __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __flow_steps_step\n            __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __flow_steps_step\n            __flow_steps_step.setName (\"steps\");\n            // assign attribute __step_stepAlternative_alt\n            __step_stepAlternative_alt.setName (\"stepAlternative\");\n            // assign attribute __step_actor_actor\n            __step_actor_actor.setName (\"actor\");\n            // assign attribute __alt_ref_altFlow\n            __alt_ref_altFlow.setName (\"ref\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_actor_actor,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_stepAlternative_alt,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__alt_ref_altFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,step,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,altFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,alt,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__flow_steps_step,\"toBeTranslatedEdges\");\n\n            // create link\n            __step_actor_actor.setTrg( actor);\n\n\n            // create link\n            __flow_steps_step.setSrc( flow);\n\n\n            // create link\n            __flow_steps_step.setTrg( step);\n\n\n            // create link\n            __step_actor_actor.setSrc( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setSrc( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setTrg( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setSrc( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setTrg( altFlow);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object sysActor is really bound\n            JavaSDM.ensure ( sysActor != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects sysActor and actor \n            JavaSDM.ensure ( !sysActor.equals (actor) );\n\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __useCase_flows_flow\n            __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __packageDeclaration_actors_sysActor\n            __packageDeclaration_actors_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor.setName (\"actors\");\n            // assign attribute __packageDeclaration_actors_sysActor\n            __packageDeclaration_actors_sysActor.setName (\"actors\");\n            // assign attribute __useCase_flows_flow\n            __useCase_flows_flow.setName (\"flows\");\n            // assign attribute __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_actors_actor,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,useCase,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_useCases_useCase,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__useCase_flows_flow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,packageDeclaration,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,actor,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,flow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,sysActor,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_actors_sysActor,\"contextEdges\");\n\n            // create link\n            __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n            // create link\n            __packageDeclaration_actors_sysActor.setSrc( packageDeclaration);\n\n\n            // create link\n            __packageDeclaration_actors_actor.setTrg( actor);\n\n\n            // create link\n            __packageDeclaration_actors_sysActor.setTrg( sysActor);\n\n\n            // create link\n            __useCase_flows_flow.setTrg( flow);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n            // create link\n            __useCase_flows_flow.setSrc( useCase);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,packageDeclaration,actor,sysActor,flow,useCase,step,alt,altFlow);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match,
			PackageDeclaration packageDeclaration, Actor actor, Actor sysActor,
			NamedFlow flow, UseCase useCase, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      PackageDeclaration packageDeclaration = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      NormalStep step = null;\n      Actor sysActor = null;\n      ActorToLifeline sysActorToSysLine = null;\n      Lifeline sysLine = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      CombinedFragment combo = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      InteractionConstraint guard = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      LiteralString spec = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge sysLine__coveredBy__parentOperand = null;\n      EMoflonEdge sysLine__coveredBy__messageSend = null;\n      EMoflonEdge interaction__fragment__combo = null;\n      EMoflonEdge messageSend__covered__sysLine = null;\n      EMoflonEdge line__coveredBy__operand = null;\n      EMoflonEdge line__coveredBy__parentOperand = null;\n      EMoflonEdge combo__covered__sysLine = null;\n      EMoflonEdge guard__specification__spec = null;\n      EMoflonEdge combo__enclosingInteraction__interaction = null;\n      EMoflonEdge sysLine__coveredBy__operand = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge parentOperand__covered__sysLine = null;\n      EMoflonEdge line__coveredBy__parentCombo = null;\n      EMoflonEdge operand__covered__line = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge messageReceive__enclosingOperand__parentOperand = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge operand__guard__guard = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge sysLine__coveredBy__combo = null;\n      EMoflonEdge operand__covered__sysLine = null;\n      EMoflonEdge parentCombo__covered__sysLine = null;\n      EMoflonEdge parentCombo__covered__line = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge parentOperand__covered__line = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge parentOperand__fragment__messageReceive = null;\n      EMoflonEdge sysLine__coveredBy__parentCombo = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysActor\"));\n\n         // ensure correct type and really bound of object sysActor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         sysActor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysActorToSysLine\"));\n\n         // ensure correct type and really bound of object sysActorToSysLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         sysActorToSysLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysLine\"));\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actorToLine \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object messageSend\n         messageSend = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object operand\n         operand = ModalSequenceDiagramFactory.eINSTANCE.createInteractionOperand();\n\n         // create object combo\n         combo = ModalSequenceDiagramFactory.eINSTANCE.createCombinedFragment();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object guard\n         guard = ModalSequenceDiagramFactory.eINSTANCE.createInteractionConstraint();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object messageReceive\n         messageReceive = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object spec\n         spec = ModalSequenceDiagramFactory.eINSTANCE.createLiteralString();\n\n         // assign attribute combo\n         combo.setInteractionOperator ((ModalSequenceDiagram.InteractionOperatorKind)csp.getValue(\"combo\",\"interactionOperator\"));\n         // assign attribute guard\n         guard.setName ((java.lang.String)csp.getValue(\"guard\",\"name\"));\n         // assign attribute spec\n         spec.setValue ((java.lang.String)csp.getValue(\"spec\",\"value\"));\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n\n         // create link\n         messageSend.getCovered().add(sysLine);\n\n\n         // create link\n         operand.getCovered().add(sysLine);\n\n\n         // create link\n         parentOperand.getCovered().add(sysLine);\n\n\n         // create link\n         combo.getCovered().add(sysLine);\n\n\n         // create link\n         parentCombo.getCovered().add(sysLine);\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         interaction.getFragment().add(combo);\n\n\n         // create link\n         \toperand.setGuard(guard); // add link to one\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         line.getCoveredBy().add(operand);\n\n\n         // create link\n         messageReceive.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         line.getCoveredBy().add(parentOperand);\n\n\n         // create link\n         line.getCoveredBy().add(parentCombo);\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         \tguard.setSpecification(spec); // add link to one\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"createdElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object sysActor is really bound\n         JavaSDM.ensure ( sysActor != null );\n         // check object sysActorToSysLine is really bound\n         JavaSDM.ensure ( sysActorToSysLine != null );\n         // check object sysLine is really bound\n         JavaSDM.ensure ( sysLine != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actor \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actor) );\n\n         // check isomorphic binding between objects sysLine and actor \n         JavaSDM.ensure ( !sysLine.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlowToOperand and actorToLine \n         JavaSDM.ensure ( !altFlowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToParentOperand and actorToLine \n         JavaSDM.ensure ( !flowToParentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects packageDeclaration and actorToLine \n         JavaSDM.ensure ( !packageDeclaration.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentCombo and actorToLine \n         JavaSDM.ensure ( !parentCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentOperand and actorToLine \n         JavaSDM.ensure ( !parentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysActor and actorToLine \n         JavaSDM.ensure ( !sysActor.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actorToLine \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysLine and actorToLine \n         JavaSDM.ensure ( !sysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects packageDeclaration and alt \n         JavaSDM.ensure ( !packageDeclaration.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects sysActor and alt \n         JavaSDM.ensure ( !sysActor.equals (alt) );\n\n         // check isomorphic binding between objects sysActorToSysLine and alt \n         JavaSDM.ensure ( !sysActorToSysLine.equals (alt) );\n\n         // check isomorphic binding between objects sysLine and alt \n         JavaSDM.ensure ( !sysLine.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlow \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects sysActor and altFlow \n         JavaSDM.ensure ( !sysActor.equals (altFlow) );\n\n         // check isomorphic binding between objects sysActorToSysLine and altFlow \n         JavaSDM.ensure ( !sysActorToSysLine.equals (altFlow) );\n\n         // check isomorphic binding between objects sysLine and altFlow \n         JavaSDM.ensure ( !sysLine.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects sysActor and altFlowToOperand \n         JavaSDM.ensure ( !sysActor.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and altFlowToOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects sysLine and altFlowToOperand \n         JavaSDM.ensure ( !sysLine.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and alternative1ToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects sysActor and alternative1ToOperand \n         JavaSDM.ensure ( !sysActor.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and alternative1ToOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects sysLine and alternative1ToOperand \n         JavaSDM.ensure ( !sysLine.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects sysActor and combo \n         JavaSDM.ensure ( !sysActor.equals (combo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and combo \n         JavaSDM.ensure ( !sysActorToSysLine.equals (combo) );\n\n         // check isomorphic binding between objects sysLine and combo \n         JavaSDM.ensure ( !sysLine.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects sysActor and flow \n         JavaSDM.ensure ( !sysActor.equals (flow) );\n\n         // check isomorphic binding between objects sysActorToSysLine and flow \n         JavaSDM.ensure ( !sysActorToSysLine.equals (flow) );\n\n         // check isomorphic binding between objects sysLine and flow \n         JavaSDM.ensure ( !sysLine.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToParentOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects sysActor and flowToParentOperand \n         JavaSDM.ensure ( !sysActor.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and flowToParentOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects sysLine and flowToParentOperand \n         JavaSDM.ensure ( !sysLine.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects packageDeclaration and guard \n         JavaSDM.ensure ( !packageDeclaration.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects sysActor and guard \n         JavaSDM.ensure ( !sysActor.equals (guard) );\n\n         // check isomorphic binding between objects sysActorToSysLine and guard \n         JavaSDM.ensure ( !sysActorToSysLine.equals (guard) );\n\n         // check isomorphic binding between objects sysLine and guard \n         JavaSDM.ensure ( !sysLine.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects sysActor and interaction \n         JavaSDM.ensure ( !sysActor.equals (interaction) );\n\n         // check isomorphic binding between objects sysActorToSysLine and interaction \n         JavaSDM.ensure ( !sysActorToSysLine.equals (interaction) );\n\n         // check isomorphic binding between objects sysLine and interaction \n         JavaSDM.ensure ( !sysLine.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects sysActor and line \n         JavaSDM.ensure ( !sysActor.equals (line) );\n\n         // check isomorphic binding between objects sysActorToSysLine and line \n         JavaSDM.ensure ( !sysActorToSysLine.equals (line) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysActor and messageReceive \n         JavaSDM.ensure ( !sysActor.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysActorToSysLine and messageReceive \n         JavaSDM.ensure ( !sysActorToSysLine.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysLine and messageReceive \n         JavaSDM.ensure ( !sysLine.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects sysActor and messageSend \n         JavaSDM.ensure ( !sysActor.equals (messageSend) );\n\n         // check isomorphic binding between objects sysActorToSysLine and messageSend \n         JavaSDM.ensure ( !sysActorToSysLine.equals (messageSend) );\n\n         // check isomorphic binding between objects sysLine and messageSend \n         JavaSDM.ensure ( !sysLine.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects sysActor and operand \n         JavaSDM.ensure ( !sysActor.equals (operand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and operand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (operand) );\n\n         // check isomorphic binding between objects sysLine and operand \n         JavaSDM.ensure ( !sysLine.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and packageDeclaration \n         JavaSDM.ensure ( !parentCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and packageDeclaration \n         JavaSDM.ensure ( !parentOperand.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects spec and packageDeclaration \n         JavaSDM.ensure ( !spec.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToCombo and packageDeclaration \n         JavaSDM.ensure ( !stepToCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysActor and packageDeclaration \n         JavaSDM.ensure ( !sysActor.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysActorToSysLine and packageDeclaration \n         JavaSDM.ensure ( !sysActorToSysLine.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysLine and packageDeclaration \n         JavaSDM.ensure ( !sysLine.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects sysActor and parentCombo \n         JavaSDM.ensure ( !sysActor.equals (parentCombo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and parentCombo \n         JavaSDM.ensure ( !sysActorToSysLine.equals (parentCombo) );\n\n         // check isomorphic binding between objects sysLine and parentCombo \n         JavaSDM.ensure ( !sysLine.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects sysActor and parentOperand \n         JavaSDM.ensure ( !sysActor.equals (parentOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and parentOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (parentOperand) );\n\n         // check isomorphic binding between objects sysLine and parentOperand \n         JavaSDM.ensure ( !sysLine.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects sysActor and spec \n         JavaSDM.ensure ( !sysActor.equals (spec) );\n\n         // check isomorphic binding between objects sysActorToSysLine and spec \n         JavaSDM.ensure ( !sysActorToSysLine.equals (spec) );\n\n         // check isomorphic binding between objects sysLine and spec \n         JavaSDM.ensure ( !sysLine.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects sysActor and step \n         JavaSDM.ensure ( !sysActor.equals (step) );\n\n         // check isomorphic binding between objects sysActorToSysLine and step \n         JavaSDM.ensure ( !sysActorToSysLine.equals (step) );\n\n         // check isomorphic binding between objects sysLine and step \n         JavaSDM.ensure ( !sysLine.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects sysActor and stepToCombo \n         JavaSDM.ensure ( !sysActor.equals (stepToCombo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and stepToCombo \n         JavaSDM.ensure ( !sysActorToSysLine.equals (stepToCombo) );\n\n         // check isomorphic binding between objects sysLine and stepToCombo \n         JavaSDM.ensure ( !sysLine.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and sysActor \n         JavaSDM.ensure ( !sysActorToSysLine.equals (sysActor) );\n\n         // check isomorphic binding between objects sysLine and sysActor \n         JavaSDM.ensure ( !sysLine.equals (sysActor) );\n\n         // check isomorphic binding between objects useCase and sysActor \n         JavaSDM.ensure ( !useCase.equals (sysActor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysActor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysActor) );\n\n         // check isomorphic binding between objects sysLine and sysActorToSysLine \n         JavaSDM.ensure ( !sysLine.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCase and sysActorToSysLine \n         JavaSDM.ensure ( !useCase.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysActorToSysLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCase and sysLine \n         JavaSDM.ensure ( !useCase.equals (sysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object sysLine__coveredBy__parentOperand\n         sysLine__coveredBy__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object sysLine__coveredBy__messageSend\n         sysLine__coveredBy__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__fragment__combo\n         interaction__fragment__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__covered__sysLine\n         messageSend__covered__sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__operand\n         line__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentOperand\n         line__coveredBy__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__covered__sysLine\n         combo__covered__sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object guard__specification__spec\n         guard__specification__spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__enclosingInteraction__interaction\n         combo__enclosingInteraction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object sysLine__coveredBy__operand\n         sysLine__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__covered__sysLine\n         parentOperand__covered__sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentCombo\n         line__coveredBy__parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__line\n         operand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __flow_steps_step\n         __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__guard__guard\n         operand__guard__guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object sysLine__coveredBy__combo\n         sysLine__coveredBy__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__sysLine\n         operand__covered__sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentCombo__covered__sysLine\n         parentCombo__covered__sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentCombo__covered__line\n         parentCombo__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_actor_actor\n         __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __alt_ref_altFlow\n         __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__covered__line\n         parentOperand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_stepAlternative_alt\n         __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object sysLine__coveredBy__parentCombo\n         sysLine__coveredBy__parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltUserStepNFToComboRule\");\n         // assign attribute sysLine__coveredBy__messageSend\n         sysLine__coveredBy__messageSend.setName (\"coveredBy\");\n         // assign attribute messageSend__covered__sysLine\n         messageSend__covered__sysLine.setName (\"covered\");\n         // assign attribute sysLine__coveredBy__combo\n         sysLine__coveredBy__combo.setName (\"coveredBy\");\n         // assign attribute combo__covered__sysLine\n         combo__covered__sysLine.setName (\"covered\");\n         // assign attribute sysLine__coveredBy__operand\n         sysLine__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__sysLine\n         operand__covered__sysLine.setName (\"covered\");\n         // assign attribute sysLine__coveredBy__parentOperand\n         sysLine__coveredBy__parentOperand.setName (\"coveredBy\");\n         // assign attribute parentOperand__covered__sysLine\n         parentOperand__covered__sysLine.setName (\"covered\");\n         // assign attribute sysLine__coveredBy__parentCombo\n         sysLine__coveredBy__parentCombo.setName (\"coveredBy\");\n         // assign attribute parentCombo__covered__sysLine\n         parentCombo__covered__sysLine.setName (\"covered\");\n         // assign attribute parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive.setName (\"fragment\");\n         // assign attribute messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__parentOperand\n         line__coveredBy__parentOperand.setName (\"coveredBy\");\n         // assign attribute parentOperand__covered__line\n         parentOperand__covered__line.setName (\"covered\");\n         // assign attribute line__coveredBy__parentCombo\n         line__coveredBy__parentCombo.setName (\"coveredBy\");\n         // assign attribute parentCombo__covered__line\n         parentCombo__covered__line.setName (\"covered\");\n         // assign attribute combo__enclosingInteraction__interaction\n         combo__enclosingInteraction__interaction.setName (\"enclosingInteraction\");\n         // assign attribute interaction__fragment__combo\n         interaction__fragment__combo.setName (\"fragment\");\n         // assign attribute __flow_steps_step\n         __flow_steps_step.setName (\"steps\");\n         // assign attribute __step_stepAlternative_alt\n         __step_stepAlternative_alt.setName (\"stepAlternative\");\n         // assign attribute __step_actor_actor\n         __step_actor_actor.setName (\"actor\");\n         // assign attribute __alt_ref_altFlow\n         __alt_ref_altFlow.setName (\"ref\");\n         // assign attribute line__coveredBy__operand\n         line__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__line\n         operand__covered__line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute operand__guard__guard\n         operand__guard__guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute guard__specification__spec\n         guard__specification__spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,sysLine__coveredBy__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,sysLine__coveredBy__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__fragment__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__covered__sysLine,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__covered__sysLine,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard__specification__spec,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__enclosingInteraction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,sysLine__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__covered__sysLine,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentCombo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__flow_steps_step,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__guard__guard,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,sysLine__coveredBy__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__sysLine,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentCombo__covered__sysLine,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentCombo__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_actor_actor,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__alt_ref_altFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_stepAlternative_alt,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,sysLine__coveredBy__parentCombo,\"createdEdges\");\n\n         // create link\n         __step_actor_actor.setTrg( actor);\n\n\n         // create link\n         sysLine__coveredBy__parentOperand.setSrc( sysLine);\n\n\n         // create link\n         operand__covered__sysLine.setTrg( sysLine);\n\n\n         // create link\n         messageSend__covered__sysLine.setTrg( sysLine);\n\n\n         // create link\n         sysLine__coveredBy__operand.setSrc( sysLine);\n\n\n         // create link\n         parentOperand__covered__sysLine.setTrg( sysLine);\n\n\n         // create link\n         combo__covered__sysLine.setTrg( sysLine);\n\n\n         // create link\n         sysLine__coveredBy__parentCombo.setSrc( sysLine);\n\n\n         // create link\n         parentCombo__covered__sysLine.setTrg( sysLine);\n\n\n         // create link\n         sysLine__coveredBy__combo.setSrc( sysLine);\n\n\n         // create link\n         sysLine__coveredBy__messageSend.setSrc( sysLine);\n\n\n         // create link\n         sysLine__coveredBy__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__covered__sysLine.setSrc( messageSend);\n\n\n         // create link\n         interaction__fragment__combo.setTrg( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         combo__covered__sysLine.setSrc( combo);\n\n\n         // create link\n         sysLine__coveredBy__combo.setTrg( combo);\n\n\n         // create link\n         combo__enclosingInteraction__interaction.setSrc( combo);\n\n\n         // create link\n         operand__covered__sysLine.setSrc( operand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         sysLine__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         line__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         operand__guard__guard.setSrc( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         operand__covered__line.setSrc( operand);\n\n\n         // create link\n         parentOperand__covered__sysLine.setSrc( parentOperand);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         line__coveredBy__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__covered__line.setSrc( parentOperand);\n\n\n         // create link\n         sysLine__coveredBy__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         parentCombo__covered__line.setSrc( parentCombo);\n\n\n         // create link\n         parentCombo__covered__sysLine.setSrc( parentCombo);\n\n\n         // create link\n         line__coveredBy__parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         sysLine__coveredBy__parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         __flow_steps_step.setSrc( flow);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         parentOperand__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__operand.setSrc( line);\n\n\n         // create link\n         line__coveredBy__parentOperand.setSrc( line);\n\n\n         // create link\n         operand__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__parentCombo.setSrc( line);\n\n\n         // create link\n         parentCombo__covered__line.setTrg( line);\n\n\n         // create link\n         combo__enclosingInteraction__interaction.setTrg( interaction);\n\n\n         // create link\n         interaction__fragment__combo.setSrc( interaction);\n\n\n         // create link\n         __step_stepAlternative_alt.setSrc( step);\n\n\n         // create link\n         __step_actor_actor.setSrc( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         __flow_steps_step.setTrg( step);\n\n\n         // create link\n         __alt_ref_altFlow.setSrc( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         __step_stepAlternative_alt.setTrg( alt);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         operand__guard__guard.setTrg( guard);\n\n\n         // create link\n         guard__specification__spec.setSrc( guard);\n\n\n         // create link\n         guard__specification__spec.setTrg( spec);\n\n\n         // create link\n         __alt_ref_altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,packageDeclaration,actor,sysActor,sysLine,sysActorToSysLine,messageSend,combo,operand,parentOperand,parentCombo,flow,flowToParentOperand,messageReceive,line,interaction,useCase,useCaseToInteraction,actorToLine,step,alt,stepToCombo,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Actor actor = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      PackageDeclaration packageDeclaration = null;\n      NormalStep step = null;\n      Actor sysActor = null;\n      UseCase useCase = null;\n      EMoflonEdge __packageDeclaration_actors_sysActor = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      EMoflonEdge __sysActorToSysLine_source_sysActor = null;\n      EMoflonEdge __sysActorToSysLine_target_sysLine = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      CSP csp = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterUseCaseToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Lifeline sysLine = null;\n      Iterator fujaba__IterSysActorToSysActorToSysLine = null;\n      ActorToLifeline sysActorToSysLine = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterFlowToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Lifeline line = null;\n      Iterator fujaba__IterActorToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltUserStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (match.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (match.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (match.getObject(\"sysActor\"));\n\n         // ensure correct type and really bound of object sysActor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         sysActor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link source from actor to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterActorToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(actor,ActorToLifeline.class,\"source\")).iterator ();\n\n         while ( fujaba__IterActorToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterActorToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               line = actorToLine.getTarget ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n\n               // iterate to-many link source from flow to flowToParentOperand\n               fujaba__Success = false;\n\n               fujaba__IterFlowToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(flow,FlowToInteractionFragment.class,\"source\")).iterator ();\n\n               while ( fujaba__IterFlowToFlowToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     flowToParentOperand = (FlowToInteractionFragment) fujaba__IterFlowToFlowToParentOperand.next ();\n\n                     // check object flowToParentOperand is really bound\n                     JavaSDM.ensure ( flowToParentOperand != null );\n                     // bind object\n                     _TmpObject = flowToParentOperand.getTarget ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n\n                     // iterate to-many link source from sysActor to sysActorToSysLine\n                     fujaba__Success = false;\n\n                     fujaba__IterSysActorToSysActorToSysLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysActor,ActorToLifeline.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterSysActorToSysActorToSysLine.hasNext () )\n                     {\n                        try\n                        {\n                           sysActorToSysLine = (ActorToLifeline) fujaba__IterSysActorToSysActorToSysLine.next ();\n\n                           // check object sysActorToSysLine is really bound\n                           JavaSDM.ensure ( sysActorToSysLine != null );\n                           // check isomorphic binding between objects sysActorToSysLine and actorToLine \n                           JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n                           // bind object\n                           sysLine = sysActorToSysLine.getTarget ();\n\n                           // check object sysLine is really bound\n                           JavaSDM.ensure ( sysLine != null );\n\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // iterate to-many link source from useCase to useCaseToInteraction\n                           fujaba__Success = false;\n\n                           fujaba__IterUseCaseToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(useCase,UseCaseToInteraction.class,\"source\")).iterator ();\n\n                           while ( fujaba__IterUseCaseToUseCaseToInteraction.hasNext () )\n                           {\n                              try\n                              {\n                                 useCaseToInteraction = (UseCaseToInteraction) fujaba__IterUseCaseToUseCaseToInteraction.next ();\n\n                                 // check object useCaseToInteraction is really bound\n                                 JavaSDM.ensure ( useCaseToInteraction != null );\n                                 // bind object\n                                 interaction = useCaseToInteraction.getTarget ();\n\n                                 // check object interaction is really bound\n                                 JavaSDM.ensure ( interaction != null );\n\n                                 // story node \'find context\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object actor is really bound\n                                    JavaSDM.ensure ( actor != null );\n                                    // check object actorToLine is really bound\n                                    JavaSDM.ensure ( actorToLine != null );\n                                    // check object alt is really bound\n                                    JavaSDM.ensure ( alt != null );\n                                    // check object altFlow is really bound\n                                    JavaSDM.ensure ( altFlow != null );\n                                    // check object flow is really bound\n                                    JavaSDM.ensure ( flow != null );\n                                    // check object flowToParentOperand is really bound\n                                    JavaSDM.ensure ( flowToParentOperand != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object packageDeclaration is really bound\n                                    JavaSDM.ensure ( packageDeclaration != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object step is really bound\n                                    JavaSDM.ensure ( step != null );\n                                    // check object sysActor is really bound\n                                    JavaSDM.ensure ( sysActor != null );\n                                    // check object sysActorToSysLine is really bound\n                                    JavaSDM.ensure ( sysActorToSysLine != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check object useCase is really bound\n                                    JavaSDM.ensure ( useCase != null );\n                                    // check object useCaseToInteraction is really bound\n                                    JavaSDM.ensure ( useCaseToInteraction != null );\n                                    // check isomorphic binding between objects sysActor and actor \n                                    JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                                    // check isomorphic binding between objects sysActorToSysLine and actorToLine \n                                    JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n                                    // check isomorphic binding between objects flow and altFlow \n                                    JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check link actor from step to actor\n                                    JavaSDM.ensure (actor.equals (step.getActor ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link ref from alt to altFlow\n                                    JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                                    ));\n\n                                    // check link actors from actor to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                                    ));\n\n                                    // check link actors from sysActor to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (sysActor.eContainer()\n                                    ));\n\n                                    // check link flows from flow to useCase\n                                    JavaSDM.ensure (useCase.equals (flow.eContainer()\n                                    ));\n\n                                    // bind object\n                                    parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n\n                                    // check if contained via correct reference\n                                    JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                                    // check link source from actorToLine to actor\n                                    JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                                    ));\n\n                                    // check link source from flowToParentOperand to flow\n                                    JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                                    ));\n\n                                    // check link source from sysActorToSysLine to sysActor\n                                    JavaSDM.ensure (sysActor.equals (sysActorToSysLine.getSource ()\n                                    ));\n\n                                    // check link source from useCaseToInteraction to useCase\n                                    JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                                    ));\n\n                                    // check link stepAlternative from alt to step\n                                    JavaSDM.ensure (step.equals (alt.eContainer()\n                                    ));\n\n                                    // check link steps from step to flow\n                                    JavaSDM.ensure (flow.equals (step.eContainer()\n                                    ));\n\n                                    // check link target from actorToLine to line\n                                    JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                                    ));\n\n                                    // check link target from flowToParentOperand to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                                    ));\n\n                                    // check link target from sysActorToSysLine to sysLine\n                                    JavaSDM.ensure (sysLine.equals (sysActorToSysLine.getTarget ()\n                                    ));\n\n                                    // check link target from useCaseToInteraction to interaction\n                                    JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                                    ));\n\n                                    // check link useCases from useCase to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                                    ));\n\n                                    // create object __packageDeclaration_actors_sysActor\n                                    __packageDeclaration_actors_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __packageDeclaration_actors_actor\n                                    __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __packageDeclaration_useCases_useCase\n                                    __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object isApplicableMatch\n                                    isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                                    // create object __step_actor_actor\n                                    __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __actorToLine_source_actor\n                                    __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysActorToSysLine_source_sysActor\n                                    __sysActorToSysLine_source_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysActorToSysLine_target_sysLine\n                                    __sysActorToSysLine_target_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parentCombo_operand_parentOperand\n                                    __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flowToParentOperand_target_parentOperand\n                                    __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCase_flows_flow\n                                    __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flowToParentOperand_source_flow\n                                    __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flow_steps_step\n                                    __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __interaction_lifeline_line\n                                    __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __actorToLine_target_line\n                                    __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __line_interaction_interaction\n                                    __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCaseToInteraction_target_interaction\n                                    __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCaseToInteraction_source_useCase\n                                    __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __step_stepAlternative_alt\n                                    __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __alt_ref_altFlow\n                                    __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // assign attribute __packageDeclaration_actors_actor\n                                    __packageDeclaration_actors_actor.setName (\"actors\");\n                                    // assign attribute __packageDeclaration_actors_sysActor\n                                    __packageDeclaration_actors_sysActor.setName (\"actors\");\n                                    // assign attribute __sysActorToSysLine_source_sysActor\n                                    __sysActorToSysLine_source_sysActor.setName (\"source\");\n                                    // assign attribute __sysActorToSysLine_target_sysLine\n                                    __sysActorToSysLine_target_sysLine.setName (\"target\");\n                                    // assign attribute __parentCombo_operand_parentOperand\n                                    __parentCombo_operand_parentOperand.setName (\"operand\");\n                                    // assign attribute __flowToParentOperand_source_flow\n                                    __flowToParentOperand_source_flow.setName (\"source\");\n                                    // assign attribute __flowToParentOperand_target_parentOperand\n                                    __flowToParentOperand_target_parentOperand.setName (\"target\");\n                                    // assign attribute __line_interaction_interaction\n                                    __line_interaction_interaction.setName (\"interaction\");\n                                    // assign attribute __interaction_lifeline_line\n                                    __interaction_lifeline_line.setName (\"lifeline\");\n                                    // assign attribute __useCase_flows_flow\n                                    __useCase_flows_flow.setName (\"flows\");\n                                    // assign attribute __useCaseToInteraction_source_useCase\n                                    __useCaseToInteraction_source_useCase.setName (\"source\");\n                                    // assign attribute __useCaseToInteraction_target_interaction\n                                    __useCaseToInteraction_target_interaction.setName (\"target\");\n                                    // assign attribute __flow_steps_step\n                                    __flow_steps_step.setName (\"steps\");\n                                    // assign attribute __packageDeclaration_useCases_useCase\n                                    __packageDeclaration_useCases_useCase.setName (\"useCases\");\n                                    // assign attribute __actorToLine_source_actor\n                                    __actorToLine_source_actor.setName (\"source\");\n                                    // assign attribute __actorToLine_target_line\n                                    __actorToLine_target_line.setName (\"target\");\n                                    // assign attribute __step_stepAlternative_alt\n                                    __step_stepAlternative_alt.setName (\"stepAlternative\");\n                                    // assign attribute __step_actor_actor\n                                    __step_actor_actor.setName (\"actor\");\n                                    // assign attribute __alt_ref_altFlow\n                                    __alt_ref_altFlow.setName (\"ref\");\n\n                                    // create link\n                                    __packageDeclaration_actors_sysActor.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(actor);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                                    // create link\n                                    __step_actor_actor.setTrg( actor);\n\n\n                                    // create link\n                                    __actorToLine_source_actor.setTrg( actor);\n\n\n                                    // create link\n                                    __sysActorToSysLine_source_sysActor.setTrg( sysActor);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_sysActor.setTrg( sysActor);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysActor);\n\n\n                                    // create link\n                                    __sysActorToSysLine_target_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysActorToSysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_target_sysLine.setSrc( sysActorToSysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_source_sysActor.setSrc( sysActorToSysLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                                    // create link\n                                    __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                                    // create link\n                                    __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                                    // create link\n                                    __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                                    // create link\n                                    __useCase_flows_flow.setTrg( flow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flow);\n\n\n                                    // create link\n                                    __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                                    // create link\n                                    __flow_steps_step.setSrc( flow);\n\n\n                                    // create link\n                                    __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                                    // create link\n                                    __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                                    // create link\n                                    __interaction_lifeline_line.setTrg( line);\n\n\n                                    // create link\n                                    __actorToLine_target_line.setTrg( line);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(line);\n\n\n                                    // create link\n                                    __line_interaction_interaction.setSrc( line);\n\n\n                                    // create link\n                                    __interaction_lifeline_line.setSrc( interaction);\n\n\n                                    // create link\n                                    __line_interaction_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                                    // create link\n                                    __useCase_flows_flow.setSrc( useCase);\n\n\n                                    // create link\n                                    __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                                    // create link\n                                    __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                                    // create link\n                                    __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                                    // create link\n                                    __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                                    // create link\n                                    __actorToLine_target_line.setSrc( actorToLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                                    // create link\n                                    __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                                    // create link\n                                    __step_actor_actor.setSrc( step);\n\n\n                                    // create link\n                                    __flow_steps_step.setTrg( step);\n\n\n                                    // create link\n                                    __step_stepAlternative_alt.setSrc( step);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(step);\n\n\n                                    // create link\n                                    __step_stepAlternative_alt.setTrg( alt);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(alt);\n\n\n                                    // create link\n                                    __alt_ref_altFlow.setSrc( alt);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(altFlow);\n\n\n                                    // create link\n                                    __alt_ref_altFlow.setTrg( altFlow);\n\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_stepAlternative_alt,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__alt_ref_altFlow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysActorToSysLine_source_sysActor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_actor_actor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysActorToSysLine_target_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_sysActor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n                                    // story node \'solve CSP\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,packageDeclaration,actor,sysActor,sysLine,sysActorToSysLine,parentOperand,parentCombo,flow,flowToParentOperand,line,interaction,useCase,useCaseToInteraction,actorToLine,step,alt,altFlow));\n\n                                       // ensure correct type and really bound of object csp\n                                       JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                       csp = (CSP) _TmpObject;\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    // statement node \'check CSP\'\n                                    fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                                    if (fujaba__Success)\n                                    {\n                                       // story node \'add match to rule result\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check object isApplicableMatch is really bound\n                                          JavaSDM.ensure ( isApplicableMatch != null );\n                                          // check object ruleresult is really bound\n                                          JavaSDM.ensure ( ruleresult != null );\n                                          // assign attribute isApplicableMatch\n                                          isApplicableMatch.setRuleName (\"AltUserStepNFToComboRule\");\n                                          // assign attribute ruleresult\n                                          ruleresult.setSuccess (true);\n\n                                          // create link\n                                          ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"packageDeclaration\", packageDeclaration);\nmatch.registerObject(\"actor\", actor);\nmatch.registerObject(\"sysActor\", sysActor);\nmatch.registerObject(\"flow\", flow);\nmatch.registerObject(\"useCase\", useCase);\nmatch.registerObject(\"step\", step);\nmatch.registerObject(\"alt\", alt);\nmatch.registerObject(\"altFlow\", altFlow);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match,
			PackageDeclaration packageDeclaration, Actor actor, Actor sysActor,
			NamedFlow flow, UseCase useCase, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"person\");\r\nliteral0.setType(\"String\");\r\nVariable literal1 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal1\", true, csp);\r\nliteral1.setValue(\"system\");\r\nliteral1.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_actor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"actor.type\", true, csp);\r\nvar_actor_type.setValue(actor.getType());\r\nvar_actor_type.setType(\"EObject\");\r\nVariable var_sysActor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"sysActor.type\", true, csp);\r\nvar_sysActor_type.setValue(sysActor.getType());\r\nvar_sysActor_type.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqActorType eqActorType = new EqActorType();EqActorType eqActorType_0 = new EqActorType();\r\n\r\ncsp.getConstraints().add(eqActorType);\r\ncsp.getConstraints().add(eqActorType_0);\r\n\r\n// Solve CSP\r\neqActorType.setRuleName(\"\");\r\neqActorType.solve(var_actor_type,literal0);\r\neqActorType_0.setRuleName(\"\");\r\neqActorType_0.solve(var_sysActor_type,literal1);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match,
			PackageDeclaration packageDeclaration, Actor actor, Actor sysActor,
			NamedFlow flow, UseCase useCase, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", true, csp);\r\nvar_altFlow_name.setValue(altFlow.getName());\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", true, csp);\r\nvar_alt_condition.setValue(alt.getCondition());\r\nvar_alt_condition.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", csp);\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", csp);\r\nvar_spec_value.setType(\"\");\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", csp);\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();EqInterOperKind eqInterOperKind = new EqInterOperKind();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eqInterOperKind);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"sysActor\",sysActor);\r\nisApplicableMatch.registerObject(\"sysLine\",sysLine);\r\nisApplicableMatch.registerObject(\"sysActorToSysLine\",sysActorToSysLine);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"altFlow\",altFlow);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			PackageDeclaration packageDeclaration, Actor actor, Actor sysActor,
			Lifeline sysLine, ActorToLifeline sysActorToSysLine,
			InteractionOperand parentOperand, CombinedFragment parentCombo,
			NamedFlow flow, FlowToInteractionFragment flowToParentOperand,
			Lifeline line, Interaction interaction, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction,
			ActorToLifeline actorToLine, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"sysActor\", sysActor);\nruleresult.registerObject(\"sysLine\", sysLine);\nruleresult.registerObject(\"sysActorToSysLine\", sysActorToSysLine);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"actorToLine\", actorToLine);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult,
			EObject packageDeclaration, EObject actor, EObject sysActor,
			EObject sysLine, EObject sysActorToSysLine, EObject messageSend,
			EObject combo, EObject operand, EObject parentOperand,
			EObject parentCombo, EObject flow, EObject flowToParentOperand,
			EObject messageReceive, EObject line, EObject interaction,
			EObject useCase, EObject useCaseToInteraction, EObject actorToLine,
			EObject step, EObject alt, EObject stepToCombo,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"step\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getNormalStep()) && match.getObject(\"alt\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlowAlternative()) && match.getObject(\"altFlow\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __sysLine_coveredBy_operand = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __parentOperand_covered_sysLine = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __sysLine_coveredBy_combo = null;\n      EMoflonEdge __sysLine_coveredBy_parentCombo = null;\n      EMoflonEdge __interaction_fragment_combo = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __sysLine_coveredBy_messageSend = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __messageSend_covered_sysLine = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __sysLine_coveredBy_parentOperand = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __operand_covered_sysLine = null;\n      EMoflonEdge __combo_covered_sysLine = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __combo_enclosingInteraction_interaction = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __parentCombo_covered_sysLine = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object sysLine is really bound\n         JavaSDM.ensure ( sysLine != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check object sysLine is really bound\n            JavaSDM.ensure ( sysLine != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects sysLine and line \n            JavaSDM.ensure ( !sysLine.equals (line) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __sysLine_coveredBy_operand\n            __sysLine_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_covered_sysLine\n            __parentOperand_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentCombo_covered_line\n            __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __sysLine_coveredBy_combo\n            __sysLine_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __sysLine_coveredBy_parentCombo\n            __sysLine_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_fragment_combo\n            __interaction_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __guard_specification_spec\n            __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __sysLine_coveredBy_messageSend\n            __sysLine_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_guard_guard\n            __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_covered_sysLine\n            __messageSend_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_operand\n            __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __sysLine_coveredBy_parentOperand\n            __sysLine_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_sysLine\n            __operand_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_covered_sysLine\n            __combo_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_covered_line\n            __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_enclosingInteraction_interaction\n            __combo_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentCombo_covered_sysLine\n            __parentCombo_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_line\n            __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __sysLine_coveredBy_messageSend\n            __sysLine_coveredBy_messageSend.setName (\"coveredBy\");\n            // assign attribute __messageSend_covered_sysLine\n            __messageSend_covered_sysLine.setName (\"covered\");\n            // assign attribute __sysLine_coveredBy_combo\n            __sysLine_coveredBy_combo.setName (\"coveredBy\");\n            // assign attribute __combo_covered_sysLine\n            __combo_covered_sysLine.setName (\"covered\");\n            // assign attribute __sysLine_coveredBy_operand\n            __sysLine_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_sysLine\n            __operand_covered_sysLine.setName (\"covered\");\n            // assign attribute __sysLine_coveredBy_parentOperand\n            __sysLine_coveredBy_parentOperand.setName (\"coveredBy\");\n            // assign attribute __parentOperand_covered_sysLine\n            __parentOperand_covered_sysLine.setName (\"covered\");\n            // assign attribute __sysLine_coveredBy_parentCombo\n            __sysLine_coveredBy_parentCombo.setName (\"coveredBy\");\n            // assign attribute __parentCombo_covered_sysLine\n            __parentCombo_covered_sysLine.setName (\"covered\");\n            // assign attribute __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive.setName (\"fragment\");\n            // assign attribute __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand.setName (\"coveredBy\");\n            // assign attribute __parentOperand_covered_line\n            __parentOperand_covered_line.setName (\"covered\");\n            // assign attribute __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo.setName (\"coveredBy\");\n            // assign attribute __parentCombo_covered_line\n            __parentCombo_covered_line.setName (\"covered\");\n            // assign attribute __combo_enclosingInteraction_interaction\n            __combo_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n            // assign attribute __interaction_fragment_combo\n            __interaction_fragment_combo.setName (\"fragment\");\n            // assign attribute __line_coveredBy_operand\n            __line_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_line\n            __operand_covered_line.setName (\"covered\");\n            // assign attribute __operand_guard_guard\n            __operand_guard_guard.setName (\"guard\");\n            // assign attribute __guard_specification_spec\n            __guard_specification_spec.setName (\"specification\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__sysLine_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,spec,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentCombo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,combo,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageReceive,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_covered_sysLine,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageSend,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__sysLine_coveredBy_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__sysLine_coveredBy_parentCombo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_fragment_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__guard_specification_spec,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__sysLine_coveredBy_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_guard_guard,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_covered_sysLine,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__sysLine_coveredBy_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,guard,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_sysLine,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_covered_sysLine,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,operand,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_enclosingInteraction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_covered_sysLine,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            __operand_covered_sysLine.setTrg( sysLine);\n\n\n            // create link\n            __sysLine_coveredBy_parentOperand.setSrc( sysLine);\n\n\n            // create link\n            __sysLine_coveredBy_combo.setSrc( sysLine);\n\n\n            // create link\n            __parentCombo_covered_sysLine.setTrg( sysLine);\n\n\n            // create link\n            __sysLine_coveredBy_messageSend.setSrc( sysLine);\n\n\n            // create link\n            __sysLine_coveredBy_operand.setSrc( sysLine);\n\n\n            // create link\n            __combo_covered_sysLine.setTrg( sysLine);\n\n\n            // create link\n            __messageSend_covered_sysLine.setTrg( sysLine);\n\n\n            // create link\n            __sysLine_coveredBy_parentCombo.setSrc( sysLine);\n\n\n            // create link\n            __parentOperand_covered_sysLine.setTrg( sysLine);\n\n\n            // create link\n            __sysLine_coveredBy_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageSend_covered_sysLine.setSrc( messageSend);\n\n\n            // create link\n            __combo_enclosingInteraction_interaction.setSrc( combo);\n\n\n            // create link\n            __interaction_fragment_combo.setTrg( combo);\n\n\n            // create link\n            __sysLine_coveredBy_combo.setTrg( combo);\n\n\n            // create link\n            __combo_covered_sysLine.setSrc( combo);\n\n\n            // create link\n            __operand_covered_sysLine.setSrc( operand);\n\n\n            // create link\n            __operand_covered_line.setSrc( operand);\n\n\n            // create link\n            __line_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __sysLine_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __operand_guard_guard.setSrc( operand);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n            // create link\n            __parentOperand_covered_sysLine.setSrc( parentOperand);\n\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentOperand_covered_line.setSrc( parentOperand);\n\n\n            // create link\n            __sysLine_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __sysLine_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n            // create link\n            __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n            // create link\n            __parentCombo_covered_line.setSrc( parentCombo);\n\n\n            // create link\n            __parentCombo_covered_sysLine.setSrc( parentCombo);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n            // create link\n            __parentOperand_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_parentCombo.setSrc( line);\n\n\n            // create link\n            __operand_covered_line.setTrg( line);\n\n\n            // create link\n            __parentCombo_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_operand.setSrc( line);\n\n\n            // create link\n            __interaction_fragment_combo.setSrc( interaction);\n\n\n            // create link\n            __combo_enclosingInteraction_interaction.setTrg( interaction);\n\n\n            // create link\n            __guard_specification_spec.setSrc( guard);\n\n\n            // create link\n            __operand_guard_guard.setTrg( guard);\n\n\n            // create link\n            __guard_specification_spec.setTrg( spec);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check object sysLine is really bound\n            JavaSDM.ensure ( sysLine != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects sysLine and line \n            JavaSDM.ensure ( !sysLine.equals (line) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __line_interaction_interaction\n            __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_lifeline_line\n            __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand.setName (\"operand\");\n            // assign attribute __line_interaction_interaction\n            __line_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_lifeline_line\n            __interaction_lifeline_line.setName (\"lifeline\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_interaction_interaction,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,line,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentOperand,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,sysLine,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentCombo,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,interaction,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_operand_parentOperand,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_lifeline_line,\"contextEdges\");\n\n            // create link\n            __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n            // create link\n            __interaction_lifeline_line.setTrg( line);\n\n\n            // create link\n            __line_interaction_interaction.setSrc( line);\n\n\n            // create link\n            __line_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __interaction_lifeline_line.setSrc( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match, Lifeline sysLine,
			MessageOccurrenceSpecification messageSend, CombinedFragment combo,
			InteractionOperand operand, InteractionOperand parentOperand,
			CombinedFragment parentCombo,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			Interaction interaction, InteractionConstraint guard,
			LiteralString spec);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      CombinedFragment combo = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      PackageDeclaration packageDeclaration = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      Actor sysActor = null;\n      ActorToLifeline sysActorToSysLine = null;\n      Lifeline sysLine = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      NormalStep step = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge flow__steps__step = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge step__stepAlternative__alt = null;\n      EMoflonEdge __sysLine_coveredBy_parentCombo = null;\n      EMoflonEdge __sysLine_coveredBy_parentOperand = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __combo_covered_sysLine = null;\n      EMoflonEdge __combo_enclosingInteraction_interaction = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge __interaction_fragment_combo = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge alt__ref__altFlow = null;\n      EMoflonEdge __messageSend_covered_sysLine = null;\n      EMoflonEdge __sysLine_coveredBy_combo = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __operand_covered_sysLine = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentCombo_covered_sysLine = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __parentOperand_covered_sysLine = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __sysLine_coveredBy_messageSend = null;\n      EMoflonEdge __sysLine_coveredBy_operand = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge step__actor__actor = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysActor\"));\n\n         // ensure correct type and really bound of object sysActor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         sysActor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysActorToSysLine\"));\n\n         // ensure correct type and really bound of object sysActorToSysLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         sysActorToSysLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"sysLine\"));\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actorToLine \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object step\n         step = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // create object alt\n         alt = UseCaseDSLFactory.eINSTANCE.createAlternativeFlowAlternative();\n\n         // create object altFlow\n         altFlow = UseCaseDSLFactory.eINSTANCE.createAlternativeFlow();\n\n         // assign attribute alt\n         alt.setCondition ((java.lang.String)csp.getValue(\"alt\",\"condition\"));\n         // assign attribute altFlow\n         altFlow.setName ((java.lang.String)csp.getValue(\"altFlow\",\"name\"));\n\n         // create link\n         step.setActor( actor);\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         \tflow.getSteps().add(step); // add link\n\n\n         // create link\n         \tstep.getStepAlternative().add(alt); // add link\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(alt,altFlow,\"ref\");\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object sysActor is really bound\n         JavaSDM.ensure ( sysActor != null );\n         // check object sysActorToSysLine is really bound\n         JavaSDM.ensure ( sysActorToSysLine != null );\n         // check object sysLine is really bound\n         JavaSDM.ensure ( sysLine != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects sysActor and actor \n         JavaSDM.ensure ( !sysActor.equals (actor) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actor \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actor) );\n\n         // check isomorphic binding between objects sysLine and actor \n         JavaSDM.ensure ( !sysLine.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlowToOperand and actorToLine \n         JavaSDM.ensure ( !altFlowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToParentOperand and actorToLine \n         JavaSDM.ensure ( !flowToParentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects packageDeclaration and actorToLine \n         JavaSDM.ensure ( !packageDeclaration.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentCombo and actorToLine \n         JavaSDM.ensure ( !parentCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentOperand and actorToLine \n         JavaSDM.ensure ( !parentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysActor and actorToLine \n         JavaSDM.ensure ( !sysActor.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysActorToSysLine and actorToLine \n         JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects sysLine and actorToLine \n         JavaSDM.ensure ( !sysLine.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects packageDeclaration and alt \n         JavaSDM.ensure ( !packageDeclaration.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects sysActor and alt \n         JavaSDM.ensure ( !sysActor.equals (alt) );\n\n         // check isomorphic binding between objects sysActorToSysLine and alt \n         JavaSDM.ensure ( !sysActorToSysLine.equals (alt) );\n\n         // check isomorphic binding between objects sysLine and alt \n         JavaSDM.ensure ( !sysLine.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlow \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects sysActor and altFlow \n         JavaSDM.ensure ( !sysActor.equals (altFlow) );\n\n         // check isomorphic binding between objects sysActorToSysLine and altFlow \n         JavaSDM.ensure ( !sysActorToSysLine.equals (altFlow) );\n\n         // check isomorphic binding between objects sysLine and altFlow \n         JavaSDM.ensure ( !sysLine.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects sysActor and altFlowToOperand \n         JavaSDM.ensure ( !sysActor.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and altFlowToOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects sysLine and altFlowToOperand \n         JavaSDM.ensure ( !sysLine.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and alternative1ToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects sysActor and alternative1ToOperand \n         JavaSDM.ensure ( !sysActor.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and alternative1ToOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects sysLine and alternative1ToOperand \n         JavaSDM.ensure ( !sysLine.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects sysActor and combo \n         JavaSDM.ensure ( !sysActor.equals (combo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and combo \n         JavaSDM.ensure ( !sysActorToSysLine.equals (combo) );\n\n         // check isomorphic binding between objects sysLine and combo \n         JavaSDM.ensure ( !sysLine.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects sysActor and flow \n         JavaSDM.ensure ( !sysActor.equals (flow) );\n\n         // check isomorphic binding between objects sysActorToSysLine and flow \n         JavaSDM.ensure ( !sysActorToSysLine.equals (flow) );\n\n         // check isomorphic binding between objects sysLine and flow \n         JavaSDM.ensure ( !sysLine.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToParentOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects sysActor and flowToParentOperand \n         JavaSDM.ensure ( !sysActor.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and flowToParentOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects sysLine and flowToParentOperand \n         JavaSDM.ensure ( !sysLine.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects packageDeclaration and guard \n         JavaSDM.ensure ( !packageDeclaration.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects sysActor and guard \n         JavaSDM.ensure ( !sysActor.equals (guard) );\n\n         // check isomorphic binding between objects sysActorToSysLine and guard \n         JavaSDM.ensure ( !sysActorToSysLine.equals (guard) );\n\n         // check isomorphic binding between objects sysLine and guard \n         JavaSDM.ensure ( !sysLine.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects sysActor and interaction \n         JavaSDM.ensure ( !sysActor.equals (interaction) );\n\n         // check isomorphic binding between objects sysActorToSysLine and interaction \n         JavaSDM.ensure ( !sysActorToSysLine.equals (interaction) );\n\n         // check isomorphic binding between objects sysLine and interaction \n         JavaSDM.ensure ( !sysLine.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects sysActor and line \n         JavaSDM.ensure ( !sysActor.equals (line) );\n\n         // check isomorphic binding between objects sysActorToSysLine and line \n         JavaSDM.ensure ( !sysActorToSysLine.equals (line) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysActor and messageReceive \n         JavaSDM.ensure ( !sysActor.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysActorToSysLine and messageReceive \n         JavaSDM.ensure ( !sysActorToSysLine.equals (messageReceive) );\n\n         // check isomorphic binding between objects sysLine and messageReceive \n         JavaSDM.ensure ( !sysLine.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects sysActor and messageSend \n         JavaSDM.ensure ( !sysActor.equals (messageSend) );\n\n         // check isomorphic binding between objects sysActorToSysLine and messageSend \n         JavaSDM.ensure ( !sysActorToSysLine.equals (messageSend) );\n\n         // check isomorphic binding between objects sysLine and messageSend \n         JavaSDM.ensure ( !sysLine.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects sysActor and operand \n         JavaSDM.ensure ( !sysActor.equals (operand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and operand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (operand) );\n\n         // check isomorphic binding between objects sysLine and operand \n         JavaSDM.ensure ( !sysLine.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and packageDeclaration \n         JavaSDM.ensure ( !parentCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and packageDeclaration \n         JavaSDM.ensure ( !parentOperand.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects spec and packageDeclaration \n         JavaSDM.ensure ( !spec.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToCombo and packageDeclaration \n         JavaSDM.ensure ( !stepToCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysActor and packageDeclaration \n         JavaSDM.ensure ( !sysActor.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysActorToSysLine and packageDeclaration \n         JavaSDM.ensure ( !sysActorToSysLine.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects sysLine and packageDeclaration \n         JavaSDM.ensure ( !sysLine.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects sysActor and parentCombo \n         JavaSDM.ensure ( !sysActor.equals (parentCombo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and parentCombo \n         JavaSDM.ensure ( !sysActorToSysLine.equals (parentCombo) );\n\n         // check isomorphic binding between objects sysLine and parentCombo \n         JavaSDM.ensure ( !sysLine.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects sysActor and parentOperand \n         JavaSDM.ensure ( !sysActor.equals (parentOperand) );\n\n         // check isomorphic binding between objects sysActorToSysLine and parentOperand \n         JavaSDM.ensure ( !sysActorToSysLine.equals (parentOperand) );\n\n         // check isomorphic binding between objects sysLine and parentOperand \n         JavaSDM.ensure ( !sysLine.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects sysActor and spec \n         JavaSDM.ensure ( !sysActor.equals (spec) );\n\n         // check isomorphic binding between objects sysActorToSysLine and spec \n         JavaSDM.ensure ( !sysActorToSysLine.equals (spec) );\n\n         // check isomorphic binding between objects sysLine and spec \n         JavaSDM.ensure ( !sysLine.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects sysActor and step \n         JavaSDM.ensure ( !sysActor.equals (step) );\n\n         // check isomorphic binding between objects sysActorToSysLine and step \n         JavaSDM.ensure ( !sysActorToSysLine.equals (step) );\n\n         // check isomorphic binding between objects sysLine and step \n         JavaSDM.ensure ( !sysLine.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects sysActor and stepToCombo \n         JavaSDM.ensure ( !sysActor.equals (stepToCombo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and stepToCombo \n         JavaSDM.ensure ( !sysActorToSysLine.equals (stepToCombo) );\n\n         // check isomorphic binding between objects sysLine and stepToCombo \n         JavaSDM.ensure ( !sysLine.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects sysActorToSysLine and sysActor \n         JavaSDM.ensure ( !sysActorToSysLine.equals (sysActor) );\n\n         // check isomorphic binding between objects sysLine and sysActor \n         JavaSDM.ensure ( !sysLine.equals (sysActor) );\n\n         // check isomorphic binding between objects useCase and sysActor \n         JavaSDM.ensure ( !useCase.equals (sysActor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysActor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysActor) );\n\n         // check isomorphic binding between objects sysLine and sysActorToSysLine \n         JavaSDM.ensure ( !sysLine.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCase and sysActorToSysLine \n         JavaSDM.ensure ( !useCase.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysActorToSysLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysActorToSysLine) );\n\n         // check isomorphic binding between objects useCase and sysLine \n         JavaSDM.ensure ( !useCase.equals (sysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and sysLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (sysLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object flow__steps__step\n         flow__steps__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_line\n         __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__stepAlternative__alt\n         step__stepAlternative__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __sysLine_coveredBy_parentCombo\n         __sysLine_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __sysLine_coveredBy_parentOperand\n         __sysLine_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __guard_specification_spec\n         __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_covered_sysLine\n         __combo_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_enclosingInteraction_interaction\n         __combo_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_fragment_combo\n         __interaction_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_covered_line\n         __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alt__ref__altFlow\n         alt__ref__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_covered_sysLine\n         __messageSend_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __sysLine_coveredBy_combo\n         __sysLine_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentCombo_covered_line\n         __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_sysLine\n         __operand_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentCombo_covered_sysLine\n         __parentCombo_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_covered_sysLine\n         __parentOperand_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_guard_guard\n         __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __sysLine_coveredBy_messageSend\n         __sysLine_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __sysLine_coveredBy_operand\n         __sysLine_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_operand\n         __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__actor__actor\n         step__actor__actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltUserStepNFToComboRule\");\n         // assign attribute __sysLine_coveredBy_messageSend\n         __sysLine_coveredBy_messageSend.setName (\"coveredBy\");\n         // assign attribute __messageSend_covered_sysLine\n         __messageSend_covered_sysLine.setName (\"covered\");\n         // assign attribute __sysLine_coveredBy_combo\n         __sysLine_coveredBy_combo.setName (\"coveredBy\");\n         // assign attribute __combo_covered_sysLine\n         __combo_covered_sysLine.setName (\"covered\");\n         // assign attribute __sysLine_coveredBy_operand\n         __sysLine_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_sysLine\n         __operand_covered_sysLine.setName (\"covered\");\n         // assign attribute __sysLine_coveredBy_parentOperand\n         __sysLine_coveredBy_parentOperand.setName (\"coveredBy\");\n         // assign attribute __parentOperand_covered_sysLine\n         __parentOperand_covered_sysLine.setName (\"covered\");\n         // assign attribute __sysLine_coveredBy_parentCombo\n         __sysLine_coveredBy_parentCombo.setName (\"coveredBy\");\n         // assign attribute __parentCombo_covered_sysLine\n         __parentCombo_covered_sysLine.setName (\"covered\");\n         // assign attribute __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive.setName (\"fragment\");\n         // assign attribute __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand.setName (\"coveredBy\");\n         // assign attribute __parentOperand_covered_line\n         __parentOperand_covered_line.setName (\"covered\");\n         // assign attribute __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo.setName (\"coveredBy\");\n         // assign attribute __parentCombo_covered_line\n         __parentCombo_covered_line.setName (\"covered\");\n         // assign attribute __combo_enclosingInteraction_interaction\n         __combo_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n         // assign attribute __interaction_fragment_combo\n         __interaction_fragment_combo.setName (\"fragment\");\n         // assign attribute flow__steps__step\n         flow__steps__step.setName (\"steps\");\n         // assign attribute step__stepAlternative__alt\n         step__stepAlternative__alt.setName (\"stepAlternative\");\n         // assign attribute step__actor__actor\n         step__actor__actor.setName (\"actor\");\n         // assign attribute alt__ref__altFlow\n         alt__ref__altFlow.setName (\"ref\");\n         // assign attribute __line_coveredBy_operand\n         __line_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_line\n         __operand_covered_line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute __operand_guard_guard\n         __operand_guard_guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute __guard_specification_spec\n         __guard_specification_spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,flow__steps__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__stepAlternative__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__sysLine_coveredBy_parentCombo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__sysLine_coveredBy_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentCombo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__guard_specification_spec,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_covered_sysLine,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_enclosingInteraction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_fragment_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt__ref__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_covered_sysLine,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__sysLine_coveredBy_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentCombo_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_sysLine,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentCombo_covered_sysLine,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_covered_sysLine,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_guard_guard,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__sysLine_coveredBy_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__sysLine_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__actor__actor,\"createdEdges\");\n\n         // create link\n         step__actor__actor.setTrg( actor);\n\n\n         // create link\n         __sysLine_coveredBy_operand.setSrc( sysLine);\n\n\n         // create link\n         __parentCombo_covered_sysLine.setTrg( sysLine);\n\n\n         // create link\n         __sysLine_coveredBy_messageSend.setSrc( sysLine);\n\n\n         // create link\n         __sysLine_coveredBy_combo.setSrc( sysLine);\n\n\n         // create link\n         __operand_covered_sysLine.setTrg( sysLine);\n\n\n         // create link\n         __sysLine_coveredBy_parentOperand.setSrc( sysLine);\n\n\n         // create link\n         __sysLine_coveredBy_parentCombo.setSrc( sysLine);\n\n\n         // create link\n         __parentOperand_covered_sysLine.setTrg( sysLine);\n\n\n         // create link\n         __combo_covered_sysLine.setTrg( sysLine);\n\n\n         // create link\n         __messageSend_covered_sysLine.setTrg( sysLine);\n\n\n         // create link\n         __messageSend_covered_sysLine.setSrc( messageSend);\n\n\n         // create link\n         __sysLine_coveredBy_messageSend.setTrg( messageSend);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         __interaction_fragment_combo.setTrg( combo);\n\n\n         // create link\n         __combo_covered_sysLine.setSrc( combo);\n\n\n         // create link\n         __combo_enclosingInteraction_interaction.setSrc( combo);\n\n\n         // create link\n         __sysLine_coveredBy_combo.setTrg( combo);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         __operand_covered_line.setSrc( operand);\n\n\n         // create link\n         __operand_covered_sysLine.setSrc( operand);\n\n\n         // create link\n         __operand_guard_guard.setSrc( operand);\n\n\n         // create link\n         __line_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         __sysLine_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __sysLine_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __parentOperand_covered_sysLine.setSrc( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         __parentOperand_covered_line.setSrc( parentOperand);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __parentCombo_covered_line.setSrc( parentCombo);\n\n\n         // create link\n         __parentCombo_covered_sysLine.setSrc( parentCombo);\n\n\n         // create link\n         __sysLine_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         flow__steps__step.setSrc( flow);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __operand_covered_line.setTrg( line);\n\n\n         // create link\n         __parentOperand_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_operand.setSrc( line);\n\n\n         // create link\n         __parentCombo_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setSrc( line);\n\n\n         // create link\n         __combo_enclosingInteraction_interaction.setTrg( interaction);\n\n\n         // create link\n         __interaction_fragment_combo.setSrc( interaction);\n\n\n         // create link\n         flow__steps__step.setTrg( step);\n\n\n         // create link\n         step__stepAlternative__alt.setSrc( step);\n\n\n         // create link\n         step__actor__actor.setSrc( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         step__stepAlternative__alt.setTrg( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         alt__ref__altFlow.setSrc( alt);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         __guard_specification_spec.setSrc( guard);\n\n\n         // create link\n         __operand_guard_guard.setTrg( guard);\n\n\n         // create link\n         __guard_specification_spec.setTrg( spec);\n\n\n         // create link\n         alt__ref__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,packageDeclaration,actor,sysActor,sysLine,sysActorToSysLine,messageSend,combo,operand,parentOperand,parentCombo,flow,flowToParentOperand,messageReceive,line,interaction,useCase,useCaseToInteraction,actorToLine,step,alt,stepToCombo,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      Lifeline sysLine = null;\n      EMoflonEdge __packageDeclaration_actors_sysActor = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      EMoflonEdge __sysActorToSysLine_source_sysActor = null;\n      EMoflonEdge __parentCombo_covered_sysLine = null;\n      EMoflonEdge __sysLine_coveredBy_parentOperand = null;\n      EMoflonEdge __sysActorToSysLine_target_sysLine = null;\n      EMoflonEdge __sysLine_coveredBy_operand = null;\n      EMoflonEdge __parentOperand_covered_sysLine = null;\n      EMoflonEdge __sysLine_coveredBy_parentCombo = null;\n      EMoflonEdge __messageSend_covered_sysLine = null;\n      EMoflonEdge __sysLine_coveredBy_combo = null;\n      EMoflonEdge __combo_covered_sysLine = null;\n      EMoflonEdge __operand_covered_sysLine = null;\n      EMoflonEdge __sysLine_coveredBy_messageSend = null;\n      EMoflonEdge __combo_enclosingInteraction_interaction = null;\n      EMoflonEdge __interaction_fragment_combo = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __guard_specification_spec = null;\n      CSP csp = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterInteractionToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Actor actor = null;\n      Iterator fujaba__IterLineToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n      Actor sysActor = null;\n      Iterator fujaba__IterSysLineToSysActorToSysLine = null;\n      ActorToLifeline sysActorToSysLine = null;\n      NamedFlow flow = null;\n      Iterator fujaba__IterParentOperandToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltUserStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (match.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (match.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (match.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         _TmpObject = (match.getObject(\"sysLine\"));\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects sysLine and line \n         JavaSDM.ensure ( !sysLine.equals (line) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link target from parentOperand to flowToParentOperand\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,FlowToInteractionFragment.class,\"target\")).iterator ();\n\n         while ( fujaba__IterParentOperandToFlowToParentOperand.hasNext () )\n         {\n            try\n            {\n               flowToParentOperand = (FlowToInteractionFragment) fujaba__IterParentOperandToFlowToParentOperand.next ();\n\n               // check object flowToParentOperand is really bound\n               JavaSDM.ensure ( flowToParentOperand != null );\n               // bind object\n               _TmpObject = flowToParentOperand.getSource ();\n\n               // ensure correct type and really bound of object flow\n               JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n               flow = (NamedFlow) _TmpObject;\n\n               // iterate to-many link target from sysLine to sysActorToSysLine\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToSysActorToSysLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,ActorToLifeline.class,\"target\")).iterator ();\n\n               while ( fujaba__IterSysLineToSysActorToSysLine.hasNext () )\n               {\n                  try\n                  {\n                     sysActorToSysLine = (ActorToLifeline) fujaba__IterSysLineToSysActorToSysLine.next ();\n\n                     // check object sysActorToSysLine is really bound\n                     JavaSDM.ensure ( sysActorToSysLine != null );\n                     // bind object\n                     sysActor = sysActorToSysLine.getSource ();\n\n                     // check object sysActor is really bound\n                     JavaSDM.ensure ( sysActor != null );\n\n                     // iterate to-many link target from line to actorToLine\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,ActorToLifeline.class,\"target\")).iterator ();\n\n                     while ( fujaba__IterLineToActorToLine.hasNext () )\n                     {\n                        try\n                        {\n                           actorToLine = (ActorToLifeline) fujaba__IterLineToActorToLine.next ();\n\n                           // check object actorToLine is really bound\n                           JavaSDM.ensure ( actorToLine != null );\n                           // check isomorphic binding between objects sysActorToSysLine and actorToLine \n                           JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n                           // bind object\n                           actor = actorToLine.getSource ();\n\n                           // check object actor is really bound\n                           JavaSDM.ensure ( actor != null );\n\n                           // check isomorphic binding between objects sysActor and actor \n                           JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                           // iterate to-many link target from interaction to useCaseToInteraction\n                           fujaba__Success = false;\n\n                           fujaba__IterInteractionToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,UseCaseToInteraction.class,\"target\")).iterator ();\n\n                           while ( fujaba__IterInteractionToUseCaseToInteraction.hasNext () )\n                           {\n                              try\n                              {\n                                 useCaseToInteraction = (UseCaseToInteraction) fujaba__IterInteractionToUseCaseToInteraction.next ();\n\n                                 // check object useCaseToInteraction is really bound\n                                 JavaSDM.ensure ( useCaseToInteraction != null );\n                                 // bind object\n                                 useCase = useCaseToInteraction.getSource ();\n\n                                 // check object useCase is really bound\n                                 JavaSDM.ensure ( useCase != null );\n\n                                 // story node \'find context\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object actor is really bound\n                                    JavaSDM.ensure ( actor != null );\n                                    // check object actorToLine is really bound\n                                    JavaSDM.ensure ( actorToLine != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object flow is really bound\n                                    JavaSDM.ensure ( flow != null );\n                                    // check object flowToParentOperand is really bound\n                                    JavaSDM.ensure ( flowToParentOperand != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check object sysActor is really bound\n                                    JavaSDM.ensure ( sysActor != null );\n                                    // check object sysActorToSysLine is really bound\n                                    JavaSDM.ensure ( sysActorToSysLine != null );\n                                    // check object sysLine is really bound\n                                    JavaSDM.ensure ( sysLine != null );\n                                    // check object useCase is really bound\n                                    JavaSDM.ensure ( useCase != null );\n                                    // check object useCaseToInteraction is really bound\n                                    JavaSDM.ensure ( useCaseToInteraction != null );\n                                    // check isomorphic binding between objects sysActor and actor \n                                    JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                                    // check isomorphic binding between objects sysActorToSysLine and actorToLine \n                                    JavaSDM.ensure ( !sysActorToSysLine.equals (actorToLine) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects sysLine and line \n                                    JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // bind object\n                                    packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n                                    // check object packageDeclaration is really bound\n                                    JavaSDM.ensure ( packageDeclaration != null );\n\n                                    // check if contained via correct reference\n                                    JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n                                    // check link actors from sysActor to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (sysActor.eContainer()\n                                    ));\n\n                                    // check link flows from flow to useCase\n                                    JavaSDM.ensure (useCase.equals (flow.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link source from actorToLine to actor\n                                    JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                                    ));\n\n                                    // check link source from flowToParentOperand to flow\n                                    JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                                    ));\n\n                                    // check link source from sysActorToSysLine to sysActor\n                                    JavaSDM.ensure (sysActor.equals (sysActorToSysLine.getSource ()\n                                    ));\n\n                                    // check link source from useCaseToInteraction to useCase\n                                    JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link target from actorToLine to line\n                                    JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                                    ));\n\n                                    // check link target from flowToParentOperand to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                                    ));\n\n                                    // check link target from sysActorToSysLine to sysLine\n                                    JavaSDM.ensure (sysLine.equals (sysActorToSysLine.getTarget ()\n                                    ));\n\n                                    // check link target from useCaseToInteraction to interaction\n                                    JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                                    ));\n\n                                    // check link useCases from useCase to packageDeclaration\n                                    JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                                    ));\n\n                                    // check link coveredBy from line to operand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                    // check link coveredBy from line to parentCombo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                    // check link coveredBy from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // check link coveredBy from combo to sysLine\n                                    JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                    // check link coveredBy from messageSend to sysLine\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                    // check link coveredBy from operand to sysLine\n                                    JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                    // check link coveredBy from parentCombo to sysLine\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                    // check link coveredBy from parentOperand to sysLine\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                    // create object __packageDeclaration_actors_sysActor\n                                    __packageDeclaration_actors_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object isApplicableMatch\n                                    isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                                    // create object __packageDeclaration_actors_actor\n                                    __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __packageDeclaration_useCases_useCase\n                                    __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __actorToLine_source_actor\n                                    __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysActorToSysLine_source_sysActor\n                                    __sysActorToSysLine_source_sysActor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parentCombo_covered_sysLine\n                                    __parentCombo_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysLine_coveredBy_parentOperand\n                                    __sysLine_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysActorToSysLine_target_sysLine\n                                    __sysActorToSysLine_target_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysLine_coveredBy_operand\n                                    __sysLine_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parentOperand_covered_sysLine\n                                    __parentOperand_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysLine_coveredBy_parentCombo\n                                    __sysLine_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __messageSend_covered_sysLine\n                                    __messageSend_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysLine_coveredBy_combo\n                                    __sysLine_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __combo_covered_sysLine\n                                    __combo_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __operand_covered_sysLine\n                                    __operand_covered_sysLine = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __sysLine_coveredBy_messageSend\n                                    __sysLine_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __combo_enclosingInteraction_interaction\n                                    __combo_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __interaction_fragment_combo\n                                    __interaction_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __line_coveredBy_operand\n                                    __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __operand_guard_guard\n                                    __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __operand_covered_line\n                                    __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __line_coveredBy_parentOperand\n                                    __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parentOperand_covered_line\n                                    __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flowToParentOperand_target_parentOperand\n                                    __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parentOperand_fragment_messageReceive\n                                    __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __messageReceive_enclosingOperand_parentOperand\n                                    __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parentCombo_operand_parentOperand\n                                    __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __parentCombo_covered_line\n                                    __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __line_coveredBy_parentCombo\n                                    __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCase_flows_flow\n                                    __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __flowToParentOperand_source_flow\n                                    __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __actorToLine_target_line\n                                    __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __line_interaction_interaction\n                                    __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __interaction_lifeline_line\n                                    __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCaseToInteraction_target_interaction\n                                    __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __useCaseToInteraction_source_useCase\n                                    __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // create object __guard_specification_spec\n                                    __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                                    // assign attribute __packageDeclaration_actors_actor\n                                    __packageDeclaration_actors_actor.setName (\"actors\");\n                                    // assign attribute __packageDeclaration_actors_sysActor\n                                    __packageDeclaration_actors_sysActor.setName (\"actors\");\n                                    // assign attribute __sysLine_coveredBy_messageSend\n                                    __sysLine_coveredBy_messageSend.setName (\"coveredBy\");\n                                    // assign attribute __messageSend_covered_sysLine\n                                    __messageSend_covered_sysLine.setName (\"covered\");\n                                    // assign attribute __sysLine_coveredBy_combo\n                                    __sysLine_coveredBy_combo.setName (\"coveredBy\");\n                                    // assign attribute __combo_covered_sysLine\n                                    __combo_covered_sysLine.setName (\"covered\");\n                                    // assign attribute __sysLine_coveredBy_operand\n                                    __sysLine_coveredBy_operand.setName (\"coveredBy\");\n                                    // assign attribute __operand_covered_sysLine\n                                    __operand_covered_sysLine.setName (\"covered\");\n                                    // assign attribute __sysLine_coveredBy_parentOperand\n                                    __sysLine_coveredBy_parentOperand.setName (\"coveredBy\");\n                                    // assign attribute __parentOperand_covered_sysLine\n                                    __parentOperand_covered_sysLine.setName (\"covered\");\n                                    // assign attribute __sysLine_coveredBy_parentCombo\n                                    __sysLine_coveredBy_parentCombo.setName (\"coveredBy\");\n                                    // assign attribute __parentCombo_covered_sysLine\n                                    __parentCombo_covered_sysLine.setName (\"covered\");\n                                    // assign attribute __sysActorToSysLine_source_sysActor\n                                    __sysActorToSysLine_source_sysActor.setName (\"source\");\n                                    // assign attribute __sysActorToSysLine_target_sysLine\n                                    __sysActorToSysLine_target_sysLine.setName (\"target\");\n                                    // assign attribute __parentCombo_operand_parentOperand\n                                    __parentCombo_operand_parentOperand.setName (\"operand\");\n                                    // assign attribute __parentOperand_fragment_messageReceive\n                                    __parentOperand_fragment_messageReceive.setName (\"fragment\");\n                                    // assign attribute __messageReceive_enclosingOperand_parentOperand\n                                    __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                                    // assign attribute __flowToParentOperand_source_flow\n                                    __flowToParentOperand_source_flow.setName (\"source\");\n                                    // assign attribute __flowToParentOperand_target_parentOperand\n                                    __flowToParentOperand_target_parentOperand.setName (\"target\");\n                                    // assign attribute __line_coveredBy_parentOperand\n                                    __line_coveredBy_parentOperand.setName (\"coveredBy\");\n                                    // assign attribute __parentOperand_covered_line\n                                    __parentOperand_covered_line.setName (\"covered\");\n                                    // assign attribute __line_coveredBy_parentCombo\n                                    __line_coveredBy_parentCombo.setName (\"coveredBy\");\n                                    // assign attribute __parentCombo_covered_line\n                                    __parentCombo_covered_line.setName (\"covered\");\n                                    // assign attribute __combo_enclosingInteraction_interaction\n                                    __combo_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n                                    // assign attribute __interaction_fragment_combo\n                                    __interaction_fragment_combo.setName (\"fragment\");\n                                    // assign attribute __line_interaction_interaction\n                                    __line_interaction_interaction.setName (\"interaction\");\n                                    // assign attribute __interaction_lifeline_line\n                                    __interaction_lifeline_line.setName (\"lifeline\");\n                                    // assign attribute __useCase_flows_flow\n                                    __useCase_flows_flow.setName (\"flows\");\n                                    // assign attribute __useCaseToInteraction_source_useCase\n                                    __useCaseToInteraction_source_useCase.setName (\"source\");\n                                    // assign attribute __useCaseToInteraction_target_interaction\n                                    __useCaseToInteraction_target_interaction.setName (\"target\");\n                                    // assign attribute __packageDeclaration_useCases_useCase\n                                    __packageDeclaration_useCases_useCase.setName (\"useCases\");\n                                    // assign attribute __actorToLine_source_actor\n                                    __actorToLine_source_actor.setName (\"source\");\n                                    // assign attribute __actorToLine_target_line\n                                    __actorToLine_target_line.setName (\"target\");\n                                    // assign attribute __line_coveredBy_operand\n                                    __line_coveredBy_operand.setName (\"coveredBy\");\n                                    // assign attribute __operand_covered_line\n                                    __operand_covered_line.setName (\"covered\");\n                                    // assign attribute __operand_guard_guard\n                                    __operand_guard_guard.setName (\"guard\");\n                                    // assign attribute __guard_specification_spec\n                                    __guard_specification_spec.setName (\"specification\");\n\n                                    // create link\n                                    __packageDeclaration_actors_sysActor.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(actor);\n\n\n                                    // create link\n                                    __actorToLine_source_actor.setTrg( actor);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysActor);\n\n\n                                    // create link\n                                    __packageDeclaration_actors_sysActor.setTrg( sysActor);\n\n\n                                    // create link\n                                    __sysActorToSysLine_source_sysActor.setTrg( sysActor);\n\n\n                                    // create link\n                                    __parentCombo_covered_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_parentOperand.setSrc( sysLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_target_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_operand.setSrc( sysLine);\n\n\n                                    // create link\n                                    __parentOperand_covered_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_parentCombo.setSrc( sysLine);\n\n\n                                    // create link\n                                    __messageSend_covered_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_combo.setSrc( sysLine);\n\n\n                                    // create link\n                                    __combo_covered_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __operand_covered_sysLine.setTrg( sysLine);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_messageSend.setSrc( sysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_source_sysActor.setSrc( sysActorToSysLine);\n\n\n                                    // create link\n                                    __sysActorToSysLine_target_sysLine.setSrc( sysActorToSysLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(sysActorToSysLine);\n\n\n                                    // create link\n                                    __messageSend_covered_sysLine.setSrc( messageSend);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_messageSend.setTrg( messageSend);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(messageSend);\n\n\n                                    // create link\n                                    __combo_covered_sysLine.setSrc( combo);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(combo);\n\n\n                                    // create link\n                                    __combo_enclosingInteraction_interaction.setSrc( combo);\n\n\n                                    // create link\n                                    __interaction_fragment_combo.setTrg( combo);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_combo.setTrg( combo);\n\n\n                                    // create link\n                                    __line_coveredBy_operand.setTrg( operand);\n\n\n                                    // create link\n                                    __operand_covered_sysLine.setSrc( operand);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(operand);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_operand.setTrg( operand);\n\n\n                                    // create link\n                                    __operand_guard_guard.setSrc( operand);\n\n\n                                    // create link\n                                    __operand_covered_line.setSrc( operand);\n\n\n                                    // create link\n                                    __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                                    // create link\n                                    __parentOperand_covered_line.setSrc( parentOperand);\n\n\n                                    // create link\n                                    __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                                    // create link\n                                    __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n                                    // create link\n                                    __parentOperand_covered_sysLine.setSrc( parentOperand);\n\n\n                                    // create link\n                                    __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                                    // create link\n                                    __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                                    // create link\n                                    __parentCombo_covered_line.setSrc( parentCombo);\n\n\n                                    // create link\n                                    __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                                    // create link\n                                    __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n                                    // create link\n                                    __parentCombo_covered_sysLine.setSrc( parentCombo);\n\n\n                                    // create link\n                                    __sysLine_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                                    // create link\n                                    __useCase_flows_flow.setTrg( flow);\n\n\n                                    // create link\n                                    __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flow);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                                    // create link\n                                    __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                                    // create link\n                                    __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                                    // create link\n                                    __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n                                    // create link\n                                    __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(messageReceive);\n\n\n                                    // create link\n                                    __actorToLine_target_line.setTrg( line);\n\n\n                                    // create link\n                                    __line_interaction_interaction.setSrc( line);\n\n\n                                    // create link\n                                    __operand_covered_line.setTrg( line);\n\n\n                                    // create link\n                                    __line_coveredBy_parentCombo.setSrc( line);\n\n\n                                    // create link\n                                    __interaction_lifeline_line.setTrg( line);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(line);\n\n\n                                    // create link\n                                    __parentCombo_covered_line.setTrg( line);\n\n\n                                    // create link\n                                    __parentOperand_covered_line.setTrg( line);\n\n\n                                    // create link\n                                    __line_coveredBy_parentOperand.setSrc( line);\n\n\n                                    // create link\n                                    __line_coveredBy_operand.setSrc( line);\n\n\n                                    // create link\n                                    __line_interaction_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    __interaction_fragment_combo.setSrc( interaction);\n\n\n                                    // create link\n                                    __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                                    // create link\n                                    __combo_enclosingInteraction_interaction.setTrg( interaction);\n\n\n                                    // create link\n                                    __interaction_lifeline_line.setSrc( interaction);\n\n\n                                    // create link\n                                    __useCase_flows_flow.setSrc( useCase);\n\n\n                                    // create link\n                                    __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                                    // create link\n                                    __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                                    // create link\n                                    __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                                    // create link\n                                    __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                                    // create link\n                                    __actorToLine_target_line.setSrc( actorToLine);\n\n\n                                    // create link\n                                    __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(guard);\n\n\n                                    // create link\n                                    __operand_guard_guard.setTrg( guard);\n\n\n                                    // create link\n                                    __guard_specification_spec.setSrc( guard);\n\n\n                                    // create link\n                                    __guard_specification_spec.setTrg( spec);\n\n\n                                    // create link\n                                    isApplicableMatch.getAllContextElements().add(spec);\n\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_messageReceive,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__guard_specification_spec,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_operand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentOperand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysLine_coveredBy_messageSend,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysLine_coveredBy_parentCombo,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_covered_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_covered_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_enclosingOperand_parentOperand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysLine_coveredBy_combo,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_covered_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_guard_guard,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysActorToSysLine_target_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_enclosingInteraction_interaction,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysLine_coveredBy_operand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_covered_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_fragment_combo,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentCombo,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_covered_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysLine_coveredBy_parentOperand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__sysActorToSysLine_source_sysActor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_sysActor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_covered_sysLine,\"allContextElements\");\n\n                                    // create link\n                                    org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n                                    // story node \'solve CSP\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,packageDeclaration,actor,sysActor,sysLine,sysActorToSysLine,messageSend,combo,operand,parentOperand,parentCombo,flow,flowToParentOperand,messageReceive,line,interaction,useCase,useCaseToInteraction,actorToLine,guard,spec));\n\n                                       // ensure correct type and really bound of object csp\n                                       JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                       csp = (CSP) _TmpObject;\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    // statement node \'check CSP\'\n                                    fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                                    if (fujaba__Success)\n                                    {\n                                       // story node \'add match to rule result\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check object isApplicableMatch is really bound\n                                          JavaSDM.ensure ( isApplicableMatch != null );\n                                          // check object ruleresult is really bound\n                                          JavaSDM.ensure ( ruleresult != null );\n                                          // assign attribute isApplicableMatch\n                                          isApplicableMatch.setRuleName (\"AltUserStepNFToComboRule\");\n                                          // assign attribute ruleresult\n                                          ruleresult.setSuccess (true);\n\n                                          // create link\n                                          ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"sysLine\", sysLine);\nmatch.registerObject(\"messageSend\", messageSend);\nmatch.registerObject(\"combo\", combo);\nmatch.registerObject(\"operand\", operand);\nmatch.registerObject(\"parentOperand\", parentOperand);\nmatch.registerObject(\"parentCombo\", parentCombo);\nmatch.registerObject(\"messageReceive\", messageReceive);\nmatch.registerObject(\"line\", line);\nmatch.registerObject(\"interaction\", interaction);\nmatch.registerObject(\"guard\", guard);\nmatch.registerObject(\"spec\", spec);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match, Lifeline sysLine,
			MessageOccurrenceSpecification messageSend, CombinedFragment combo,
			InteractionOperand operand, InteractionOperand parentOperand,
			CombinedFragment parentCombo,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			Interaction interaction, InteractionConstraint guard,
			LiteralString spec);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", true, csp);\r\nvar_combo_interactionOperator.setValue(combo.getInteractionOperator());\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqInterOperKind eqInterOperKind = new EqInterOperKind();\r\n\r\ncsp.getConstraints().add(eqInterOperKind);\r\n\r\n// Solve CSP\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match, Lifeline sysLine,
			MessageOccurrenceSpecification messageSend, CombinedFragment combo,
			InteractionOperand operand, InteractionOperand parentOperand,
			CombinedFragment parentCombo,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			Interaction interaction, InteractionConstraint guard,
			LiteralString spec);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"person\");\r\nliteral0.setType(\"String\");\r\nVariable literal1 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal1\", true, csp);\r\nliteral1.setValue(\"system\");\r\nliteral1.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_actor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"actor.type\", true, csp);\r\nvar_actor_type.setValue(actor.getType());\r\nvar_actor_type.setType(\"EObject\");\r\nVariable var_sysActor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"sysActor.type\", true, csp);\r\nvar_sysActor_type.setValue(sysActor.getType());\r\nvar_sysActor_type.setType(\"EObject\");\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", true, csp);\r\nvar_guard_name.setValue(guard.getName());\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", true, csp);\r\nvar_spec_value.setValue(spec.getValue());\r\nvar_spec_value.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", csp);\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", csp);\r\nvar_alt_condition.setType(\"\");\r\n\r\n// Create constraints\r\nEqActorType eqActorType = new EqActorType();EqActorType eqActorType_0 = new EqActorType();Eq eq = new Eq();Eq eq_0 = new Eq();\r\n\r\ncsp.getConstraints().add(eqActorType);\r\ncsp.getConstraints().add(eqActorType_0);\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\n\r\n// Solve CSP\r\neqActorType.setRuleName(\"\");\r\neqActorType.solve(var_actor_type,literal0);\r\neqActorType_0.setRuleName(\"\");\r\neqActorType_0.solve(var_sysActor_type,literal1);\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"sysActor\",sysActor);\r\nisApplicableMatch.registerObject(\"sysLine\",sysLine);\r\nisApplicableMatch.registerObject(\"sysActorToSysLine\",sysActorToSysLine);\r\nisApplicableMatch.registerObject(\"messageSend\",messageSend);\r\nisApplicableMatch.registerObject(\"combo\",combo);\r\nisApplicableMatch.registerObject(\"operand\",operand);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"messageReceive\",messageReceive);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nisApplicableMatch.registerObject(\"guard\",guard);\r\nisApplicableMatch.registerObject(\"spec\",spec);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			PackageDeclaration packageDeclaration, Actor actor, Actor sysActor,
			Lifeline sysLine, ActorToLifeline sysActorToSysLine,
			MessageOccurrenceSpecification messageSend, CombinedFragment combo,
			InteractionOperand operand, InteractionOperand parentOperand,
			CombinedFragment parentCombo, NamedFlow flow,
			FlowToInteractionFragment flowToParentOperand,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			Interaction interaction, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction,
			ActorToLifeline actorToLine, InteractionConstraint guard,
			LiteralString spec);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"sysActor\", sysActor);\nruleresult.registerObject(\"sysLine\", sysLine);\nruleresult.registerObject(\"sysActorToSysLine\", sysActorToSysLine);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"actorToLine\", actorToLine);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult,
			EObject packageDeclaration, EObject actor, EObject sysActor,
			EObject sysLine, EObject sysActorToSysLine, EObject messageSend,
			EObject combo, EObject operand, EObject parentOperand,
			EObject parentCombo, EObject flow, EObject flowToParentOperand,
			EObject messageReceive, EObject line, EObject interaction,
			EObject useCase, EObject useCaseToInteraction, EObject actorToLine,
			EObject step, EObject alt, EObject stepToCombo,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"messageSend\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"combo\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getCombinedFragment()) && match.getObject(\"operand\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionOperand()) && match.getObject(\"messageReceive\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"guard\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionConstraint()) && match.getObject(\"spec\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getLiteralString());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_690943 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_11072 = null;\n      Interaction __DEC_operand_enclosingInteraction_768588 = null;\n      InteractionOperand __DEC_combo_fragment_736002 = null;\n      InteractionOperand __DEC_messageReceive_fragment_625578 = null;\n      InteractionOperand __DEC_messageSend_fragment_136431 = null;\n      InteractionOperand __DEC_operand_fragment_152494 = null;\n      Constraint __DEC_spec_specification_602542 = null;\n      InteractionOperand __DEC_guard_guard_475893 = null;\n      CombinedFragment __DEC_operand_operand_932854 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Lifeline sysLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // iterate to-many link coveredBy from sysLine to operand\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link coveredBy from sysLine to combo\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // bind object\n                     interaction = combo.getEnclosingInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // iterate to-many link coveredBy from sysLine to parentCombo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToParentCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToParentCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToParentCombo.next ();\n\n                           // ensure correct type and really bound of object parentCombo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           parentCombo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // iterate to-many link coveredBy from parentCombo to line\n                           fujaba__Success = false;\n\n                           fujaba__IterParentComboToLine = new ArrayList(parentCombo.getCovered()).iterator ();\n\n                           while ( fujaba__IterParentComboToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterParentComboToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check isomorphic binding between objects sysLine and line \n                                 JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                 // check link lifeline from line to interaction\n                                 JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = _edge_coveredBy.getTrg ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n                                 // check link coveredBy from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // check link coveredBy from messageSend to sysLine\n                                 JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                 // iterate to-many link coveredBy from sysLine to parentOperand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                       // ensure correct type and really bound of object parentOperand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       parentOperand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // check link operand from parentOperand to parentCombo\n                                       JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                       ));\n\n                                       // check link coveredBy from line to parentOperand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_690943 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_690943 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_690943 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_690943 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_690943.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_11072 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_11072 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_11072 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_11072 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_11072.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_768588 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_768588 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_768588 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_768588 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_768588.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_736002 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_736002 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_736002 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_736002 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_736002.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_736002 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_736002.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_625578 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_625578 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_625578 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_625578 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_625578.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_625578 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_625578.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_136431 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_136431 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_136431 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_136431 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_136431.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_136431 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_136431.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_152494 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_152494 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_152494 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_152494 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_152494.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_152494 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_152494.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_602542 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_602542 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_602542 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_602542.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_602542 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_602542.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_475893 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_475893 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_475893 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_475893.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_475893 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_475893.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_475893 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_475893.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_932854 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_932854 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_932854 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_932854.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_932854 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_932854.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_932854 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_932854.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to sysLine\n                                                JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to messageSend\n                                                JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_461(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_896385 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_436671 = null;\n      Interaction __DEC_operand_enclosingInteraction_986137 = null;\n      InteractionOperand __DEC_combo_fragment_948196 = null;\n      InteractionOperand __DEC_messageReceive_fragment_767112 = null;\n      InteractionOperand __DEC_messageSend_fragment_966387 = null;\n      InteractionOperand __DEC_operand_fragment_187677 = null;\n      Constraint __DEC_spec_specification_200089 = null;\n      InteractionOperand __DEC_guard_guard_742525 = null;\n      CombinedFragment __DEC_operand_operand_853918 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Lifeline sysLine = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // check link coveredBy from messageSend to sysLine\n         JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n         // iterate to-many link coveredBy from sysLine to combo\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               interaction = combo.getEnclosingInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link coveredBy from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link coveredBy from operand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n                     while ( fujaba__IterOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // iterate to-many link coveredBy from sysLine to parentOperand\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                 // ensure correct type and really bound of object parentOperand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 parentOperand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                                 // check object parentCombo is really bound\n                                 JavaSDM.ensure ( parentCombo != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                                 // check isomorphic binding between objects parentCombo and combo \n                                 JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                 // check link coveredBy from line to parentCombo\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                 // check link coveredBy from line to parentOperand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                 // check link coveredBy from parentCombo to sysLine\n                                 JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                 // iterate to-many link fragment from parentOperand to messageReceive\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                       // ensure correct type and really bound of object messageReceive\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // iterate to-many link src from sysLine to _edge_coveredBy\n                                       fujaba__Success = false;\n\n                                       fujaba__IterSysLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,EMoflonEdge.class,\"src\")).iterator ();\n\n                                       while ( fujaba__IterSysLineTo_edge_coveredBy.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_coveredBy = (EMoflonEdge) fujaba__IterSysLineTo_edge_coveredBy.next ();\n\n                                             // check object _edge_coveredBy is really bound\n                                             JavaSDM.ensure ( _edge_coveredBy != null );\n                                             // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                             JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                             // check link trg from _edge_coveredBy to messageSend\n                                             JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_896385 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_896385 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_896385 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_896385 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_896385.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_436671 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_436671 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_436671 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_436671 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_436671.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_986137 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_986137 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_986137 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_986137 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_986137.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_948196 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_948196 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_948196 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_948196 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_948196.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_948196 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_948196.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_767112 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_767112 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_767112 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_767112 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_767112.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_767112 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_767112.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_966387 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_966387 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_966387 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_966387 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_966387.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_966387 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_966387.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_187677 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_187677 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_187677 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_187677 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_187677.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_187677 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_187677.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_200089 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_200089 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_200089 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_200089.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_200089 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_200089.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_742525 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_742525 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_742525 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_742525.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_742525 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_742525.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_742525 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_742525.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_853918 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_853918 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_853918 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_853918.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_853918 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_853918.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_853918 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_853918.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_covered is really bound\n                                                JavaSDM.ensure ( _edge_covered != null );\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_covered to messageSend\n                                                JavaSDM.ensure (messageSend.equals (_edge_covered.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to sysLine\n                                                JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_covered to sysLine\n                                                JavaSDM.ensure (sysLine.equals (_edge_covered.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to messageSend\n                                                JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_462(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_312782 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_743467 = null;\n      Interaction __DEC_operand_enclosingInteraction_648688 = null;\n      InteractionOperand __DEC_combo_fragment_123705 = null;\n      InteractionOperand __DEC_messageReceive_fragment_307884 = null;\n      InteractionOperand __DEC_messageSend_fragment_772863 = null;\n      InteractionOperand __DEC_operand_fragment_50586 = null;\n      Constraint __DEC_spec_specification_934469 = null;\n      InteractionOperand __DEC_guard_guard_504531 = null;\n      CombinedFragment __DEC_operand_operand_955782 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      CombinedFragment combo = null;\n      Lifeline sysLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         interaction = combo.getEnclosingInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link coveredBy from combo to sysLine\n         JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n         // iterate to-many link coveredBy from sysLine to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link coveredBy from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link coveredBy from operand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n                     while ( fujaba__IterOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // iterate to-many link coveredBy from sysLine to parentOperand\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                 // ensure correct type and really bound of object parentOperand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 parentOperand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                                 // check object parentCombo is really bound\n                                 JavaSDM.ensure ( parentCombo != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                                 // check isomorphic binding between objects parentCombo and combo \n                                 JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                 // check link coveredBy from line to parentCombo\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                 // check link coveredBy from line to parentOperand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                 // check link coveredBy from parentCombo to sysLine\n                                 JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                 // iterate to-many link fragment from parentOperand to messageReceive\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                       // ensure correct type and really bound of object messageReceive\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // negative check for link message from messageReceive\n                                          JavaSDM.ensure (messageReceive.getMessage () == null);\n                                          // negative check for link message from messageSend\n                                          JavaSDM.ensure (messageSend.getMessage () == null);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_312782 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_312782 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_312782 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_312782 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_312782.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_743467 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_743467 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_743467 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_743467 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_743467.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_648688 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_648688 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_648688 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_648688 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_648688.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_123705 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_123705 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_123705 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_123705 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_123705.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_123705 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_123705.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_307884 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_307884 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_307884 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_307884 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_307884.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_307884 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_307884.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_772863 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_772863 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_772863 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_772863 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_772863.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_772863 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_772863.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_50586 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_50586 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_50586 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_50586 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_50586.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_50586 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_50586.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_934469 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_934469 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_934469 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_934469.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_934469 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_934469.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_504531 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_504531 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_504531 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_504531.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_504531 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_504531.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_504531 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_504531.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_955782 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_955782 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_955782 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_955782.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_955782 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_955782.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_955782 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_955782.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link receiveEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link receiveEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check object sysLine is really bound\n                                          JavaSDM.ensure ( sysLine != null );\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects sysLine and line \n                                          JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (combo)));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to sysLine\n                                          JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to combo\n                                          JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link coveredBy from line to operand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                          // check link coveredBy from line to parentCombo\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                          // check link coveredBy from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // check link coveredBy from combo to sysLine\n                                          JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from messageSend to sysLine\n                                          JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from operand to sysLine\n                                          JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentCombo to sysLine\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentOperand to sysLine\n                                          JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_463(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_34450 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_875558 = null;\n      Interaction __DEC_operand_enclosingInteraction_72809 = null;\n      InteractionOperand __DEC_combo_fragment_486692 = null;\n      InteractionOperand __DEC_messageReceive_fragment_920601 = null;\n      InteractionOperand __DEC_messageSend_fragment_896093 = null;\n      InteractionOperand __DEC_operand_fragment_661255 = null;\n      Constraint __DEC_spec_specification_871353 = null;\n      InteractionOperand __DEC_guard_guard_126591 = null;\n      CombinedFragment __DEC_operand_operand_844249 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Lifeline sysLine = null;\n      Interaction interaction = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         interaction = combo.getEnclosingInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // check link coveredBy from combo to sysLine\n         JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n         // iterate to-many link coveredBy from sysLine to operand\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link coveredBy from sysLine to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link coveredBy from sysLine to parentOperand\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                           // ensure correct type and really bound of object parentOperand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           parentOperand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                           // check object parentCombo is really bound\n                           JavaSDM.ensure ( parentCombo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link coveredBy from parentCombo to sysLine\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                           // iterate to-many link coveredBy from parentOperand to line\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n                           while ( fujaba__IterParentOperandToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check isomorphic binding between objects sysLine and line \n                                 JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                 // check link lifeline from line to interaction\n                                 JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                 ));\n\n                                 // check link coveredBy from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // check link coveredBy from line to parentCombo\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                 // iterate to-many link fragment from parentOperand to messageReceive\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                       // ensure correct type and really bound of object messageReceive\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // iterate to-many link src from sysLine to _edge_coveredBy\n                                       fujaba__Success = false;\n\n                                       fujaba__IterSysLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,EMoflonEdge.class,\"src\")).iterator ();\n\n                                       while ( fujaba__IterSysLineTo_edge_coveredBy.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_coveredBy = (EMoflonEdge) fujaba__IterSysLineTo_edge_coveredBy.next ();\n\n                                             // check object _edge_coveredBy is really bound\n                                             JavaSDM.ensure ( _edge_coveredBy != null );\n                                             // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                             JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                             // check link trg from _edge_coveredBy to combo\n                                             JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_34450 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_34450 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_34450 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_34450 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_34450.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_875558 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_875558 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_875558 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_875558 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_875558.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_72809 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_72809 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_72809 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_72809 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_72809.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_486692 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_486692 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_486692 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_486692 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_486692.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_486692 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_486692.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_920601 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_920601 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_920601 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_920601 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_920601.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_920601 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_920601.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_896093 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_896093 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_896093 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_896093 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_896093.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_896093 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_896093.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_661255 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_661255 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_661255 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_661255 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_661255.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_661255 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_661255.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_871353 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_871353 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_871353 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_871353.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_871353 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_871353.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_126591 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_126591 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_126591 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_126591.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_126591 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_126591.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_126591 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_126591.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_844249 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_844249 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_844249 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_844249.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_844249 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_844249.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_844249 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_844249.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_covered is really bound\n                                                JavaSDM.ensure ( _edge_covered != null );\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_covered to combo\n                                                JavaSDM.ensure (combo.equals (_edge_covered.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to sysLine\n                                                JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_covered to sysLine\n                                                JavaSDM.ensure (sysLine.equals (_edge_covered.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to combo\n                                                JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_464(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_445613 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_638198 = null;\n      Interaction __DEC_operand_enclosingInteraction_240651 = null;\n      InteractionOperand __DEC_combo_fragment_54522 = null;\n      InteractionOperand __DEC_messageReceive_fragment_567916 = null;\n      InteractionOperand __DEC_messageSend_fragment_298341 = null;\n      InteractionOperand __DEC_operand_fragment_739136 = null;\n      Constraint __DEC_spec_specification_10873 = null;\n      InteractionOperand __DEC_guard_guard_683653 = null;\n      CombinedFragment __DEC_operand_operand_905838 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      Lifeline sysLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link coveredBy from operand to sysLine\n         JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n         // iterate to-many link coveredBy from sysLine to combo\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               interaction = combo.getEnclosingInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link coveredBy from sysLine to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link coveredBy from sysLine to parentOperand\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                           // ensure correct type and really bound of object parentOperand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           parentOperand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                           // check object parentCombo is really bound\n                           JavaSDM.ensure ( parentCombo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link coveredBy from parentCombo to sysLine\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                           // iterate to-many link coveredBy from parentOperand to line\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n                           while ( fujaba__IterParentOperandToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check isomorphic binding between objects sysLine and line \n                                 JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                 // check link lifeline from line to interaction\n                                 JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                 ));\n\n                                 // check link coveredBy from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // check link coveredBy from line to parentCombo\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                 // iterate to-many link fragment from parentOperand to messageReceive\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                       // ensure correct type and really bound of object messageReceive\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // negative check for link message from messageReceive\n                                          JavaSDM.ensure (messageReceive.getMessage () == null);\n                                          // negative check for link message from messageSend\n                                          JavaSDM.ensure (messageSend.getMessage () == null);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_445613 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_445613 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_445613 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_445613 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_445613.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_638198 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_638198 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_638198 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_638198 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_638198.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_240651 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_240651 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_240651 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_240651 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_240651.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_54522 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_54522 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_54522 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_54522 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_54522.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_54522 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_54522.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_567916 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_567916 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_567916 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_567916 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_567916.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_567916 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_567916.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_298341 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_298341 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_298341 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_298341 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_298341.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_298341 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_298341.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_739136 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_739136 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_739136 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_739136 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_739136.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_739136 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_739136.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_10873 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_10873 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_10873 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_10873.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_10873 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_10873.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_683653 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_683653 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_683653 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_683653.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_683653 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_683653.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_683653 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_683653.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_905838 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_905838 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_905838 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_905838.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_905838 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_905838.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_905838 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_905838.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link receiveEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link receiveEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check object sysLine is really bound\n                                          JavaSDM.ensure ( sysLine != null );\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects sysLine and line \n                                          JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (combo)));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to sysLine\n                                          JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to operand\n                                          JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link coveredBy from line to operand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                          // check link coveredBy from line to parentCombo\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                          // check link coveredBy from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // check link coveredBy from combo to sysLine\n                                          JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from messageSend to sysLine\n                                          JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from operand to sysLine\n                                          JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentCombo to sysLine\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentOperand to sysLine\n                                          JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_465(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_13603 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_91783 = null;\n      Interaction __DEC_operand_enclosingInteraction_260262 = null;\n      InteractionOperand __DEC_combo_fragment_604508 = null;\n      InteractionOperand __DEC_messageReceive_fragment_38377 = null;\n      InteractionOperand __DEC_messageSend_fragment_354986 = null;\n      InteractionOperand __DEC_operand_fragment_755081 = null;\n      Constraint __DEC_spec_specification_221419 = null;\n      InteractionOperand __DEC_guard_guard_695451 = null;\n      CombinedFragment __DEC_operand_operand_868770 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Lifeline sysLine = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // check link coveredBy from operand to sysLine\n         JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n         // iterate to-many link coveredBy from sysLine to combo\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               interaction = combo.getEnclosingInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link coveredBy from sysLine to parentCombo\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToParentCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToParentCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToParentCombo.next ();\n\n                     // ensure correct type and really bound of object parentCombo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     parentCombo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // iterate to-many link coveredBy from parentCombo to line\n                     fujaba__Success = false;\n\n                     fujaba__IterParentComboToLine = new ArrayList(parentCombo.getCovered()).iterator ();\n\n                     while ( fujaba__IterParentComboToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterParentComboToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // check link coveredBy from line to operand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                           // iterate to-many link coveredBy from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // iterate to-many link coveredBy from sysLine to parentOperand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                       // ensure correct type and really bound of object parentOperand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       parentOperand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // check link operand from parentOperand to parentCombo\n                                       JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                       ));\n\n                                       // check link coveredBy from line to parentOperand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // iterate to-many link src from sysLine to _edge_coveredBy\n                                             fujaba__Success = false;\n\n                                             fujaba__IterSysLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,EMoflonEdge.class,\"src\")).iterator ();\n\n                                             while ( fujaba__IterSysLineTo_edge_coveredBy.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   _edge_coveredBy = (EMoflonEdge) fujaba__IterSysLineTo_edge_coveredBy.next ();\n\n                                                   // check object _edge_coveredBy is really bound\n                                                   JavaSDM.ensure ( _edge_coveredBy != null );\n                                                   // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                   JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                   // check link trg from _edge_coveredBy to operand\n                                                   JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                                   ));\n\n                                                   // story node \'test core match and DECs\'\n                                                   try \n                                                   {\n                                                      fujaba__Success = false; \n\n                                                      // negative check for link message from messageReceive\n                                                      JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                      // negative check for link message from messageSend\n                                                      JavaSDM.ensure (messageSend.getMessage () == null);\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageReceive_enclosingInteraction_13603 = messageReceive.getEnclosingInteraction ();\n\n                                                         // check object __DEC_messageReceive_enclosingInteraction_13603 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_13603 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_13603 and interaction \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_13603.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageSend_enclosingInteraction_91783 = messageSend.getEnclosingInteraction ();\n\n                                                         // check object __DEC_messageSend_enclosingInteraction_91783 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_91783 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_91783 and interaction \n                                                         JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_91783.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_enclosingInteraction_260262 = operand.getEnclosingInteraction ();\n\n                                                         // check object __DEC_operand_enclosingInteraction_260262 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_enclosingInteraction_260262 != null );\n\n                                                         // check isomorphic binding between objects __DEC_operand_enclosingInteraction_260262 and interaction \n                                                         JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_260262.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_combo_fragment_604508 = combo.getEnclosingOperand ();\n\n                                                         // check object __DEC_combo_fragment_604508 is really bound\n                                                         JavaSDM.ensure ( __DEC_combo_fragment_604508 != null );\n\n                                                         // check isomorphic binding between objects __DEC_combo_fragment_604508 and operand \n                                                         JavaSDM.ensure ( !__DEC_combo_fragment_604508.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_combo_fragment_604508 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_combo_fragment_604508.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageReceive_fragment_38377 = messageReceive.getEnclosingOperand ();\n\n                                                         // check object __DEC_messageReceive_fragment_38377 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_fragment_38377 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_fragment_38377 and operand \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_fragment_38377.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_fragment_38377 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_fragment_38377.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageSend_fragment_354986 = messageSend.getEnclosingOperand ();\n\n                                                         // check object __DEC_messageSend_fragment_354986 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_fragment_354986 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_fragment_354986 and operand \n                                                         JavaSDM.ensure ( !__DEC_messageSend_fragment_354986.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_fragment_354986 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_messageSend_fragment_354986.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_fragment_755081 = operand.getEnclosingOperand ();\n\n                                                         // check object __DEC_operand_fragment_755081 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_fragment_755081 != null );\n\n                                                         // check isomorphic binding between objects __DEC_operand_fragment_755081 and operand \n                                                         JavaSDM.ensure ( !__DEC_operand_fragment_755081.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_operand_fragment_755081 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_operand_fragment_755081.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // negative check for link packagedElement from guard\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                      // negative check for link packagedElement from spec\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_spec_specification_221419 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                         // check object __DEC_spec_specification_221419 is really bound\n                                                         JavaSDM.ensure ( __DEC_spec_specification_221419 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(spec.equals(__DEC_spec_specification_221419.getSpecification()));\n\n                                                         // check isomorphic binding between objects __DEC_spec_specification_221419 and guard \n                                                         JavaSDM.ensure ( !__DEC_spec_specification_221419.equals (guard) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_guard_guard_695451 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                         // check object __DEC_guard_guard_695451 is really bound\n                                                         JavaSDM.ensure ( __DEC_guard_guard_695451 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(guard.equals(__DEC_guard_guard_695451.getGuard()));\n\n                                                         // check isomorphic binding between objects __DEC_guard_guard_695451 and operand \n                                                         JavaSDM.ensure ( !__DEC_guard_guard_695451.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_guard_guard_695451 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_guard_guard_695451.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_operand_868770 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                         // check object __DEC_operand_operand_868770 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_operand_868770 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_operand_operand_868770.getOperand().contains(operand));\n\n                                                         // check isomorphic binding between objects __DEC_operand_operand_868770 and combo \n                                                         JavaSDM.ensure ( !__DEC_operand_operand_868770.equals (combo) );\n\n                                                         // check isomorphic binding between objects __DEC_operand_operand_868770 and parentCombo \n                                                         JavaSDM.ensure ( !__DEC_operand_operand_868770.equals (parentCombo) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // negative check for link receiveEvent from messageReceive\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                      // negative check for link receiveEvent from messageSend\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                      // negative check for link sendEvent from messageReceive\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                      // negative check for link sendEvent from messageSend\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                      // check link fragment from operand to operand\n                                                      JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from operand to operand\n                                                      JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check object _edge_covered is really bound\n                                                      JavaSDM.ensure ( _edge_covered != null );\n                                                      // check object _edge_coveredBy is really bound\n                                                      JavaSDM.ensure ( _edge_coveredBy != null );\n                                                      // check object combo is really bound\n                                                      JavaSDM.ensure ( combo != null );\n                                                      // check object guard is really bound\n                                                      JavaSDM.ensure ( guard != null );\n                                                      // check object interaction is really bound\n                                                      JavaSDM.ensure ( interaction != null );\n                                                      // check object line is really bound\n                                                      JavaSDM.ensure ( line != null );\n                                                      // check object messageReceive is really bound\n                                                      JavaSDM.ensure ( messageReceive != null );\n                                                      // check object messageSend is really bound\n                                                      JavaSDM.ensure ( messageSend != null );\n                                                      // check object operand is really bound\n                                                      JavaSDM.ensure ( operand != null );\n                                                      // check object parentCombo is really bound\n                                                      JavaSDM.ensure ( parentCombo != null );\n                                                      // check object parentOperand is really bound\n                                                      JavaSDM.ensure ( parentOperand != null );\n                                                      // check object spec is really bound\n                                                      JavaSDM.ensure ( spec != null );\n                                                      // check object sysLine is really bound\n                                                      JavaSDM.ensure ( sysLine != null );\n                                                      // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                      JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                      // check isomorphic binding between objects parentCombo and combo \n                                                      JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                      // check isomorphic binding between objects sysLine and line \n                                                      JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                      // check isomorphic binding between objects messageSend and messageReceive \n                                                      JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                      // check isomorphic binding between objects parentOperand and operand \n                                                      JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                      // check link fragment from combo to interaction\n                                                      JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                      ));\n\n                                                      // check link fragment from messageReceive to parentOperand\n                                                      JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                      ));\n\n                                                      // check link fragment from messageReceive to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from operand to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from combo to operand\n                                                      JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageReceive to operand\n                                                      JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to operand\n                                                      JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from combo to parentOperand\n                                                      JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to parentOperand\n                                                      JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link guard from operand to guard\n                                                      JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                      ));\n\n                                                      // check link guard from parentOperand to guard\n                                                      JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                      )));\n\n                                                      // check link lifeline from line to interaction\n                                                      JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                      ));\n\n                                                      // check link operand from parentOperand to parentCombo\n                                                      JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                      ));\n\n                                                      // check link operand from operand to combo\n                                                      JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                      .contains (combo)));\n\n                                                      // check link operand from operand to parentCombo\n                                                      JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                      .contains (parentCombo)));\n\n                                                      // check link specification from spec to guard\n                                                      JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                      ));\n\n                                                      // check link src from _edge_covered to operand\n                                                      JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                                                      ));\n\n                                                      // check link src from _edge_coveredBy to sysLine\n                                                      JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                                      ));\n\n                                                      // check link trg from _edge_covered to sysLine\n                                                      JavaSDM.ensure (sysLine.equals (_edge_covered.getTrg ()\n                                                      ));\n\n                                                      // check link trg from _edge_coveredBy to operand\n                                                      JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                                      ));\n\n                                                      // check link coveredBy from line to operand\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                      // check link coveredBy from line to parentCombo\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                      // check link coveredBy from line to parentOperand\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                      // check link coveredBy from combo to sysLine\n                                                      JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from messageSend to sysLine\n                                                      JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from operand to sysLine\n                                                      JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from parentCombo to sysLine\n                                                      JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from parentOperand to sysLine\n                                                      JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                      // create object match\n                                                      match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                      // assign attribute match\n                                                      match.setRuleName (__eClass.getName());\n                                                      // statement node \'bookkeeping with generic isAppropriate method\'\n                                                      fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                      if (fujaba__Success)\n                                                      {\n                                                         // statement node \'Ensure that the correct types of elements are matched\'\n                                                         fujaba__Success = this.checkTypes_BWD(match);\n                                                         if (fujaba__Success)\n                                                         {\n                                                            // story node \'Add match to rule result\'\n                                                            try \n                                                            {\n                                                               fujaba__Success = false; \n\n                                                               // check object __performOperation is really bound\n                                                               JavaSDM.ensure ( __performOperation != null );\n                                                               // check object __result is really bound\n                                                               JavaSDM.ensure ( __result != null );\n                                                               // check object match is really bound\n                                                               JavaSDM.ensure ( match != null );\n\n                                                               // create link\n                                                               org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                               // create link\n                                                               __result.getContents().add(match);\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n\n\n                                                         }\n                                                         else\n                                                         {\n\n                                                         }\n\n                                                      }\n                                                      else\n                                                      {\n\n                                                      }\n                                                      fujaba__Success = true;\n                                                   }\n                                                   catch ( JavaSDMException fujaba__InternalException )\n                                                   {\n                                                      fujaba__Success = false;\n                                                   }\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_466(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_834755 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_415136 = null;\n      Interaction __DEC_operand_enclosingInteraction_188352 = null;\n      InteractionOperand __DEC_combo_fragment_145259 = null;\n      InteractionOperand __DEC_messageReceive_fragment_314434 = null;\n      InteractionOperand __DEC_messageSend_fragment_881131 = null;\n      InteractionOperand __DEC_operand_fragment_493834 = null;\n      Constraint __DEC_spec_specification_275235 = null;\n      InteractionOperand __DEC_guard_guard_950885 = null;\n      CombinedFragment __DEC_operand_operand_633185 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentComboToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Lifeline sysLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // iterate to-many link coveredBy from sysLine to combo\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               interaction = combo.getEnclosingInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link coveredBy from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link coveredBy from sysLine to parentCombo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToParentCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToParentCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToParentCombo.next ();\n\n                           // ensure correct type and really bound of object parentCombo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           parentCombo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // iterate to-many link coveredBy from parentCombo to line\n                           fujaba__Success = false;\n\n                           fujaba__IterParentComboToLine = new ArrayList(parentCombo.getCovered()).iterator ();\n\n                           while ( fujaba__IterParentComboToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterParentComboToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check isomorphic binding between objects sysLine and line \n                                 JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                 // check link lifeline from line to interaction\n                                 JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                 ));\n\n                                 // check link coveredBy from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // iterate to-many link coveredBy from sysLine to messageSend\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                       // ensure correct type and really bound of object messageSend\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                       // bind object\n                                       _TmpObject = _edge_coveredBy.getTrg ();\n\n                                       // ensure correct type and really bound of object parentOperand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       parentOperand = (InteractionOperand) _TmpObject;\n\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // check link operand from parentOperand to parentCombo\n                                       JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                       ));\n\n                                       // check link coveredBy from line to parentOperand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                       // check link coveredBy from parentOperand to sysLine\n                                       JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_834755 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_834755 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_834755 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_834755 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_834755.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_415136 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_415136 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_415136 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_415136 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_415136.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_188352 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_188352 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_188352 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_188352 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_188352.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_145259 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_145259 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_145259 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_145259 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_145259.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_145259 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_145259.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_314434 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_314434 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_314434 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_314434 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_314434.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_314434 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_314434.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_881131 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_881131 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_881131 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_881131 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_881131.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_881131 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_881131.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_493834 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_493834 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_493834 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_493834 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_493834.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_493834 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_493834.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_275235 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_275235 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_275235 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_275235.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_275235 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_275235.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_950885 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_950885 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_950885 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_950885.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_950885 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_950885.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_950885 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_950885.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_633185 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_633185 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_633185 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_633185.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_633185 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_633185.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_633185 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_633185.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to sysLine\n                                                JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_467(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_252502 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_124579 = null;\n      Interaction __DEC_operand_enclosingInteraction_790560 = null;\n      InteractionOperand __DEC_combo_fragment_688533 = null;\n      InteractionOperand __DEC_messageReceive_fragment_319686 = null;\n      InteractionOperand __DEC_messageSend_fragment_218228 = null;\n      InteractionOperand __DEC_operand_fragment_13631 = null;\n      Constraint __DEC_spec_specification_890387 = null;\n      InteractionOperand __DEC_guard_guard_41166 = null;\n      CombinedFragment __DEC_operand_operand_390597 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      Lifeline sysLine = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link fragment from parentOperand to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // bind object\n               _TmpObject = _edge_covered.getTrg ();\n\n               // ensure correct type and really bound of object sysLine\n               JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n               sysLine = (Lifeline) _TmpObject;\n\n               // check link coveredBy from parentCombo to sysLine\n               JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n               // check link coveredBy from parentOperand to sysLine\n               JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n               // iterate to-many link coveredBy from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // check link coveredBy from line to parentCombo\n                     JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                     // iterate to-many link coveredBy from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // bind object\n                           interaction = combo.getEnclosingInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // iterate to-many link coveredBy from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // iterate to-many link coveredBy from sysLine to operand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                                       // ensure correct type and really bound of object operand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       operand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // bind object\n                                       guard = operand.getGuard ();\n\n                                       // check object guard is really bound\n                                       JavaSDM.ensure ( guard != null );\n\n                                       // bind object\n                                       _TmpObject = guard.getSpecification ();\n\n                                       // ensure correct type and really bound of object spec\n                                       JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                       spec = (LiteralString) _TmpObject;\n\n                                       // check link coveredBy from line to operand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                       // iterate to-many link src from sysLine to _edge_coveredBy\n                                       fujaba__Success = false;\n\n                                       fujaba__IterSysLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,EMoflonEdge.class,\"src\")).iterator ();\n\n                                       while ( fujaba__IterSysLineTo_edge_coveredBy.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_coveredBy = (EMoflonEdge) fujaba__IterSysLineTo_edge_coveredBy.next ();\n\n                                             // check object _edge_coveredBy is really bound\n                                             JavaSDM.ensure ( _edge_coveredBy != null );\n                                             // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                             JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                             // check link trg from _edge_coveredBy to parentOperand\n                                             JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_252502 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_252502 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_252502 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_252502 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_252502.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_124579 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_124579 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_124579 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_124579 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_124579.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_790560 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_790560 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_790560 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_790560 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_790560.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_688533 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_688533 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_688533 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_688533 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_688533.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_688533 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_688533.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_319686 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_319686 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_319686 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_319686 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_319686.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_319686 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_319686.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_218228 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_218228 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_218228 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_218228 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_218228.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_218228 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_218228.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_13631 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_13631 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_13631 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_13631 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_13631.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_13631 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_13631.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_890387 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_890387 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_890387 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_890387.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_890387 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_890387.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_41166 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_41166 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_41166 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_41166.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_41166 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_41166.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_41166 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_41166.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_390597 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_390597 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_390597 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_390597.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_390597 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_390597.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_390597 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_390597.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_covered is really bound\n                                                JavaSDM.ensure ( _edge_covered != null );\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_covered to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (_edge_covered.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to sysLine\n                                                JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_covered to sysLine\n                                                JavaSDM.ensure (sysLine.equals (_edge_covered.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_468(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_316456 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_260214 = null;\n      Interaction __DEC_operand_enclosingInteraction_837630 = null;\n      InteractionOperand __DEC_combo_fragment_853340 = null;\n      InteractionOperand __DEC_messageReceive_fragment_174257 = null;\n      InteractionOperand __DEC_messageSend_fragment_294431 = null;\n      InteractionOperand __DEC_operand_fragment_52674 = null;\n      Constraint __DEC_spec_specification_350529 = null;\n      InteractionOperand __DEC_guard_guard_693426 = null;\n      CombinedFragment __DEC_operand_operand_279697 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      CombinedFragment parentCombo = null;\n      Lifeline sysLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // check link coveredBy from parentCombo to sysLine\n         JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n         // iterate to-many link coveredBy from sysLine to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link coveredBy from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link coveredBy from operand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n                     while ( fujaba__IterOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check isomorphic binding between objects sysLine and line \n                           JavaSDM.ensure ( !sysLine.equals (line) );\n\n                           // check link coveredBy from line to parentCombo\n                           JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                           // iterate to-many link coveredBy from sysLine to combo\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToCombo.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                                 // ensure correct type and really bound of object combo\n                                 JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                                 combo = (CombinedFragment) _TmpObject;\n                                 // check isomorphic binding between objects parentCombo and combo \n                                 JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                 // bind object\n                                 interaction = combo.getEnclosingInteraction ();\n\n                                 // check object interaction is really bound\n                                 JavaSDM.ensure ( interaction != null );\n\n                                 // check link lifeline from line to interaction\n                                 JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                 ));\n\n                                 // iterate to-many link coveredBy from sysLine to parentOperand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                       // ensure correct type and really bound of object parentOperand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       parentOperand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // check link operand from parentOperand to parentCombo\n                                       JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                       ));\n\n                                       // check link coveredBy from line to parentOperand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_316456 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_316456 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_316456 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_316456 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_316456.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_260214 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_260214 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_260214 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_260214 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_260214.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_837630 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_837630 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_837630 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_837630 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_837630.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_853340 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_853340 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_853340 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_853340 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_853340.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_853340 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_853340.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_174257 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_174257 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_174257 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_174257 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_174257.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_174257 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_174257.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_294431 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_294431 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_294431 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_294431 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_294431.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_294431 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_294431.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_52674 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_52674 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_52674 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_52674 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_52674.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_52674 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_52674.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_350529 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_350529 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_350529 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_350529.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_350529 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_350529.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_693426 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_693426 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_693426 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_693426.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_693426 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_693426.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_693426 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_693426.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_279697 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_279697 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_279697 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_279697.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_279697 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_279697.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_279697 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_279697.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to sysLine\n                                                JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_469(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_11453 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_861768 = null;\n      Interaction __DEC_operand_enclosingInteraction_96417 = null;\n      InteractionOperand __DEC_combo_fragment_213986 = null;\n      InteractionOperand __DEC_messageReceive_fragment_317056 = null;\n      InteractionOperand __DEC_messageSend_fragment_385293 = null;\n      InteractionOperand __DEC_operand_fragment_311677 = null;\n      Constraint __DEC_spec_specification_934507 = null;\n      InteractionOperand __DEC_guard_guard_416632 = null;\n      CombinedFragment __DEC_operand_operand_611851 = null;\n      Match match = null;\n      Iterator fujaba__IterSysLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Lifeline sysLine = null;\n      CombinedFragment parentCombo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object sysLine\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         sysLine = (Lifeline) _TmpObject;\n\n         // check link coveredBy from parentCombo to sysLine\n         JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n         // iterate to-many link coveredBy from sysLine to combo\n         fujaba__Success = false;\n\n         fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterSysLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // bind object\n               interaction = combo.getEnclosingInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link coveredBy from sysLine to operand\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link coveredBy from sysLine to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // iterate to-many link coveredBy from sysLine to parentOperand\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                 // ensure correct type and really bound of object parentOperand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 parentOperand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // check link operand from parentOperand to parentCombo\n                                 JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                 ));\n\n                                 // iterate to-many link coveredBy from parentOperand to line\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToLine.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                                       // check object line is really bound\n                                       JavaSDM.ensure ( line != null );\n                                       // check isomorphic binding between objects sysLine and line \n                                       JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                       // check link lifeline from line to interaction\n                                       JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                       ));\n\n                                       // check link coveredBy from line to operand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                       // check link coveredBy from line to parentCombo\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // iterate to-many link src from sysLine to _edge_coveredBy\n                                             fujaba__Success = false;\n\n                                             fujaba__IterSysLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(sysLine,EMoflonEdge.class,\"src\")).iterator ();\n\n                                             while ( fujaba__IterSysLineTo_edge_coveredBy.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   _edge_coveredBy = (EMoflonEdge) fujaba__IterSysLineTo_edge_coveredBy.next ();\n\n                                                   // check object _edge_coveredBy is really bound\n                                                   JavaSDM.ensure ( _edge_coveredBy != null );\n                                                   // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                   JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                   // check link trg from _edge_coveredBy to parentCombo\n                                                   JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                                   ));\n\n                                                   // story node \'test core match and DECs\'\n                                                   try \n                                                   {\n                                                      fujaba__Success = false; \n\n                                                      // negative check for link message from messageReceive\n                                                      JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                      // negative check for link message from messageSend\n                                                      JavaSDM.ensure (messageSend.getMessage () == null);\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageReceive_enclosingInteraction_11453 = messageReceive.getEnclosingInteraction ();\n\n                                                         // check object __DEC_messageReceive_enclosingInteraction_11453 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_11453 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_11453 and interaction \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_11453.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageSend_enclosingInteraction_861768 = messageSend.getEnclosingInteraction ();\n\n                                                         // check object __DEC_messageSend_enclosingInteraction_861768 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_861768 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_861768 and interaction \n                                                         JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_861768.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_enclosingInteraction_96417 = operand.getEnclosingInteraction ();\n\n                                                         // check object __DEC_operand_enclosingInteraction_96417 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_enclosingInteraction_96417 != null );\n\n                                                         // check isomorphic binding between objects __DEC_operand_enclosingInteraction_96417 and interaction \n                                                         JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_96417.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_combo_fragment_213986 = combo.getEnclosingOperand ();\n\n                                                         // check object __DEC_combo_fragment_213986 is really bound\n                                                         JavaSDM.ensure ( __DEC_combo_fragment_213986 != null );\n\n                                                         // check isomorphic binding between objects __DEC_combo_fragment_213986 and operand \n                                                         JavaSDM.ensure ( !__DEC_combo_fragment_213986.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_combo_fragment_213986 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_combo_fragment_213986.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageReceive_fragment_317056 = messageReceive.getEnclosingOperand ();\n\n                                                         // check object __DEC_messageReceive_fragment_317056 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_fragment_317056 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_fragment_317056 and operand \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_fragment_317056.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_fragment_317056 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_fragment_317056.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageSend_fragment_385293 = messageSend.getEnclosingOperand ();\n\n                                                         // check object __DEC_messageSend_fragment_385293 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_fragment_385293 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_fragment_385293 and operand \n                                                         JavaSDM.ensure ( !__DEC_messageSend_fragment_385293.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_fragment_385293 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_messageSend_fragment_385293.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_fragment_311677 = operand.getEnclosingOperand ();\n\n                                                         // check object __DEC_operand_fragment_311677 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_fragment_311677 != null );\n\n                                                         // check isomorphic binding between objects __DEC_operand_fragment_311677 and operand \n                                                         JavaSDM.ensure ( !__DEC_operand_fragment_311677.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_operand_fragment_311677 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_operand_fragment_311677.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // negative check for link packagedElement from guard\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                      // negative check for link packagedElement from spec\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_spec_specification_934507 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                         // check object __DEC_spec_specification_934507 is really bound\n                                                         JavaSDM.ensure ( __DEC_spec_specification_934507 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(spec.equals(__DEC_spec_specification_934507.getSpecification()));\n\n                                                         // check isomorphic binding between objects __DEC_spec_specification_934507 and guard \n                                                         JavaSDM.ensure ( !__DEC_spec_specification_934507.equals (guard) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_guard_guard_416632 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                         // check object __DEC_guard_guard_416632 is really bound\n                                                         JavaSDM.ensure ( __DEC_guard_guard_416632 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(guard.equals(__DEC_guard_guard_416632.getGuard()));\n\n                                                         // check isomorphic binding between objects __DEC_guard_guard_416632 and operand \n                                                         JavaSDM.ensure ( !__DEC_guard_guard_416632.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_guard_guard_416632 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_guard_guard_416632.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_operand_611851 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                         // check object __DEC_operand_operand_611851 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_operand_611851 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_operand_operand_611851.getOperand().contains(operand));\n\n                                                         // check isomorphic binding between objects __DEC_operand_operand_611851 and combo \n                                                         JavaSDM.ensure ( !__DEC_operand_operand_611851.equals (combo) );\n\n                                                         // check isomorphic binding between objects __DEC_operand_operand_611851 and parentCombo \n                                                         JavaSDM.ensure ( !__DEC_operand_operand_611851.equals (parentCombo) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // negative check for link receiveEvent from messageReceive\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                      // negative check for link receiveEvent from messageSend\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                      // negative check for link sendEvent from messageReceive\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                      // negative check for link sendEvent from messageSend\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                      // check link fragment from operand to operand\n                                                      JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from operand to operand\n                                                      JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check object _edge_covered is really bound\n                                                      JavaSDM.ensure ( _edge_covered != null );\n                                                      // check object _edge_coveredBy is really bound\n                                                      JavaSDM.ensure ( _edge_coveredBy != null );\n                                                      // check object combo is really bound\n                                                      JavaSDM.ensure ( combo != null );\n                                                      // check object guard is really bound\n                                                      JavaSDM.ensure ( guard != null );\n                                                      // check object interaction is really bound\n                                                      JavaSDM.ensure ( interaction != null );\n                                                      // check object line is really bound\n                                                      JavaSDM.ensure ( line != null );\n                                                      // check object messageReceive is really bound\n                                                      JavaSDM.ensure ( messageReceive != null );\n                                                      // check object messageSend is really bound\n                                                      JavaSDM.ensure ( messageSend != null );\n                                                      // check object operand is really bound\n                                                      JavaSDM.ensure ( operand != null );\n                                                      // check object parentCombo is really bound\n                                                      JavaSDM.ensure ( parentCombo != null );\n                                                      // check object parentOperand is really bound\n                                                      JavaSDM.ensure ( parentOperand != null );\n                                                      // check object spec is really bound\n                                                      JavaSDM.ensure ( spec != null );\n                                                      // check object sysLine is really bound\n                                                      JavaSDM.ensure ( sysLine != null );\n                                                      // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                      JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                      // check isomorphic binding between objects parentCombo and combo \n                                                      JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                      // check isomorphic binding between objects sysLine and line \n                                                      JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                      // check isomorphic binding between objects messageSend and messageReceive \n                                                      JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                      // check isomorphic binding between objects parentOperand and operand \n                                                      JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                      // check link fragment from combo to interaction\n                                                      JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                      ));\n\n                                                      // check link fragment from messageReceive to parentOperand\n                                                      JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                      ));\n\n                                                      // check link fragment from messageReceive to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from operand to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from combo to operand\n                                                      JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageReceive to operand\n                                                      JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to operand\n                                                      JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from combo to parentOperand\n                                                      JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to parentOperand\n                                                      JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link guard from operand to guard\n                                                      JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                      ));\n\n                                                      // check link guard from parentOperand to guard\n                                                      JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                      )));\n\n                                                      // check link lifeline from line to interaction\n                                                      JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                      ));\n\n                                                      // check link operand from parentOperand to parentCombo\n                                                      JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                      ));\n\n                                                      // check link operand from operand to combo\n                                                      JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                      .contains (combo)));\n\n                                                      // check link operand from operand to parentCombo\n                                                      JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                      .contains (parentCombo)));\n\n                                                      // check link specification from spec to guard\n                                                      JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                      ));\n\n                                                      // check link src from _edge_covered to parentCombo\n                                                      JavaSDM.ensure (parentCombo.equals (_edge_covered.getSrc ()\n                                                      ));\n\n                                                      // check link src from _edge_coveredBy to sysLine\n                                                      JavaSDM.ensure (sysLine.equals (_edge_coveredBy.getSrc ()\n                                                      ));\n\n                                                      // check link trg from _edge_covered to sysLine\n                                                      JavaSDM.ensure (sysLine.equals (_edge_covered.getTrg ()\n                                                      ));\n\n                                                      // check link trg from _edge_coveredBy to parentCombo\n                                                      JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                                      ));\n\n                                                      // check link coveredBy from line to operand\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                      // check link coveredBy from line to parentCombo\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                      // check link coveredBy from line to parentOperand\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                      // check link coveredBy from combo to sysLine\n                                                      JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from messageSend to sysLine\n                                                      JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from operand to sysLine\n                                                      JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from parentCombo to sysLine\n                                                      JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from parentOperand to sysLine\n                                                      JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                      // create object match\n                                                      match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                      // assign attribute match\n                                                      match.setRuleName (__eClass.getName());\n                                                      // statement node \'bookkeeping with generic isAppropriate method\'\n                                                      fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                      if (fujaba__Success)\n                                                      {\n                                                         // statement node \'Ensure that the correct types of elements are matched\'\n                                                         fujaba__Success = this.checkTypes_BWD(match);\n                                                         if (fujaba__Success)\n                                                         {\n                                                            // story node \'Add match to rule result\'\n                                                            try \n                                                            {\n                                                               fujaba__Success = false; \n\n                                                               // check object __performOperation is really bound\n                                                               JavaSDM.ensure ( __performOperation != null );\n                                                               // check object __result is really bound\n                                                               JavaSDM.ensure ( __result != null );\n                                                               // check object match is really bound\n                                                               JavaSDM.ensure ( match != null );\n\n                                                               // create link\n                                                               org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                               // create link\n                                                               __result.getContents().add(match);\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n\n\n                                                         }\n                                                         else\n                                                         {\n\n                                                         }\n\n                                                      }\n                                                      else\n                                                      {\n\n                                                      }\n                                                      fujaba__Success = true;\n                                                   }\n                                                   catch ( JavaSDMException fujaba__InternalException )\n                                                   {\n                                                      fujaba__Success = false;\n                                                   }\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_470(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_362519 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_769696 = null;\n      Interaction __DEC_operand_enclosingInteraction_46756 = null;\n      InteractionOperand __DEC_combo_fragment_625643 = null;\n      InteractionOperand __DEC_messageReceive_fragment_591794 = null;\n      InteractionOperand __DEC_messageSend_fragment_721789 = null;\n      InteractionOperand __DEC_operand_fragment_452400 = null;\n      Constraint __DEC_spec_specification_183726 = null;\n      InteractionOperand __DEC_guard_guard_176044 = null;\n      CombinedFragment __DEC_operand_operand_858575 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterParentOperandToSysLine = null;\n      Lifeline sysLine = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // iterate to-many link coveredBy from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link coveredBy from line to parentCombo\n               JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n               // iterate to-many link coveredBy from parentOperand to sysLine\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToSysLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToSysLine.hasNext () )\n               {\n                  try\n                  {\n                     sysLine = (Lifeline) fujaba__IterParentOperandToSysLine.next ();\n\n                     // check object sysLine is really bound\n                     JavaSDM.ensure ( sysLine != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // check link coveredBy from parentCombo to sysLine\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                     // iterate to-many link coveredBy from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // bind object\n                           interaction = combo.getEnclosingInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // iterate to-many link coveredBy from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // iterate to-many link coveredBy from sysLine to operand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                                       // ensure correct type and really bound of object operand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       operand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // bind object\n                                       guard = operand.getGuard ();\n\n                                       // check object guard is really bound\n                                       JavaSDM.ensure ( guard != null );\n\n                                       // bind object\n                                       _TmpObject = guard.getSpecification ();\n\n                                       // ensure correct type and really bound of object spec\n                                       JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                       spec = (LiteralString) _TmpObject;\n\n                                       // check link coveredBy from line to operand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // negative check for link message from messageReceive\n                                          JavaSDM.ensure (messageReceive.getMessage () == null);\n                                          // negative check for link message from messageSend\n                                          JavaSDM.ensure (messageSend.getMessage () == null);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_362519 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_362519 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_362519 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_362519 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_362519.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_769696 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_769696 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_769696 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_769696 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_769696.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_46756 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_46756 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_46756 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_46756 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_46756.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_625643 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_625643 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_625643 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_625643 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_625643.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_625643 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_625643.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_591794 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_591794 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_591794 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_591794 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_591794.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_591794 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_591794.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_721789 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_721789 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_721789 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_721789 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_721789.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_721789 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_721789.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_452400 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_452400 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_452400 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_452400 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_452400.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_452400 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_452400.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_183726 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_183726 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_183726 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_183726.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_183726 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_183726.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_176044 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_176044 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_176044 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_176044.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_176044 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_176044.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_176044 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_176044.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_858575 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_858575 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_858575 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_858575.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_858575 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_858575.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_858575 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_858575.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link receiveEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link receiveEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_fragment is really bound\n                                          JavaSDM.ensure ( _edge_fragment != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check object sysLine is really bound\n                                          JavaSDM.ensure ( sysLine != null );\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects sysLine and line \n                                          JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (combo)));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_fragment to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_fragment to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                          ));\n\n                                          // check link coveredBy from line to operand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                          // check link coveredBy from line to parentCombo\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                          // check link coveredBy from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // check link coveredBy from combo to sysLine\n                                          JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from messageSend to sysLine\n                                          JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from operand to sysLine\n                                          JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentCombo to sysLine\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentOperand to sysLine\n                                          JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_471(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_786529 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_660374 = null;\n      Interaction __DEC_operand_enclosingInteraction_578941 = null;\n      InteractionOperand __DEC_combo_fragment_963401 = null;\n      InteractionOperand __DEC_messageReceive_fragment_141169 = null;\n      InteractionOperand __DEC_messageSend_fragment_19939 = null;\n      InteractionOperand __DEC_operand_fragment_524837 = null;\n      Constraint __DEC_spec_specification_248647 = null;\n      InteractionOperand __DEC_guard_guard_903582 = null;\n      CombinedFragment __DEC_operand_operand_828808 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterParentOperandToSysLine = null;\n      Lifeline sysLine = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // iterate to-many link coveredBy from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link coveredBy from line to parentCombo\n               JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n               // iterate to-many link coveredBy from parentOperand to sysLine\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToSysLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToSysLine.hasNext () )\n               {\n                  try\n                  {\n                     sysLine = (Lifeline) fujaba__IterParentOperandToSysLine.next ();\n\n                     // check object sysLine is really bound\n                     JavaSDM.ensure ( sysLine != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // check link coveredBy from parentCombo to sysLine\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                     // iterate to-many link coveredBy from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // bind object\n                           interaction = combo.getEnclosingInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // iterate to-many link coveredBy from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // iterate to-many link coveredBy from sysLine to operand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                                       // ensure correct type and really bound of object operand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       operand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // bind object\n                                       guard = operand.getGuard ();\n\n                                       // check object guard is really bound\n                                       JavaSDM.ensure ( guard != null );\n\n                                       // bind object\n                                       _TmpObject = guard.getSpecification ();\n\n                                       // ensure correct type and really bound of object spec\n                                       JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                       spec = (LiteralString) _TmpObject;\n\n                                       // check link coveredBy from line to operand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                       // iterate to-many link src from parentOperand to _edge_fragment\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                                       while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                                             // check object _edge_fragment is really bound\n                                             JavaSDM.ensure ( _edge_fragment != null );\n                                             // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                             JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                             // check link trg from _edge_fragment to messageReceive\n                                             JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_786529 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_786529 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_786529 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_786529 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_786529.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_660374 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_660374 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_660374 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_660374 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_660374.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_578941 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_578941 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_578941 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_578941 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_578941.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_963401 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_963401 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_963401 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_963401 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_963401.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_963401 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_963401.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_141169 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_141169 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_141169 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_141169 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_141169.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_141169 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_141169.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_19939 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_19939 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_19939 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_19939 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_19939.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_19939 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_19939.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_524837 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_524837 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_524837 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_524837 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_524837.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_524837 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_524837.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_248647 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_248647 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_248647 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_248647.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_248647 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_248647.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_903582 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_903582 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_903582 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_903582.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_903582 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_903582.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_903582 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_903582.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_828808 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_828808 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_828808 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_828808.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_828808 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_828808.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_828808 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_828808.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_enclosingOperand is really bound\n                                                JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                                // check object _edge_fragment is really bound\n                                                JavaSDM.ensure ( _edge_fragment != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                                JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_enclosingOperand to messageReceive\n                                                JavaSDM.ensure (messageReceive.equals (_edge_enclosingOperand.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_fragment to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_enclosingOperand to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_fragment to messageReceive\n                                                JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_472(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_501097 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_804890 = null;\n      Interaction __DEC_operand_enclosingInteraction_57607 = null;\n      InteractionOperand __DEC_combo_fragment_622573 = null;\n      InteractionOperand __DEC_messageReceive_fragment_102033 = null;\n      InteractionOperand __DEC_messageSend_fragment_605528 = null;\n      InteractionOperand __DEC_operand_fragment_66669 = null;\n      Constraint __DEC_spec_specification_859640 = null;\n      InteractionOperand __DEC_guard_guard_247610 = null;\n      CombinedFragment __DEC_operand_operand_620888 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterParentOperandToSysLine = null;\n      Lifeline sysLine = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link coveredBy from line to parentOperand\n         JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n         // iterate to-many link fragment from parentOperand to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link coveredBy from line to parentCombo\n               JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n               // iterate to-many link coveredBy from parentOperand to sysLine\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToSysLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToSysLine.hasNext () )\n               {\n                  try\n                  {\n                     sysLine = (Lifeline) fujaba__IterParentOperandToSysLine.next ();\n\n                     // check object sysLine is really bound\n                     JavaSDM.ensure ( sysLine != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // check link coveredBy from parentCombo to sysLine\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                     // iterate to-many link coveredBy from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // bind object\n                           interaction = combo.getEnclosingInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // iterate to-many link coveredBy from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // iterate to-many link coveredBy from sysLine to operand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                                       // ensure correct type and really bound of object operand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       operand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // bind object\n                                       guard = operand.getGuard ();\n\n                                       // check object guard is really bound\n                                       JavaSDM.ensure ( guard != null );\n\n                                       // bind object\n                                       _TmpObject = guard.getSpecification ();\n\n                                       // ensure correct type and really bound of object spec\n                                       JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                       spec = (LiteralString) _TmpObject;\n\n                                       // check link coveredBy from line to operand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // negative check for link message from messageReceive\n                                          JavaSDM.ensure (messageReceive.getMessage () == null);\n                                          // negative check for link message from messageSend\n                                          JavaSDM.ensure (messageSend.getMessage () == null);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_501097 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_501097 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_501097 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_501097 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_501097.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_804890 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_804890 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_804890 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_804890 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_804890.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_57607 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_57607 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_57607 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_57607 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_57607.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_622573 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_622573 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_622573 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_622573 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_622573.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_622573 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_622573.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_102033 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_102033 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_102033 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_102033 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_102033.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_102033 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_102033.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_605528 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_605528 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_605528 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_605528 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_605528.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_605528 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_605528.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_66669 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_66669 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_66669 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_66669 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_66669.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_66669 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_66669.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_859640 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_859640 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_859640 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_859640.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_859640 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_859640.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_247610 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_247610 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_247610 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_247610.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_247610 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_247610.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_247610 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_247610.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_620888 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_620888 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_620888 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_620888.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_620888 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_620888.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_620888 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_620888.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link receiveEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link receiveEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check object sysLine is really bound\n                                          JavaSDM.ensure ( sysLine != null );\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects sysLine and line \n                                          JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (combo)));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to line\n                                          JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link coveredBy from line to operand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                          // check link coveredBy from line to parentCombo\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                          // check link coveredBy from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // check link coveredBy from combo to sysLine\n                                          JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from messageSend to sysLine\n                                          JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from operand to sysLine\n                                          JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentCombo to sysLine\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentOperand to sysLine\n                                          JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_473(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_768348 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_517706 = null;\n      Interaction __DEC_operand_enclosingInteraction_497356 = null;\n      InteractionOperand __DEC_combo_fragment_719200 = null;\n      InteractionOperand __DEC_messageReceive_fragment_176002 = null;\n      InteractionOperand __DEC_messageSend_fragment_759215 = null;\n      InteractionOperand __DEC_operand_fragment_519771 = null;\n      Constraint __DEC_spec_specification_175089 = null;\n      InteractionOperand __DEC_guard_guard_450447 = null;\n      CombinedFragment __DEC_operand_operand_247968 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterParentOperandToSysLine = null;\n      Lifeline sysLine = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link coveredBy from line to parentCombo\n         JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n         // check link coveredBy from line to parentOperand\n         JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n         // iterate to-many link coveredBy from parentOperand to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToSysLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterParentOperandToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // check isomorphic binding between objects sysLine and line \n               JavaSDM.ensure ( !sysLine.equals (line) );\n\n               // check link coveredBy from parentCombo to sysLine\n               JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n               // iterate to-many link coveredBy from sysLine to combo\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // bind object\n                     interaction = combo.getEnclosingInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link lifeline from line to interaction\n                     JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                     ));\n\n                     // iterate to-many link coveredBy from sysLine to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // iterate to-many link coveredBy from sysLine to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // check link coveredBy from line to operand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                 // iterate to-many link fragment from parentOperand to messageReceive\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                       // ensure correct type and really bound of object messageReceive\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // iterate to-many link trg from parentOperand to _edge_coveredBy\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                       while ( fujaba__IterParentOperandTo_edge_coveredBy.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_coveredBy = (EMoflonEdge) fujaba__IterParentOperandTo_edge_coveredBy.next ();\n\n                                             // check object _edge_coveredBy is really bound\n                                             JavaSDM.ensure ( _edge_coveredBy != null );\n                                             // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                             JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                             // check link src from _edge_coveredBy to line\n                                             JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_768348 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_768348 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_768348 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_768348 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_768348.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_517706 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_517706 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_517706 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_517706 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_517706.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_497356 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_497356 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_497356 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_497356 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_497356.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_719200 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_719200 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_719200 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_719200 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_719200.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_719200 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_719200.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_176002 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_176002 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_176002 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_176002 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_176002.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_176002 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_176002.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_759215 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_759215 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_759215 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_759215 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_759215.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_759215 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_759215.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_519771 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_519771 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_519771 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_519771 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_519771.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_519771 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_519771.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_175089 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_175089 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_175089 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_175089.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_175089 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_175089.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_450447 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_450447 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_450447 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_450447.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_450447 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_450447.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_450447 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_450447.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_247968 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_247968 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_247968 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_247968.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_247968 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_247968.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_247968 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_247968.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_covered is really bound\n                                                JavaSDM.ensure ( _edge_covered != null );\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_covered to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (_edge_covered.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to line\n                                                JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_covered to line\n                                                JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_474(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_113938 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_713364 = null;\n      Interaction __DEC_operand_enclosingInteraction_520597 = null;\n      InteractionOperand __DEC_combo_fragment_560414 = null;\n      InteractionOperand __DEC_messageReceive_fragment_87568 = null;\n      InteractionOperand __DEC_messageSend_fragment_658057 = null;\n      InteractionOperand __DEC_operand_fragment_357435 = null;\n      Constraint __DEC_spec_specification_75362 = null;\n      InteractionOperand __DEC_guard_guard_14923 = null;\n      CombinedFragment __DEC_operand_operand_182242 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterParentComboToSysLine = null;\n      Lifeline sysLine = null;\n      CombinedFragment parentCombo = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // check link coveredBy from line to parentCombo\n         JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n         // iterate to-many link coveredBy from parentCombo to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterParentComboToSysLine = new ArrayList(parentCombo.getCovered()).iterator ();\n\n         while ( fujaba__IterParentComboToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterParentComboToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // check isomorphic binding between objects sysLine and line \n               JavaSDM.ensure ( !sysLine.equals (line) );\n\n               // iterate to-many link coveredBy from sysLine to combo\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // bind object\n                     interaction = combo.getEnclosingInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link lifeline from line to interaction\n                     JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                     ));\n\n                     // iterate to-many link coveredBy from sysLine to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // check link coveredBy from line to operand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                           // iterate to-many link coveredBy from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // iterate to-many link coveredBy from sysLine to parentOperand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                       // ensure correct type and really bound of object parentOperand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       parentOperand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // check link operand from parentOperand to parentCombo\n                                       JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                       ));\n\n                                       // check link coveredBy from line to parentOperand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_113938 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_113938 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_113938 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_113938 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_113938.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_713364 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_713364 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_713364 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_713364 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_713364.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_520597 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_520597 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_520597 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_520597 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_520597.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_560414 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_560414 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_560414 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_560414 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_560414.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_560414 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_560414.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_87568 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_87568 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_87568 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_87568 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_87568.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_87568 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_87568.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_658057 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_658057 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_658057 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_658057 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_658057.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_658057 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_658057.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_357435 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_357435 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_357435 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_357435 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_357435.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_357435 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_357435.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_75362 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_75362 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_75362 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_75362.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_75362 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_75362.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_14923 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_14923 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_14923 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_14923.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_14923 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_14923.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_14923 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_14923.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_182242 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_182242 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_182242 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_182242.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_182242 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_182242.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_182242 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_182242.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to line\n                                                JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_475(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_53767 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_636188 = null;\n      Interaction __DEC_operand_enclosingInteraction_861142 = null;\n      InteractionOperand __DEC_combo_fragment_625678 = null;\n      InteractionOperand __DEC_messageReceive_fragment_298896 = null;\n      InteractionOperand __DEC_messageSend_fragment_300956 = null;\n      InteractionOperand __DEC_operand_fragment_405710 = null;\n      Constraint __DEC_spec_specification_739601 = null;\n      InteractionOperand __DEC_guard_guard_547452 = null;\n      CombinedFragment __DEC_operand_operand_209337 = null;\n      Match match = null;\n      Iterator fujaba__IterParentComboTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterParentComboToSysLine = null;\n      Lifeline sysLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // check link coveredBy from line to parentCombo\n         JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n         // iterate to-many link coveredBy from parentCombo to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterParentComboToSysLine = new ArrayList(parentCombo.getCovered()).iterator ();\n\n         while ( fujaba__IterParentComboToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterParentComboToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // check isomorphic binding between objects sysLine and line \n               JavaSDM.ensure ( !sysLine.equals (line) );\n\n               // iterate to-many link coveredBy from sysLine to combo\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // bind object\n                     interaction = combo.getEnclosingInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link lifeline from line to interaction\n                     JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                     ));\n\n                     // iterate to-many link coveredBy from sysLine to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // check link coveredBy from line to operand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                           // iterate to-many link coveredBy from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // iterate to-many link coveredBy from sysLine to parentOperand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                       // ensure correct type and really bound of object parentOperand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       parentOperand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // check link operand from parentOperand to parentCombo\n                                       JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                       ));\n\n                                       // check link coveredBy from line to parentOperand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // iterate to-many link trg from parentCombo to _edge_coveredBy\n                                             fujaba__Success = false;\n\n                                             fujaba__IterParentComboTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentCombo,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                             while ( fujaba__IterParentComboTo_edge_coveredBy.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   _edge_coveredBy = (EMoflonEdge) fujaba__IterParentComboTo_edge_coveredBy.next ();\n\n                                                   // check object _edge_coveredBy is really bound\n                                                   JavaSDM.ensure ( _edge_coveredBy != null );\n                                                   // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                   JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                   // check link src from _edge_coveredBy to line\n                                                   JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                                   ));\n\n                                                   // story node \'test core match and DECs\'\n                                                   try \n                                                   {\n                                                      fujaba__Success = false; \n\n                                                      // negative check for link message from messageReceive\n                                                      JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                      // negative check for link message from messageSend\n                                                      JavaSDM.ensure (messageSend.getMessage () == null);\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageReceive_enclosingInteraction_53767 = messageReceive.getEnclosingInteraction ();\n\n                                                         // check object __DEC_messageReceive_enclosingInteraction_53767 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_53767 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_53767 and interaction \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_53767.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageSend_enclosingInteraction_636188 = messageSend.getEnclosingInteraction ();\n\n                                                         // check object __DEC_messageSend_enclosingInteraction_636188 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_636188 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_636188 and interaction \n                                                         JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_636188.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_enclosingInteraction_861142 = operand.getEnclosingInteraction ();\n\n                                                         // check object __DEC_operand_enclosingInteraction_861142 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_enclosingInteraction_861142 != null );\n\n                                                         // check isomorphic binding between objects __DEC_operand_enclosingInteraction_861142 and interaction \n                                                         JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_861142.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_combo_fragment_625678 = combo.getEnclosingOperand ();\n\n                                                         // check object __DEC_combo_fragment_625678 is really bound\n                                                         JavaSDM.ensure ( __DEC_combo_fragment_625678 != null );\n\n                                                         // check isomorphic binding between objects __DEC_combo_fragment_625678 and operand \n                                                         JavaSDM.ensure ( !__DEC_combo_fragment_625678.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_combo_fragment_625678 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_combo_fragment_625678.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageReceive_fragment_298896 = messageReceive.getEnclosingOperand ();\n\n                                                         // check object __DEC_messageReceive_fragment_298896 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_fragment_298896 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_fragment_298896 and operand \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_fragment_298896.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_fragment_298896 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_fragment_298896.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageSend_fragment_300956 = messageSend.getEnclosingOperand ();\n\n                                                         // check object __DEC_messageSend_fragment_300956 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_fragment_300956 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_fragment_300956 and operand \n                                                         JavaSDM.ensure ( !__DEC_messageSend_fragment_300956.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_fragment_300956 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_messageSend_fragment_300956.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_fragment_405710 = operand.getEnclosingOperand ();\n\n                                                         // check object __DEC_operand_fragment_405710 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_fragment_405710 != null );\n\n                                                         // check isomorphic binding between objects __DEC_operand_fragment_405710 and operand \n                                                         JavaSDM.ensure ( !__DEC_operand_fragment_405710.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_operand_fragment_405710 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_operand_fragment_405710.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // negative check for link packagedElement from guard\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                      // negative check for link packagedElement from spec\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_spec_specification_739601 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                         // check object __DEC_spec_specification_739601 is really bound\n                                                         JavaSDM.ensure ( __DEC_spec_specification_739601 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(spec.equals(__DEC_spec_specification_739601.getSpecification()));\n\n                                                         // check isomorphic binding between objects __DEC_spec_specification_739601 and guard \n                                                         JavaSDM.ensure ( !__DEC_spec_specification_739601.equals (guard) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_guard_guard_547452 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                         // check object __DEC_guard_guard_547452 is really bound\n                                                         JavaSDM.ensure ( __DEC_guard_guard_547452 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(guard.equals(__DEC_guard_guard_547452.getGuard()));\n\n                                                         // check isomorphic binding between objects __DEC_guard_guard_547452 and operand \n                                                         JavaSDM.ensure ( !__DEC_guard_guard_547452.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_guard_guard_547452 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_guard_guard_547452.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_operand_209337 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                         // check object __DEC_operand_operand_209337 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_operand_209337 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_operand_operand_209337.getOperand().contains(operand));\n\n                                                         // check isomorphic binding between objects __DEC_operand_operand_209337 and combo \n                                                         JavaSDM.ensure ( !__DEC_operand_operand_209337.equals (combo) );\n\n                                                         // check isomorphic binding between objects __DEC_operand_operand_209337 and parentCombo \n                                                         JavaSDM.ensure ( !__DEC_operand_operand_209337.equals (parentCombo) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // negative check for link receiveEvent from messageReceive\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                      // negative check for link receiveEvent from messageSend\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                      // negative check for link sendEvent from messageReceive\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                      // negative check for link sendEvent from messageSend\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                      // check link fragment from operand to operand\n                                                      JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from operand to operand\n                                                      JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check object _edge_covered is really bound\n                                                      JavaSDM.ensure ( _edge_covered != null );\n                                                      // check object _edge_coveredBy is really bound\n                                                      JavaSDM.ensure ( _edge_coveredBy != null );\n                                                      // check object combo is really bound\n                                                      JavaSDM.ensure ( combo != null );\n                                                      // check object guard is really bound\n                                                      JavaSDM.ensure ( guard != null );\n                                                      // check object interaction is really bound\n                                                      JavaSDM.ensure ( interaction != null );\n                                                      // check object line is really bound\n                                                      JavaSDM.ensure ( line != null );\n                                                      // check object messageReceive is really bound\n                                                      JavaSDM.ensure ( messageReceive != null );\n                                                      // check object messageSend is really bound\n                                                      JavaSDM.ensure ( messageSend != null );\n                                                      // check object operand is really bound\n                                                      JavaSDM.ensure ( operand != null );\n                                                      // check object parentCombo is really bound\n                                                      JavaSDM.ensure ( parentCombo != null );\n                                                      // check object parentOperand is really bound\n                                                      JavaSDM.ensure ( parentOperand != null );\n                                                      // check object spec is really bound\n                                                      JavaSDM.ensure ( spec != null );\n                                                      // check object sysLine is really bound\n                                                      JavaSDM.ensure ( sysLine != null );\n                                                      // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                      JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                      // check isomorphic binding between objects parentCombo and combo \n                                                      JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                      // check isomorphic binding between objects sysLine and line \n                                                      JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                      // check isomorphic binding between objects messageSend and messageReceive \n                                                      JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                      // check isomorphic binding between objects parentOperand and operand \n                                                      JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                      // check link fragment from combo to interaction\n                                                      JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                      ));\n\n                                                      // check link fragment from messageReceive to parentOperand\n                                                      JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                      ));\n\n                                                      // check link fragment from messageReceive to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from operand to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from combo to operand\n                                                      JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageReceive to operand\n                                                      JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to operand\n                                                      JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from combo to parentOperand\n                                                      JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to parentOperand\n                                                      JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link guard from operand to guard\n                                                      JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                      ));\n\n                                                      // check link guard from parentOperand to guard\n                                                      JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                      )));\n\n                                                      // check link lifeline from line to interaction\n                                                      JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                      ));\n\n                                                      // check link operand from parentOperand to parentCombo\n                                                      JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                      ));\n\n                                                      // check link operand from operand to combo\n                                                      JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                      .contains (combo)));\n\n                                                      // check link operand from operand to parentCombo\n                                                      JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                      .contains (parentCombo)));\n\n                                                      // check link specification from spec to guard\n                                                      JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                      ));\n\n                                                      // check link src from _edge_covered to parentCombo\n                                                      JavaSDM.ensure (parentCombo.equals (_edge_covered.getSrc ()\n                                                      ));\n\n                                                      // check link src from _edge_coveredBy to line\n                                                      JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                                      ));\n\n                                                      // check link trg from _edge_covered to line\n                                                      JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                                      ));\n\n                                                      // check link trg from _edge_coveredBy to parentCombo\n                                                      JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                                      ));\n\n                                                      // check link coveredBy from line to operand\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                      // check link coveredBy from line to parentCombo\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                      // check link coveredBy from line to parentOperand\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                      // check link coveredBy from combo to sysLine\n                                                      JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from messageSend to sysLine\n                                                      JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from operand to sysLine\n                                                      JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from parentCombo to sysLine\n                                                      JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from parentOperand to sysLine\n                                                      JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                      // create object match\n                                                      match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                      // assign attribute match\n                                                      match.setRuleName (__eClass.getName());\n                                                      // statement node \'bookkeeping with generic isAppropriate method\'\n                                                      fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                      if (fujaba__Success)\n                                                      {\n                                                         // statement node \'Ensure that the correct types of elements are matched\'\n                                                         fujaba__Success = this.checkTypes_BWD(match);\n                                                         if (fujaba__Success)\n                                                         {\n                                                            // story node \'Add match to rule result\'\n                                                            try \n                                                            {\n                                                               fujaba__Success = false; \n\n                                                               // check object __performOperation is really bound\n                                                               JavaSDM.ensure ( __performOperation != null );\n                                                               // check object __result is really bound\n                                                               JavaSDM.ensure ( __result != null );\n                                                               // check object match is really bound\n                                                               JavaSDM.ensure ( match != null );\n\n                                                               // create link\n                                                               org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                               // create link\n                                                               __result.getContents().add(match);\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n\n\n                                                         }\n                                                         else\n                                                         {\n\n                                                         }\n\n                                                      }\n                                                      else\n                                                      {\n\n                                                      }\n                                                      fujaba__Success = true;\n                                                   }\n                                                   catch ( JavaSDMException fujaba__InternalException )\n                                                   {\n                                                      fujaba__Success = false;\n                                                   }\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_476(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_931623 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_280003 = null;\n      Interaction __DEC_operand_enclosingInteraction_556449 = null;\n      InteractionOperand __DEC_combo_fragment_903393 = null;\n      InteractionOperand __DEC_messageReceive_fragment_581228 = null;\n      InteractionOperand __DEC_messageSend_fragment_805404 = null;\n      InteractionOperand __DEC_operand_fragment_31718 = null;\n      Constraint __DEC_spec_specification_298739 = null;\n      InteractionOperand __DEC_guard_guard_25124 = null;\n      CombinedFragment __DEC_operand_operand_836839 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterComboToSysLine = null;\n      Lifeline sysLine = null;\n      Interaction interaction = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingInteraction is really bound\n         JavaSDM.ensure ( _edge_enclosingInteraction != null );\n         // bind object\n         _TmpObject = _edge_enclosingInteraction.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         interaction = combo.getEnclosingInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link trg from _edge_enclosingInteraction to interaction\n         JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n         ));\n\n         // iterate to-many link coveredBy from combo to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterComboToSysLine = new ArrayList(combo.getCovered()).iterator ();\n\n         while ( fujaba__IterComboToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterComboToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // iterate to-many link coveredBy from sysLine to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link coveredBy from sysLine to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link coveredBy from operand to line\n                           fujaba__Success = false;\n\n                           fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n                           while ( fujaba__IterOperandToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check isomorphic binding between objects sysLine and line \n                                 JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                 // check link lifeline from line to interaction\n                                 JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                 ));\n\n                                 // iterate to-many link coveredBy from sysLine to parentOperand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                       // ensure correct type and really bound of object parentOperand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       parentOperand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // bind object\n                                       parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                                       // check object parentCombo is really bound\n                                       JavaSDM.ensure ( parentCombo != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                                       // check isomorphic binding between objects parentCombo and combo \n                                       JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                       // check link coveredBy from line to parentCombo\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                       // check link coveredBy from line to parentOperand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                       // check link coveredBy from parentCombo to sysLine\n                                       JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_931623 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_931623 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_931623 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_931623 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_931623.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_280003 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_280003 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_280003 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_280003 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_280003.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_556449 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_556449 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_556449 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_556449 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_556449.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_903393 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_903393 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_903393 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_903393 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_903393.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_903393 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_903393.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_581228 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_581228 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_581228 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_581228 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_581228.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_581228 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_581228.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_805404 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_805404 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_805404 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_805404 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_805404.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_805404 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_805404.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_31718 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_31718 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_31718 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_31718 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_31718.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_31718 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_31718.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_298739 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_298739 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_298739 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_298739.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_298739 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_298739.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_25124 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_25124 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_25124 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_25124.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_25124 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_25124.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_25124 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_25124.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_836839 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_836839 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_836839 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_836839.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_836839 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_836839.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_836839 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_836839.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_enclosingInteraction is really bound\n                                                JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_enclosingInteraction to combo\n                                                JavaSDM.ensure (combo.equals (_edge_enclosingInteraction.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_enclosingInteraction to interaction\n                                                JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_477(
			EMoflonEdge _edge_enclosingInteraction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_135688 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_523087 = null;\n      Interaction __DEC_operand_enclosingInteraction_520644 = null;\n      InteractionOperand __DEC_combo_fragment_995353 = null;\n      InteractionOperand __DEC_messageReceive_fragment_741817 = null;\n      InteractionOperand __DEC_messageSend_fragment_694261 = null;\n      InteractionOperand __DEC_operand_fragment_935282 = null;\n      Constraint __DEC_spec_specification_378580 = null;\n      InteractionOperand __DEC_guard_guard_674470 = null;\n      CombinedFragment __DEC_operand_operand_357991 = null;\n      Match match = null;\n      Iterator fujaba__IterComboTo_edge_enclosingInteraction = null;\n      EMoflonEdge _edge_enclosingInteraction = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterSysLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterComboToSysLine = null;\n      Lifeline sysLine = null;\n      Interaction interaction = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         interaction = combo.getEnclosingInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link src from _edge_fragment to interaction\n         JavaSDM.ensure (interaction.equals (_edge_fragment.getSrc ()\n         ));\n\n         // iterate to-many link coveredBy from combo to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterComboToSysLine = new ArrayList(combo.getCovered()).iterator ();\n\n         while ( fujaba__IterComboToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterComboToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // iterate to-many link coveredBy from sysLine to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link coveredBy from sysLine to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link coveredBy from sysLine to parentOperand\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                 // ensure correct type and really bound of object parentOperand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 parentOperand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                                 // check object parentCombo is really bound\n                                 JavaSDM.ensure ( parentCombo != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                                 // check isomorphic binding between objects parentCombo and combo \n                                 JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                 // check link coveredBy from parentCombo to sysLine\n                                 JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                 // iterate to-many link coveredBy from parentOperand to line\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToLine.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                                       // check object line is really bound\n                                       JavaSDM.ensure ( line != null );\n                                       // check isomorphic binding between objects sysLine and line \n                                       JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                       // check link lifeline from line to interaction\n                                       JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                       ));\n\n                                       // check link coveredBy from line to operand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                       // check link coveredBy from line to parentCombo\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // iterate to-many link src from combo to _edge_enclosingInteraction\n                                             fujaba__Success = false;\n\n                                             fujaba__IterComboTo_edge_enclosingInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(combo,EMoflonEdge.class,\"src\")).iterator ();\n\n                                             while ( fujaba__IterComboTo_edge_enclosingInteraction.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   _edge_enclosingInteraction = (EMoflonEdge) fujaba__IterComboTo_edge_enclosingInteraction.next ();\n\n                                                   // check object _edge_enclosingInteraction is really bound\n                                                   JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                                                   // check isomorphic binding between objects _edge_fragment and _edge_enclosingInteraction \n                                                   JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingInteraction) );\n\n                                                   // check link trg from _edge_enclosingInteraction to interaction\n                                                   JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n                                                   ));\n\n                                                   // story node \'test core match and DECs\'\n                                                   try \n                                                   {\n                                                      fujaba__Success = false; \n\n                                                      // negative check for link message from messageReceive\n                                                      JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                      // negative check for link message from messageSend\n                                                      JavaSDM.ensure (messageSend.getMessage () == null);\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageReceive_enclosingInteraction_135688 = messageReceive.getEnclosingInteraction ();\n\n                                                         // check object __DEC_messageReceive_enclosingInteraction_135688 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_135688 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_135688 and interaction \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_135688.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageSend_enclosingInteraction_523087 = messageSend.getEnclosingInteraction ();\n\n                                                         // check object __DEC_messageSend_enclosingInteraction_523087 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_523087 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_523087 and interaction \n                                                         JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_523087.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_enclosingInteraction_520644 = operand.getEnclosingInteraction ();\n\n                                                         // check object __DEC_operand_enclosingInteraction_520644 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_enclosingInteraction_520644 != null );\n\n                                                         // check isomorphic binding between objects __DEC_operand_enclosingInteraction_520644 and interaction \n                                                         JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_520644.equals (interaction) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_combo_fragment_995353 = combo.getEnclosingOperand ();\n\n                                                         // check object __DEC_combo_fragment_995353 is really bound\n                                                         JavaSDM.ensure ( __DEC_combo_fragment_995353 != null );\n\n                                                         // check isomorphic binding between objects __DEC_combo_fragment_995353 and operand \n                                                         JavaSDM.ensure ( !__DEC_combo_fragment_995353.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_combo_fragment_995353 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_combo_fragment_995353.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageReceive_fragment_741817 = messageReceive.getEnclosingOperand ();\n\n                                                         // check object __DEC_messageReceive_fragment_741817 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_fragment_741817 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_fragment_741817 and operand \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_fragment_741817.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_messageReceive_fragment_741817 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_fragment_741817.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_messageSend_fragment_694261 = messageSend.getEnclosingOperand ();\n\n                                                         // check object __DEC_messageSend_fragment_694261 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_fragment_694261 != null );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_fragment_694261 and operand \n                                                         JavaSDM.ensure ( !__DEC_messageSend_fragment_694261.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_messageSend_fragment_694261 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_messageSend_fragment_694261.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_fragment_935282 = operand.getEnclosingOperand ();\n\n                                                         // check object __DEC_operand_fragment_935282 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_fragment_935282 != null );\n\n                                                         // check isomorphic binding between objects __DEC_operand_fragment_935282 and operand \n                                                         JavaSDM.ensure ( !__DEC_operand_fragment_935282.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_operand_fragment_935282 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_operand_fragment_935282.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // negative check for link packagedElement from guard\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                      // negative check for link packagedElement from spec\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_spec_specification_378580 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                         // check object __DEC_spec_specification_378580 is really bound\n                                                         JavaSDM.ensure ( __DEC_spec_specification_378580 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(spec.equals(__DEC_spec_specification_378580.getSpecification()));\n\n                                                         // check isomorphic binding between objects __DEC_spec_specification_378580 and guard \n                                                         JavaSDM.ensure ( !__DEC_spec_specification_378580.equals (guard) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_guard_guard_674470 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                         // check object __DEC_guard_guard_674470 is really bound\n                                                         JavaSDM.ensure ( __DEC_guard_guard_674470 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(guard.equals(__DEC_guard_guard_674470.getGuard()));\n\n                                                         // check isomorphic binding between objects __DEC_guard_guard_674470 and operand \n                                                         JavaSDM.ensure ( !__DEC_guard_guard_674470.equals (operand) );\n\n                                                         // check isomorphic binding between objects __DEC_guard_guard_674470 and parentOperand \n                                                         JavaSDM.ensure ( !__DEC_guard_guard_674470.equals (parentOperand) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // check negative bindings\n                                                      try\n                                                      {\n                                                         fujaba__Success = false;\n\n                                                         // bind object\n                                                         __DEC_operand_operand_357991 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                         // check object __DEC_operand_operand_357991 is really bound\n                                                         JavaSDM.ensure ( __DEC_operand_operand_357991 != null );\n\n                                                         // check if contained via correct reference\n                                                         JavaSDM.ensure(__DEC_operand_operand_357991.getOperand().contains(operand));\n\n                                                         // check isomorphic binding between objects __DEC_operand_operand_357991 and combo \n                                                         JavaSDM.ensure ( !__DEC_operand_operand_357991.equals (combo) );\n\n                                                         // check isomorphic binding between objects __DEC_operand_operand_357991 and parentCombo \n                                                         JavaSDM.ensure ( !__DEC_operand_operand_357991.equals (parentCombo) );\n\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n                                                      fujaba__Success = !(fujaba__Success);\n\n                                                      JavaSDM.ensure ( fujaba__Success );\n\n                                                      // negative check for link receiveEvent from messageReceive\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                      // negative check for link receiveEvent from messageSend\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                      // negative check for link sendEvent from messageReceive\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                      // negative check for link sendEvent from messageSend\n                                                      JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                      // check link fragment from operand to operand\n                                                      JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from operand to operand\n                                                      JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check object _edge_enclosingInteraction is really bound\n                                                      JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                                                      // check object _edge_fragment is really bound\n                                                      JavaSDM.ensure ( _edge_fragment != null );\n                                                      // check object combo is really bound\n                                                      JavaSDM.ensure ( combo != null );\n                                                      // check object guard is really bound\n                                                      JavaSDM.ensure ( guard != null );\n                                                      // check object interaction is really bound\n                                                      JavaSDM.ensure ( interaction != null );\n                                                      // check object line is really bound\n                                                      JavaSDM.ensure ( line != null );\n                                                      // check object messageReceive is really bound\n                                                      JavaSDM.ensure ( messageReceive != null );\n                                                      // check object messageSend is really bound\n                                                      JavaSDM.ensure ( messageSend != null );\n                                                      // check object operand is really bound\n                                                      JavaSDM.ensure ( operand != null );\n                                                      // check object parentCombo is really bound\n                                                      JavaSDM.ensure ( parentCombo != null );\n                                                      // check object parentOperand is really bound\n                                                      JavaSDM.ensure ( parentOperand != null );\n                                                      // check object spec is really bound\n                                                      JavaSDM.ensure ( spec != null );\n                                                      // check object sysLine is really bound\n                                                      JavaSDM.ensure ( sysLine != null );\n                                                      // check isomorphic binding between objects _edge_fragment and _edge_enclosingInteraction \n                                                      JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingInteraction) );\n\n                                                      // check isomorphic binding between objects parentCombo and combo \n                                                      JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                      // check isomorphic binding between objects sysLine and line \n                                                      JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                      // check isomorphic binding between objects messageSend and messageReceive \n                                                      JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                      // check isomorphic binding between objects parentOperand and operand \n                                                      JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                      // check link fragment from combo to interaction\n                                                      JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                      ));\n\n                                                      // check link fragment from messageReceive to parentOperand\n                                                      JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                      ));\n\n                                                      // check link fragment from messageReceive to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from operand to interaction\n                                                      JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                      )));\n\n                                                      // check link fragment from combo to operand\n                                                      JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageReceive to operand\n                                                      JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to operand\n                                                      JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from combo to parentOperand\n                                                      JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link fragment from messageSend to parentOperand\n                                                      JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                      )));\n\n                                                      // check link guard from operand to guard\n                                                      JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                      ));\n\n                                                      // check link guard from parentOperand to guard\n                                                      JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                      )));\n\n                                                      // check link lifeline from line to interaction\n                                                      JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                      ));\n\n                                                      // check link operand from parentOperand to parentCombo\n                                                      JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                      ));\n\n                                                      // check link operand from operand to combo\n                                                      JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                      .contains (combo)));\n\n                                                      // check link operand from operand to parentCombo\n                                                      JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                      .contains (parentCombo)));\n\n                                                      // check link specification from spec to guard\n                                                      JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                      ));\n\n                                                      // check link src from _edge_enclosingInteraction to combo\n                                                      JavaSDM.ensure (combo.equals (_edge_enclosingInteraction.getSrc ()\n                                                      ));\n\n                                                      // check link src from _edge_fragment to interaction\n                                                      JavaSDM.ensure (interaction.equals (_edge_fragment.getSrc ()\n                                                      ));\n\n                                                      // check link trg from _edge_enclosingInteraction to interaction\n                                                      JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n                                                      ));\n\n                                                      // check link trg from _edge_fragment to combo\n                                                      JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                                      ));\n\n                                                      // check link coveredBy from line to operand\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                      // check link coveredBy from line to parentCombo\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                      // check link coveredBy from line to parentOperand\n                                                      JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                      // check link coveredBy from combo to sysLine\n                                                      JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from messageSend to sysLine\n                                                      JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from operand to sysLine\n                                                      JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from parentCombo to sysLine\n                                                      JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                      // check link coveredBy from parentOperand to sysLine\n                                                      JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                      // create object match\n                                                      match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                      // assign attribute match\n                                                      match.setRuleName (__eClass.getName());\n                                                      // statement node \'bookkeeping with generic isAppropriate method\'\n                                                      fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                      if (fujaba__Success)\n                                                      {\n                                                         // statement node \'Ensure that the correct types of elements are matched\'\n                                                         fujaba__Success = this.checkTypes_BWD(match);\n                                                         if (fujaba__Success)\n                                                         {\n                                                            // story node \'Add match to rule result\'\n                                                            try \n                                                            {\n                                                               fujaba__Success = false; \n\n                                                               // check object __performOperation is really bound\n                                                               JavaSDM.ensure ( __performOperation != null );\n                                                               // check object __result is really bound\n                                                               JavaSDM.ensure ( __result != null );\n                                                               // check object match is really bound\n                                                               JavaSDM.ensure ( match != null );\n\n                                                               // create link\n                                                               org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                               // create link\n                                                               __result.getContents().add(match);\n\n                                                               fujaba__Success = true;\n                                                            }\n                                                            catch ( JavaSDMException fujaba__InternalException )\n                                                            {\n                                                               fujaba__Success = false;\n                                                            }\n\n\n                                                         }\n                                                         else\n                                                         {\n\n                                                         }\n\n                                                      }\n                                                      else\n                                                      {\n\n                                                      }\n                                                      fujaba__Success = true;\n                                                   }\n                                                   catch ( JavaSDMException fujaba__InternalException )\n                                                   {\n                                                      fujaba__Success = false;\n                                                   }\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_478(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_419438 = null;\n      NormalStep __DEC_alt_stepAlternative_709673 = null;\n      Flow __DEC_step_steps_803573 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_91266 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_91266 = null;\n      Match match = null;\n      Iterator fujaba__IterPackageDeclarationToUseCase = null;\n      UseCase useCase = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      Iterator fujaba__IterPackageDeclarationToSysActor = null;\n      Actor sysActor = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      NormalStep step = null;\n      NamedFlow flow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_steps is really bound\n         JavaSDM.ensure ( _edge_steps != null );\n         // bind object\n         _TmpObject = _edge_steps.getSrc ();\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_steps.getTrg ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // check link steps from step to flow\n         JavaSDM.ensure (flow.equals (step.eContainer()\n         ));\n\n         // iterate to-many link actors from packageDeclaration to sysActor\n         fujaba__Success = false;\n\n         fujaba__IterPackageDeclarationToSysActor = new ArrayList(packageDeclaration.getActors()).iterator ();\n\n         while ( fujaba__IterPackageDeclarationToSysActor.hasNext () )\n         {\n            try\n            {\n               sysActor = (Actor) fujaba__IterPackageDeclarationToSysActor.next ();\n\n               // check object sysActor is really bound\n               JavaSDM.ensure ( sysActor != null );\n               // check isomorphic binding between objects sysActor and actor \n               JavaSDM.ensure ( !sysActor.equals (actor) );\n\n               // iterate to-many link stepAlternative from step to alt\n               fujaba__Success = false;\n\n               fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n               while ( fujaba__IterStepToAlt.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterStepToAlt.next ();\n\n                     // ensure correct type and really bound of object alt\n                     JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n                     alt = (AlternativeFlowAlternative) _TmpObject;\n                     // bind object\n                     _TmpObject = alt.getRef ();\n\n                     // ensure correct type and really bound of object altFlow\n                     JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n                     altFlow = (AlternativeFlow) _TmpObject;\n\n                     // check isomorphic binding between objects flow and altFlow \n                     JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                     // iterate to-many link useCases from packageDeclaration to useCase\n                     fujaba__Success = false;\n\n                     fujaba__IterPackageDeclarationToUseCase = new ArrayList(packageDeclaration.getUseCases()).iterator ();\n\n                     while ( fujaba__IterPackageDeclarationToUseCase.hasNext () )\n                     {\n                        try\n                        {\n                           useCase = (UseCase) fujaba__IterPackageDeclarationToUseCase.next ();\n\n                           // check object useCase is really bound\n                           JavaSDM.ensure ( useCase != null );\n                           // check link flows from flow to useCase\n                           JavaSDM.ensure (useCase.equals (flow.eContainer()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_altFlow_flows_419438 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                                 // check object __DEC_altFlow_flows_419438 is really bound\n                                 JavaSDM.ensure ( __DEC_altFlow_flows_419438 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_altFlow_flows_419438.getFlows().contains(altFlow));\n\n                                 // check isomorphic binding between objects __DEC_altFlow_flows_419438 and useCase \n                                 JavaSDM.ensure ( !__DEC_altFlow_flows_419438.equals (useCase) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_alt_stepAlternative_709673 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                                 // check object __DEC_alt_stepAlternative_709673 is really bound\n                                 JavaSDM.ensure ( __DEC_alt_stepAlternative_709673 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_alt_stepAlternative_709673.getStepAlternative().contains(alt));\n\n                                 // check isomorphic binding between objects __DEC_alt_stepAlternative_709673 and step \n                                 JavaSDM.ensure ( !__DEC_alt_stepAlternative_709673.equals (step) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_step_steps_803573 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                                 // check object __DEC_step_steps_803573 is really bound\n                                 JavaSDM.ensure ( __DEC_step_steps_803573 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_step_steps_803573.getSteps().contains(step));\n\n                                 // check isomorphic binding between objects __DEC_step_steps_803573 and altFlow \n                                 JavaSDM.ensure ( !__DEC_step_steps_803573.equals (altFlow) );\n\n                                 // check isomorphic binding between objects __DEC_step_steps_803573 and flow \n                                 JavaSDM.ensure ( !__DEC_step_steps_803573.equals (flow) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link ref from altFlow to __DEC_altFlow_ref_91266\n                                 fujaba__Success = false;\n\n                                 fujaba__IterAltFlowTo__DEC_altFlow_ref_91266 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_91266.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_altFlow_ref_91266 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_91266.next ();\n\n                                       // check object __DEC_altFlow_ref_91266 is really bound\n                                       JavaSDM.ensure ( __DEC_altFlow_ref_91266 != null );\n                                       // check isomorphic binding between objects __DEC_altFlow_ref_91266 and alt \n                                       JavaSDM.ensure ( !__DEC_altFlow_ref_91266.equals (alt) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check object _edge_steps is really bound\n                              JavaSDM.ensure ( _edge_steps != null );\n                              // check object actor is really bound\n                              JavaSDM.ensure ( actor != null );\n                              // check object alt is really bound\n                              JavaSDM.ensure ( alt != null );\n                              // check object altFlow is really bound\n                              JavaSDM.ensure ( altFlow != null );\n                              // check object flow is really bound\n                              JavaSDM.ensure ( flow != null );\n                              // check object packageDeclaration is really bound\n                              JavaSDM.ensure ( packageDeclaration != null );\n                              // check object step is really bound\n                              JavaSDM.ensure ( step != null );\n                              // check object sysActor is really bound\n                              JavaSDM.ensure ( sysActor != null );\n                              // check object useCase is really bound\n                              JavaSDM.ensure ( useCase != null );\n                              // check isomorphic binding between objects sysActor and actor \n                              JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                              // check isomorphic binding between objects flow and altFlow \n                              JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                              // check link actor from step to actor\n                              JavaSDM.ensure (actor.equals (step.getActor ()\n                              ));\n\n                              // check link ref from alt to altFlow\n                              JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                              ));\n\n                              // check link actors from actor to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                              ));\n\n                              // check link actors from sysActor to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (sysActor.eContainer()\n                              ));\n\n                              // check link flows from flow to useCase\n                              JavaSDM.ensure (useCase.equals (flow.eContainer()\n                              ));\n\n                              // check link flows from altFlow to useCase\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                              .contains (useCase)));\n\n                              // check link src from _edge_steps to flow\n                              JavaSDM.ensure (flow.equals (_edge_steps.getSrc ()\n                              ));\n\n                              // check link stepAlternative from alt to step\n                              JavaSDM.ensure (step.equals (alt.eContainer()\n                              ));\n\n                              // check link steps from step to flow\n                              JavaSDM.ensure (flow.equals (step.eContainer()\n                              ));\n\n                              // check link steps from step to altFlow\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                              .contains (altFlow)));\n\n                              // check link trg from _edge_steps to step\n                              JavaSDM.ensure (step.equals (_edge_steps.getTrg ()\n                              ));\n\n                              // check link useCases from useCase to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                              ));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_FWD(match,packageDeclaration,actor,sysActor,flow,useCase,step,alt,altFlow);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_FWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_107(EMoflonEdge _edge_steps);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_809190 = null;\n      NormalStep __DEC_alt_stepAlternative_356692 = null;\n      Flow __DEC_step_steps_262937 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_471559 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_471559 = null;\n      Match match = null;\n      Iterator fujaba__IterPackageDeclarationToUseCase = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterPackageDeclarationToSysActor = null;\n      Actor sysActor = null;\n      AlternativeFlow altFlow = null;\n      AlternativeFlowAlternative alt = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      NamedFlow flow = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_stepAlternative is really bound\n         JavaSDM.ensure ( _edge_stepAlternative != null );\n         // bind object\n         _TmpObject = _edge_stepAlternative.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // bind object\n         _TmpObject = _edge_stepAlternative.getTrg ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         _TmpObject = alt.getRef ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check link stepAlternative from alt to step\n         JavaSDM.ensure (step.equals (alt.eContainer()\n         ));\n\n         // iterate to-many link actors from packageDeclaration to sysActor\n         fujaba__Success = false;\n\n         fujaba__IterPackageDeclarationToSysActor = new ArrayList(packageDeclaration.getActors()).iterator ();\n\n         while ( fujaba__IterPackageDeclarationToSysActor.hasNext () )\n         {\n            try\n            {\n               sysActor = (Actor) fujaba__IterPackageDeclarationToSysActor.next ();\n\n               // check object sysActor is really bound\n               JavaSDM.ensure ( sysActor != null );\n               // check isomorphic binding between objects sysActor and actor \n               JavaSDM.ensure ( !sysActor.equals (actor) );\n\n               // iterate to-many link useCases from packageDeclaration to useCase\n               fujaba__Success = false;\n\n               fujaba__IterPackageDeclarationToUseCase = new ArrayList(packageDeclaration.getUseCases()).iterator ();\n\n               while ( fujaba__IterPackageDeclarationToUseCase.hasNext () )\n               {\n                  try\n                  {\n                     useCase = (UseCase) fujaba__IterPackageDeclarationToUseCase.next ();\n\n                     // check object useCase is really bound\n                     JavaSDM.ensure ( useCase != null );\n                     // check link flows from flow to useCase\n                     JavaSDM.ensure (useCase.equals (flow.eContainer()\n                     ));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_altFlow_flows_809190 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                           // check object __DEC_altFlow_flows_809190 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_flows_809190 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_altFlow_flows_809190.getFlows().contains(altFlow));\n\n                           // check isomorphic binding between objects __DEC_altFlow_flows_809190 and useCase \n                           JavaSDM.ensure ( !__DEC_altFlow_flows_809190.equals (useCase) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_alt_stepAlternative_356692 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                           // check object __DEC_alt_stepAlternative_356692 is really bound\n                           JavaSDM.ensure ( __DEC_alt_stepAlternative_356692 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_alt_stepAlternative_356692.getStepAlternative().contains(alt));\n\n                           // check isomorphic binding between objects __DEC_alt_stepAlternative_356692 and step \n                           JavaSDM.ensure ( !__DEC_alt_stepAlternative_356692.equals (step) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_step_steps_262937 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                           // check object __DEC_step_steps_262937 is really bound\n                           JavaSDM.ensure ( __DEC_step_steps_262937 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_step_steps_262937.getSteps().contains(step));\n\n                           // check isomorphic binding between objects __DEC_step_steps_262937 and altFlow \n                           JavaSDM.ensure ( !__DEC_step_steps_262937.equals (altFlow) );\n\n                           // check isomorphic binding between objects __DEC_step_steps_262937 and flow \n                           JavaSDM.ensure ( !__DEC_step_steps_262937.equals (flow) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link ref from altFlow to __DEC_altFlow_ref_471559\n                           fujaba__Success = false;\n\n                           fujaba__IterAltFlowTo__DEC_altFlow_ref_471559 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_471559.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_altFlow_ref_471559 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_471559.next ();\n\n                                 // check object __DEC_altFlow_ref_471559 is really bound\n                                 JavaSDM.ensure ( __DEC_altFlow_ref_471559 != null );\n                                 // check isomorphic binding between objects __DEC_altFlow_ref_471559 and alt \n                                 JavaSDM.ensure ( !__DEC_altFlow_ref_471559.equals (alt) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check object _edge_stepAlternative is really bound\n                        JavaSDM.ensure ( _edge_stepAlternative != null );\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object alt is really bound\n                        JavaSDM.ensure ( alt != null );\n                        // check object altFlow is really bound\n                        JavaSDM.ensure ( altFlow != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object packageDeclaration is really bound\n                        JavaSDM.ensure ( packageDeclaration != null );\n                        // check object step is really bound\n                        JavaSDM.ensure ( step != null );\n                        // check object sysActor is really bound\n                        JavaSDM.ensure ( sysActor != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check isomorphic binding between objects sysActor and actor \n                        JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                        // check isomorphic binding between objects flow and altFlow \n                        JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                        // check link actor from step to actor\n                        JavaSDM.ensure (actor.equals (step.getActor ()\n                        ));\n\n                        // check link ref from alt to altFlow\n                        JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                        ));\n\n                        // check link actors from actor to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                        ));\n\n                        // check link actors from sysActor to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (sysActor.eContainer()\n                        ));\n\n                        // check link flows from flow to useCase\n                        JavaSDM.ensure (useCase.equals (flow.eContainer()\n                        ));\n\n                        // check link flows from altFlow to useCase\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                        .contains (useCase)));\n\n                        // check link src from _edge_stepAlternative to step\n                        JavaSDM.ensure (step.equals (_edge_stepAlternative.getSrc ()\n                        ));\n\n                        // check link stepAlternative from alt to step\n                        JavaSDM.ensure (step.equals (alt.eContainer()\n                        ));\n\n                        // check link steps from step to flow\n                        JavaSDM.ensure (flow.equals (step.eContainer()\n                        ));\n\n                        // check link steps from step to altFlow\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                        .contains (altFlow)));\n\n                        // check link trg from _edge_stepAlternative to alt\n                        JavaSDM.ensure (alt.equals (_edge_stepAlternative.getTrg ()\n                        ));\n\n                        // check link useCases from useCase to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                        ));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_FWD(match,packageDeclaration,actor,sysActor,flow,useCase,step,alt,altFlow);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_FWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_108(
			EMoflonEdge _edge_stepAlternative);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_650930 = null;\n      NormalStep __DEC_alt_stepAlternative_30272 = null;\n      Flow __DEC_step_steps_257852 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_722515 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_722515 = null;\n      Match match = null;\n      Iterator fujaba__IterPackageDeclarationToUseCase = null;\n      UseCase useCase = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      Iterator fujaba__IterPackageDeclarationToSysActor = null;\n      Actor sysActor = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      NamedFlow flow = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_actor is really bound\n         JavaSDM.ensure ( _edge_actor != null );\n         // bind object\n         _TmpObject = _edge_actor.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         _TmpObject = _edge_actor.getTrg ();\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n\n         // check link actor from step to actor\n         JavaSDM.ensure (actor.equals (step.getActor ()\n         ));\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // iterate to-many link actors from packageDeclaration to sysActor\n         fujaba__Success = false;\n\n         fujaba__IterPackageDeclarationToSysActor = new ArrayList(packageDeclaration.getActors()).iterator ();\n\n         while ( fujaba__IterPackageDeclarationToSysActor.hasNext () )\n         {\n            try\n            {\n               sysActor = (Actor) fujaba__IterPackageDeclarationToSysActor.next ();\n\n               // check object sysActor is really bound\n               JavaSDM.ensure ( sysActor != null );\n               // check isomorphic binding between objects sysActor and actor \n               JavaSDM.ensure ( !sysActor.equals (actor) );\n\n               // iterate to-many link stepAlternative from step to alt\n               fujaba__Success = false;\n\n               fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n               while ( fujaba__IterStepToAlt.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterStepToAlt.next ();\n\n                     // ensure correct type and really bound of object alt\n                     JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n                     alt = (AlternativeFlowAlternative) _TmpObject;\n                     // bind object\n                     _TmpObject = alt.getRef ();\n\n                     // ensure correct type and really bound of object altFlow\n                     JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n                     altFlow = (AlternativeFlow) _TmpObject;\n\n                     // check isomorphic binding between objects flow and altFlow \n                     JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                     // iterate to-many link useCases from packageDeclaration to useCase\n                     fujaba__Success = false;\n\n                     fujaba__IterPackageDeclarationToUseCase = new ArrayList(packageDeclaration.getUseCases()).iterator ();\n\n                     while ( fujaba__IterPackageDeclarationToUseCase.hasNext () )\n                     {\n                        try\n                        {\n                           useCase = (UseCase) fujaba__IterPackageDeclarationToUseCase.next ();\n\n                           // check object useCase is really bound\n                           JavaSDM.ensure ( useCase != null );\n                           // check link flows from flow to useCase\n                           JavaSDM.ensure (useCase.equals (flow.eContainer()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_altFlow_flows_650930 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                                 // check object __DEC_altFlow_flows_650930 is really bound\n                                 JavaSDM.ensure ( __DEC_altFlow_flows_650930 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_altFlow_flows_650930.getFlows().contains(altFlow));\n\n                                 // check isomorphic binding between objects __DEC_altFlow_flows_650930 and useCase \n                                 JavaSDM.ensure ( !__DEC_altFlow_flows_650930.equals (useCase) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_alt_stepAlternative_30272 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                                 // check object __DEC_alt_stepAlternative_30272 is really bound\n                                 JavaSDM.ensure ( __DEC_alt_stepAlternative_30272 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_alt_stepAlternative_30272.getStepAlternative().contains(alt));\n\n                                 // check isomorphic binding between objects __DEC_alt_stepAlternative_30272 and step \n                                 JavaSDM.ensure ( !__DEC_alt_stepAlternative_30272.equals (step) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_step_steps_257852 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                                 // check object __DEC_step_steps_257852 is really bound\n                                 JavaSDM.ensure ( __DEC_step_steps_257852 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_step_steps_257852.getSteps().contains(step));\n\n                                 // check isomorphic binding between objects __DEC_step_steps_257852 and altFlow \n                                 JavaSDM.ensure ( !__DEC_step_steps_257852.equals (altFlow) );\n\n                                 // check isomorphic binding between objects __DEC_step_steps_257852 and flow \n                                 JavaSDM.ensure ( !__DEC_step_steps_257852.equals (flow) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link ref from altFlow to __DEC_altFlow_ref_722515\n                                 fujaba__Success = false;\n\n                                 fujaba__IterAltFlowTo__DEC_altFlow_ref_722515 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_722515.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_altFlow_ref_722515 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_722515.next ();\n\n                                       // check object __DEC_altFlow_ref_722515 is really bound\n                                       JavaSDM.ensure ( __DEC_altFlow_ref_722515 != null );\n                                       // check isomorphic binding between objects __DEC_altFlow_ref_722515 and alt \n                                       JavaSDM.ensure ( !__DEC_altFlow_ref_722515.equals (alt) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check object _edge_actor is really bound\n                              JavaSDM.ensure ( _edge_actor != null );\n                              // check object actor is really bound\n                              JavaSDM.ensure ( actor != null );\n                              // check object alt is really bound\n                              JavaSDM.ensure ( alt != null );\n                              // check object altFlow is really bound\n                              JavaSDM.ensure ( altFlow != null );\n                              // check object flow is really bound\n                              JavaSDM.ensure ( flow != null );\n                              // check object packageDeclaration is really bound\n                              JavaSDM.ensure ( packageDeclaration != null );\n                              // check object step is really bound\n                              JavaSDM.ensure ( step != null );\n                              // check object sysActor is really bound\n                              JavaSDM.ensure ( sysActor != null );\n                              // check object useCase is really bound\n                              JavaSDM.ensure ( useCase != null );\n                              // check isomorphic binding between objects sysActor and actor \n                              JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                              // check isomorphic binding between objects flow and altFlow \n                              JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                              // check link actor from step to actor\n                              JavaSDM.ensure (actor.equals (step.getActor ()\n                              ));\n\n                              // check link ref from alt to altFlow\n                              JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                              ));\n\n                              // check link actors from actor to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                              ));\n\n                              // check link actors from sysActor to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (sysActor.eContainer()\n                              ));\n\n                              // check link flows from flow to useCase\n                              JavaSDM.ensure (useCase.equals (flow.eContainer()\n                              ));\n\n                              // check link flows from altFlow to useCase\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                              .contains (useCase)));\n\n                              // check link src from _edge_actor to step\n                              JavaSDM.ensure (step.equals (_edge_actor.getSrc ()\n                              ));\n\n                              // check link stepAlternative from alt to step\n                              JavaSDM.ensure (step.equals (alt.eContainer()\n                              ));\n\n                              // check link steps from step to flow\n                              JavaSDM.ensure (flow.equals (step.eContainer()\n                              ));\n\n                              // check link steps from step to altFlow\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                              .contains (altFlow)));\n\n                              // check link trg from _edge_actor to actor\n                              JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n                              ));\n\n                              // check link useCases from useCase to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                              ));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_FWD(match,packageDeclaration,actor,sysActor,flow,useCase,step,alt,altFlow);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_FWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_109(EMoflonEdge _edge_actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_631769 = null;\n      NormalStep __DEC_alt_stepAlternative_958074 = null;\n      Flow __DEC_step_steps_528988 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_697904 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_697904 = null;\n      Match match = null;\n      Iterator fujaba__IterPackageDeclarationToUseCase = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterPackageDeclarationToSysActor = null;\n      Actor sysActor = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      NormalStep step = null;\n      AlternativeFlowAlternative alt = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_ref is really bound\n         JavaSDM.ensure ( _edge_ref != null );\n         // bind object\n         _TmpObject = _edge_ref.getSrc ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         step = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(step.getStepAlternative().contains(alt));\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         _TmpObject = _edge_ref.getTrg ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check link ref from alt to altFlow\n         JavaSDM.ensure (altFlow.equals (alt.getRef ()\n         ));\n\n         // iterate to-many link actors from packageDeclaration to sysActor\n         fujaba__Success = false;\n\n         fujaba__IterPackageDeclarationToSysActor = new ArrayList(packageDeclaration.getActors()).iterator ();\n\n         while ( fujaba__IterPackageDeclarationToSysActor.hasNext () )\n         {\n            try\n            {\n               sysActor = (Actor) fujaba__IterPackageDeclarationToSysActor.next ();\n\n               // check object sysActor is really bound\n               JavaSDM.ensure ( sysActor != null );\n               // check isomorphic binding between objects sysActor and actor \n               JavaSDM.ensure ( !sysActor.equals (actor) );\n\n               // iterate to-many link useCases from packageDeclaration to useCase\n               fujaba__Success = false;\n\n               fujaba__IterPackageDeclarationToUseCase = new ArrayList(packageDeclaration.getUseCases()).iterator ();\n\n               while ( fujaba__IterPackageDeclarationToUseCase.hasNext () )\n               {\n                  try\n                  {\n                     useCase = (UseCase) fujaba__IterPackageDeclarationToUseCase.next ();\n\n                     // check object useCase is really bound\n                     JavaSDM.ensure ( useCase != null );\n                     // check link flows from flow to useCase\n                     JavaSDM.ensure (useCase.equals (flow.eContainer()\n                     ));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_altFlow_flows_631769 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                           // check object __DEC_altFlow_flows_631769 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_flows_631769 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_altFlow_flows_631769.getFlows().contains(altFlow));\n\n                           // check isomorphic binding between objects __DEC_altFlow_flows_631769 and useCase \n                           JavaSDM.ensure ( !__DEC_altFlow_flows_631769.equals (useCase) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_alt_stepAlternative_958074 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                           // check object __DEC_alt_stepAlternative_958074 is really bound\n                           JavaSDM.ensure ( __DEC_alt_stepAlternative_958074 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_alt_stepAlternative_958074.getStepAlternative().contains(alt));\n\n                           // check isomorphic binding between objects __DEC_alt_stepAlternative_958074 and step \n                           JavaSDM.ensure ( !__DEC_alt_stepAlternative_958074.equals (step) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_step_steps_528988 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                           // check object __DEC_step_steps_528988 is really bound\n                           JavaSDM.ensure ( __DEC_step_steps_528988 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_step_steps_528988.getSteps().contains(step));\n\n                           // check isomorphic binding between objects __DEC_step_steps_528988 and altFlow \n                           JavaSDM.ensure ( !__DEC_step_steps_528988.equals (altFlow) );\n\n                           // check isomorphic binding between objects __DEC_step_steps_528988 and flow \n                           JavaSDM.ensure ( !__DEC_step_steps_528988.equals (flow) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link ref from altFlow to __DEC_altFlow_ref_697904\n                           fujaba__Success = false;\n\n                           fujaba__IterAltFlowTo__DEC_altFlow_ref_697904 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_697904.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_altFlow_ref_697904 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_697904.next ();\n\n                                 // check object __DEC_altFlow_ref_697904 is really bound\n                                 JavaSDM.ensure ( __DEC_altFlow_ref_697904 != null );\n                                 // check isomorphic binding between objects __DEC_altFlow_ref_697904 and alt \n                                 JavaSDM.ensure ( !__DEC_altFlow_ref_697904.equals (alt) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check object _edge_ref is really bound\n                        JavaSDM.ensure ( _edge_ref != null );\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object alt is really bound\n                        JavaSDM.ensure ( alt != null );\n                        // check object altFlow is really bound\n                        JavaSDM.ensure ( altFlow != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object packageDeclaration is really bound\n                        JavaSDM.ensure ( packageDeclaration != null );\n                        // check object step is really bound\n                        JavaSDM.ensure ( step != null );\n                        // check object sysActor is really bound\n                        JavaSDM.ensure ( sysActor != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check isomorphic binding between objects sysActor and actor \n                        JavaSDM.ensure ( !sysActor.equals (actor) );\n\n                        // check isomorphic binding between objects flow and altFlow \n                        JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                        // check link actor from step to actor\n                        JavaSDM.ensure (actor.equals (step.getActor ()\n                        ));\n\n                        // check link ref from alt to altFlow\n                        JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                        ));\n\n                        // check link actors from actor to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                        ));\n\n                        // check link actors from sysActor to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (sysActor.eContainer()\n                        ));\n\n                        // check link flows from flow to useCase\n                        JavaSDM.ensure (useCase.equals (flow.eContainer()\n                        ));\n\n                        // check link flows from altFlow to useCase\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                        .contains (useCase)));\n\n                        // check link src from _edge_ref to alt\n                        JavaSDM.ensure (alt.equals (_edge_ref.getSrc ()\n                        ));\n\n                        // check link stepAlternative from alt to step\n                        JavaSDM.ensure (step.equals (alt.eContainer()\n                        ));\n\n                        // check link steps from step to flow\n                        JavaSDM.ensure (flow.equals (step.eContainer()\n                        ));\n\n                        // check link steps from step to altFlow\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                        .contains (altFlow)));\n\n                        // check link trg from _edge_ref to altFlow\n                        JavaSDM.ensure (altFlow.equals (_edge_ref.getTrg ()\n                        ));\n\n                        // check link useCases from useCase to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                        ));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_FWD(match,packageDeclaration,actor,sysActor,flow,useCase,step,alt,altFlow);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_FWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_110(EMoflonEdge _edge_ref);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_170154 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_697861 = null;\n      Interaction __DEC_operand_enclosingInteraction_853732 = null;\n      InteractionOperand __DEC_combo_fragment_341171 = null;\n      InteractionOperand __DEC_messageReceive_fragment_646058 = null;\n      InteractionOperand __DEC_messageSend_fragment_199499 = null;\n      InteractionOperand __DEC_operand_fragment_739155 = null;\n      Constraint __DEC_spec_specification_681914 = null;\n      InteractionOperand __DEC_guard_guard_994181 = null;\n      CombinedFragment __DEC_operand_operand_444938 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterOperandToSysLine = null;\n      Lifeline sysLine = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link coveredBy from line to operand\n         JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n         // iterate to-many link coveredBy from operand to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterOperandToSysLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterOperandToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // check isomorphic binding between objects sysLine and line \n               JavaSDM.ensure ( !sysLine.equals (line) );\n\n               // iterate to-many link coveredBy from sysLine to combo\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // bind object\n                     interaction = combo.getEnclosingInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link lifeline from line to interaction\n                     JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                     ));\n\n                     // iterate to-many link coveredBy from sysLine to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // iterate to-many link coveredBy from sysLine to parentOperand\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                 // ensure correct type and really bound of object parentOperand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 parentOperand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                                 // check object parentCombo is really bound\n                                 JavaSDM.ensure ( parentCombo != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                                 // check isomorphic binding between objects parentCombo and combo \n                                 JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                 // check link coveredBy from line to parentCombo\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                 // check link coveredBy from line to parentOperand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                 // check link coveredBy from parentCombo to sysLine\n                                 JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                 // iterate to-many link fragment from parentOperand to messageReceive\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                       // ensure correct type and really bound of object messageReceive\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // negative check for link message from messageReceive\n                                          JavaSDM.ensure (messageReceive.getMessage () == null);\n                                          // negative check for link message from messageSend\n                                          JavaSDM.ensure (messageSend.getMessage () == null);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_170154 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_170154 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_170154 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_170154 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_170154.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_697861 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_697861 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_697861 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_697861 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_697861.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_853732 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_853732 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_853732 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_853732 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_853732.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_341171 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_341171 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_341171 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_341171 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_341171.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_341171 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_341171.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_646058 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_646058 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_646058 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_646058 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_646058.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_646058 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_646058.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_199499 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_199499 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_199499 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_199499 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_199499.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_199499 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_199499.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_739155 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_739155 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_739155 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_739155 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_739155.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_739155 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_739155.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_681914 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_681914 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_681914 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_681914.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_681914 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_681914.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_994181 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_994181 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_994181 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_994181.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_994181 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_994181.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_994181 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_994181.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_444938 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_444938 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_444938 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_444938.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_444938 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_444938.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_444938 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_444938.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link receiveEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link receiveEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageReceive\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                          // negative check for link sendEvent from messageSend\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check object sysLine is really bound\n                                          JavaSDM.ensure ( sysLine != null );\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects sysLine and line \n                                          JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (combo)));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to line\n                                          JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to operand\n                                          JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link coveredBy from line to operand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                          // check link coveredBy from line to parentCombo\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                          // check link coveredBy from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // check link coveredBy from combo to sysLine\n                                          JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from messageSend to sysLine\n                                          JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from operand to sysLine\n                                          JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentCombo to sysLine\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                          // check link coveredBy from parentOperand to sysLine\n                                          JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_479(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_338443 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_975172 = null;\n      Interaction __DEC_operand_enclosingInteraction_155182 = null;\n      InteractionOperand __DEC_combo_fragment_230784 = null;\n      InteractionOperand __DEC_messageReceive_fragment_934804 = null;\n      InteractionOperand __DEC_messageSend_fragment_754630 = null;\n      InteractionOperand __DEC_operand_fragment_797278 = null;\n      Constraint __DEC_spec_specification_511875 = null;\n      InteractionOperand __DEC_guard_guard_148798 = null;\n      CombinedFragment __DEC_operand_operand_362569 = null;\n      Match match = null;\n      Iterator fujaba__IterOperandTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterOperandToSysLine = null;\n      Lifeline sysLine = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link coveredBy from line to operand\n         JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n         // iterate to-many link coveredBy from operand to sysLine\n         fujaba__Success = false;\n\n         fujaba__IterOperandToSysLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToSysLine.hasNext () )\n         {\n            try\n            {\n               sysLine = (Lifeline) fujaba__IterOperandToSysLine.next ();\n\n               // check object sysLine is really bound\n               JavaSDM.ensure ( sysLine != null );\n               // check isomorphic binding between objects sysLine and line \n               JavaSDM.ensure ( !sysLine.equals (line) );\n\n               // iterate to-many link coveredBy from sysLine to combo\n               fujaba__Success = false;\n\n               fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterSysLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // bind object\n                     interaction = combo.getEnclosingInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link lifeline from line to interaction\n                     JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                     ));\n\n                     // iterate to-many link coveredBy from sysLine to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // iterate to-many link coveredBy from sysLine to parentOperand\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                 // ensure correct type and really bound of object parentOperand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 parentOperand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                                 // check object parentCombo is really bound\n                                 JavaSDM.ensure ( parentCombo != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                                 // check isomorphic binding between objects parentCombo and combo \n                                 JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                 // check link coveredBy from line to parentCombo\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                 // check link coveredBy from line to parentOperand\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                 // check link coveredBy from parentCombo to sysLine\n                                 JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                 // iterate to-many link fragment from parentOperand to messageReceive\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                       // ensure correct type and really bound of object messageReceive\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // iterate to-many link trg from operand to _edge_coveredBy\n                                       fujaba__Success = false;\n\n                                       fujaba__IterOperandTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                       while ( fujaba__IterOperandTo_edge_coveredBy.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_coveredBy = (EMoflonEdge) fujaba__IterOperandTo_edge_coveredBy.next ();\n\n                                             // check object _edge_coveredBy is really bound\n                                             JavaSDM.ensure ( _edge_coveredBy != null );\n                                             // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                             JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                             // check link src from _edge_coveredBy to line\n                                             JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_338443 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_338443 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_338443 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_338443 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_338443.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_975172 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_975172 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_975172 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_975172 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_975172.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_155182 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_155182 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_155182 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_155182 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_155182.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_230784 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_230784 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_230784 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_230784 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_230784.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_230784 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_230784.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_934804 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_934804 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_934804 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_934804 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_934804.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_934804 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_934804.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_754630 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_754630 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_754630 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_754630 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_754630.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_754630 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_754630.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_797278 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_797278 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_797278 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_797278 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_797278.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_797278 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_797278.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_511875 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_511875 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_511875 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_511875.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_511875 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_511875.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_148798 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_148798 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_148798 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_148798.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_148798 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_148798.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_148798 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_148798.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_362569 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_362569 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_362569 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_362569.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_362569 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_362569.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_362569 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_362569.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_covered is really bound\n                                                JavaSDM.ensure ( _edge_covered != null );\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_covered to operand\n                                                JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to line\n                                                JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_covered to line\n                                                JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to operand\n                                                JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_480(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_35776 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_23201 = null;\n      Interaction __DEC_operand_enclosingInteraction_295796 = null;\n      InteractionOperand __DEC_combo_fragment_763994 = null;\n      InteractionOperand __DEC_messageReceive_fragment_183778 = null;\n      InteractionOperand __DEC_messageSend_fragment_974548 = null;\n      InteractionOperand __DEC_operand_fragment_397624 = null;\n      Constraint __DEC_spec_specification_984930 = null;\n      InteractionOperand __DEC_guard_guard_450462 = null;\n      CombinedFragment __DEC_operand_operand_887848 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterOperandToSysLine = null;\n      Lifeline sysLine = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_guard is really bound\n         JavaSDM.ensure ( _edge_guard != null );\n         // bind object\n         _TmpObject = _edge_guard.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link trg from _edge_guard to guard\n         JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n         ));\n\n         // iterate to-many link coveredBy from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // iterate to-many link coveredBy from operand to sysLine\n               fujaba__Success = false;\n\n               fujaba__IterOperandToSysLine = new ArrayList(operand.getCovered()).iterator ();\n\n               while ( fujaba__IterOperandToSysLine.hasNext () )\n               {\n                  try\n                  {\n                     sysLine = (Lifeline) fujaba__IterOperandToSysLine.next ();\n\n                     // check object sysLine is really bound\n                     JavaSDM.ensure ( sysLine != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // iterate to-many link coveredBy from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // bind object\n                           interaction = combo.getEnclosingInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // iterate to-many link coveredBy from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // iterate to-many link coveredBy from sysLine to parentOperand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                       // ensure correct type and really bound of object parentOperand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       parentOperand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // bind object\n                                       parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                                       // check object parentCombo is really bound\n                                       JavaSDM.ensure ( parentCombo != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                                       // check isomorphic binding between objects parentCombo and combo \n                                       JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                       // check link coveredBy from line to parentCombo\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                       // check link coveredBy from line to parentOperand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                       // check link coveredBy from parentCombo to sysLine\n                                       JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_35776 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_35776 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_35776 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_35776 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_35776.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_23201 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_23201 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_23201 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_23201 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_23201.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_295796 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_295796 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_295796 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_295796 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_295796.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_763994 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_763994 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_763994 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_763994 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_763994.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_763994 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_763994.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_183778 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_183778 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_183778 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_183778 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_183778.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_183778 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_183778.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_974548 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_974548 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_974548 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_974548 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_974548.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_974548 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_974548.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_397624 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_397624 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_397624 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_397624 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_397624.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_397624 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_397624.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_984930 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_984930 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_984930 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_984930.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_984930 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_984930.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_450462 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_450462 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_450462 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_450462.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_450462 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_450462.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_450462 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_450462.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_887848 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_887848 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_887848 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_887848.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_887848 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_887848.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_887848 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_887848.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_guard is really bound\n                                                JavaSDM.ensure ( _edge_guard != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_guard to operand\n                                                JavaSDM.ensure (operand.equals (_edge_guard.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_guard to guard\n                                                JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_481(EMoflonEdge _edge_guard);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_761715 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_507628 = null;\n      Interaction __DEC_operand_enclosingInteraction_84786 = null;\n      InteractionOperand __DEC_combo_fragment_865537 = null;\n      InteractionOperand __DEC_messageReceive_fragment_180474 = null;\n      InteractionOperand __DEC_messageSend_fragment_651771 = null;\n      InteractionOperand __DEC_operand_fragment_503566 = null;\n      Constraint __DEC_spec_specification_667793 = null;\n      InteractionOperand __DEC_guard_guard_499656 = null;\n      CombinedFragment __DEC_operand_operand_83997 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterSysLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterSysLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterSysLineToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterOperandToSysLine = null;\n      Lifeline sysLine = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionOperand operand = null;\n      InteractionConstraint guard = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_specification is really bound\n         JavaSDM.ensure ( _edge_specification != null );\n         // bind object\n         _TmpObject = _edge_specification.getSrc ();\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n\n         // bind object\n         operand = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(guard.equals(operand.getGuard()));\n\n         // bind object\n         _TmpObject = _edge_specification.getTrg ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link specification from spec to guard\n         JavaSDM.ensure (guard.equals (spec.eContainer()\n         ));\n\n         // iterate to-many link coveredBy from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // iterate to-many link coveredBy from operand to sysLine\n               fujaba__Success = false;\n\n               fujaba__IterOperandToSysLine = new ArrayList(operand.getCovered()).iterator ();\n\n               while ( fujaba__IterOperandToSysLine.hasNext () )\n               {\n                  try\n                  {\n                     sysLine = (Lifeline) fujaba__IterOperandToSysLine.next ();\n\n                     // check object sysLine is really bound\n                     JavaSDM.ensure ( sysLine != null );\n                     // check isomorphic binding between objects sysLine and line \n                     JavaSDM.ensure ( !sysLine.equals (line) );\n\n                     // iterate to-many link coveredBy from sysLine to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterSysLineToCombo = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterSysLineToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterSysLineToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // bind object\n                           interaction = combo.getEnclosingInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link lifeline from line to interaction\n                           JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                           ));\n\n                           // iterate to-many link coveredBy from sysLine to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterSysLineToMessageSend = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterSysLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterSysLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // iterate to-many link coveredBy from sysLine to parentOperand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterSysLineToParentOperand = new ArrayList(sysLine.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterSysLineToParentOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterSysLineToParentOperand.next ();\n\n                                       // ensure correct type and really bound of object parentOperand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       parentOperand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // bind object\n                                       parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                                       // check object parentCombo is really bound\n                                       JavaSDM.ensure ( parentCombo != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                                       // check isomorphic binding between objects parentCombo and combo \n                                       JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                       // check link coveredBy from line to parentCombo\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                       // check link coveredBy from line to parentOperand\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                       // check link coveredBy from parentCombo to sysLine\n                                       JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                       // iterate to-many link fragment from parentOperand to messageReceive\n                                       fujaba__Success = false;\n\n                                       fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                       while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                             // ensure correct type and really bound of object messageReceive\n                                             JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                             messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                             // check isomorphic binding between objects messageSend and messageReceive \n                                             JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // negative check for link message from messageReceive\n                                                JavaSDM.ensure (messageReceive.getMessage () == null);\n                                                // negative check for link message from messageSend\n                                                JavaSDM.ensure (messageSend.getMessage () == null);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_761715 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_761715 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_761715 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_761715 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_761715.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_507628 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_507628 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_507628 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_507628 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_507628.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_84786 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_84786 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_84786 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_84786 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_84786.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_865537 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_865537 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_865537 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_865537 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_865537.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_865537 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_865537.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_180474 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_180474 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_180474 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_180474 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_180474.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_180474 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_180474.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_651771 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_651771 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_651771 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_651771 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_651771.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_651771 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_651771.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_503566 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_503566 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_503566 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_503566 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_503566.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_503566 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_503566.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_667793 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_667793 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_667793 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_667793.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_667793 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_667793.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_499656 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_499656 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_499656 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_499656.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_499656 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_499656.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_499656 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_499656.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_83997 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_83997 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_83997 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_83997.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_83997 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_83997.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_83997 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_83997.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link receiveEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link receiveEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageReceive\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\") .size() == 0);\n                                                // negative check for link sendEvent from messageSend\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\") .size() == 0);\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_specification is really bound\n                                                JavaSDM.ensure ( _edge_specification != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check object sysLine is really bound\n                                                JavaSDM.ensure ( sysLine != null );\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects sysLine and line \n                                                JavaSDM.ensure ( !sysLine.equals (line) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (combo)));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_specification to guard\n                                                JavaSDM.ensure (guard.equals (_edge_specification.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_specification to spec\n                                                JavaSDM.ensure (spec.equals (_edge_specification.getTrg ()\n                                                ));\n\n                                                // check link coveredBy from line to operand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (operand));\n\n                                                // check link coveredBy from line to parentCombo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentCombo));\n\n                                                // check link coveredBy from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // check link coveredBy from combo to sysLine\n                                                JavaSDM.ensure (combo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from messageSend to sysLine\n                                                JavaSDM.ensure (messageSend.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from operand to sysLine\n                                                JavaSDM.ensure (operand.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentCombo to sysLine\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (sysLine));\n\n                                                // check link coveredBy from parentOperand to sysLine\n                                                JavaSDM.ensure (parentOperand.getCovered ().contains (sysLine));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,sysLine,messageSend,combo,operand,parentOperand,parentCombo,messageReceive,line,interaction,guard,spec);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_482(
			EMoflonEdge _edge_specification);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // AltUserStepNFToComboRule
