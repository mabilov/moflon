/**
 */
package UseCaseToModalSequenceDiagramIntegration.Rules;

import ModalSequenceDiagram.CombinedFragment;
import ModalSequenceDiagram.Constraint;
import ModalSequenceDiagram.Interaction;
import ModalSequenceDiagram.InteractionConstraint;
import ModalSequenceDiagram.InteractionOperand;
import ModalSequenceDiagram.Lifeline;
import ModalSequenceDiagram.LiteralString;
import ModalSequenceDiagram.Message;
import ModalSequenceDiagram.MessageEnd;
import ModalSequenceDiagram.MessageOccurrenceSpecification;
import ModalSequenceDiagram.ModalSequenceDiagramFactory;
import ModalSequenceDiagram.Model;

import TGGLanguage.csp.*;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NamedFlow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import UseCaseToModalSequenceDiagramIntegration.ActorToLifeline;
import UseCaseToModalSequenceDiagramIntegration.FlowToInteractionFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToMessage;
import UseCaseToModalSequenceDiagramIntegration.PackageDeclarationToPackage;
import UseCaseToModalSequenceDiagramIntegration.ParallelStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.StepAlternativeToInteractionOperand;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToInteraction;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToModalSequenceDiagramIntegrationFactory;
import UseCaseToModalSequenceDiagramIntegration.UseCasesModelToModel;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Alt Sys Step NF To Combo Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see UseCaseToModalSequenceDiagramIntegration.Rules.RulesPackage#getAltSysStepNFToComboRule()
 * @model
 * @generated
 */
public interface AltSysStepNFToComboRule extends AbstractRule,
		AltStepNFToComboRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __useCase_flows_flow = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,actor,flow,step,alt,altFlow,useCase));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __alt_ref_altFlow\n            __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_stepAlternative_alt\n            __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_actor_actor\n            __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __flow_steps_step\n            __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __step_stepAlternative_alt\n            __step_stepAlternative_alt.setName (\"stepAlternative\");\n            // assign attribute __alt_ref_altFlow\n            __alt_ref_altFlow.setName (\"ref\");\n            // assign attribute __flow_steps_step\n            __flow_steps_step.setName (\"steps\");\n            // assign attribute __step_actor_actor\n            __step_actor_actor.setName (\"actor\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,step,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,alt,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__alt_ref_altFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_stepAlternative_alt,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,altFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_actor_actor,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__flow_steps_step,\"toBeTranslatedEdges\");\n\n            // create link\n            __step_actor_actor.setTrg( actor);\n\n\n            // create link\n            __flow_steps_step.setSrc( flow);\n\n\n            // create link\n            __step_stepAlternative_alt.setSrc( step);\n\n\n            // create link\n            __step_actor_actor.setSrc( step);\n\n\n            // create link\n            __flow_steps_step.setTrg( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setTrg( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setSrc( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setTrg( altFlow);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __useCase_flows_flow\n            __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __useCase_flows_flow\n            __useCase_flows_flow.setName (\"flows\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,actor,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,flow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,useCase,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__useCase_flows_flow,\"contextEdges\");\n\n            // create link\n            __useCase_flows_flow.setTrg( flow);\n\n\n            // create link\n            __useCase_flows_flow.setSrc( useCase);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,actor,flow,step,alt,altFlow,useCase);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, Actor actor, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      InteractionOperand operand = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      CombinedFragment combo = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      NormalStepToMessage stepToMessage = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      InteractionConstraint guard = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      LiteralString spec = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge messageReceive__message__message = null;\n      EMoflonEdge line__coveredBy__parentOperand = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge line__coveredBy__operand = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge parentCombo__covered__line = null;\n      EMoflonEdge line__coveredBy__parentCombo = null;\n      EMoflonEdge parentOperand__fragment__messageSend = null;\n      EMoflonEdge message__interaction__interaction = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge operand__covered__line = null;\n      EMoflonEdge messageSend__covered__line = null;\n      EMoflonEdge parentOperand__fragment__combo = null;\n      EMoflonEdge messageReceive__enclosingOperand__parentOperand = null;\n      EMoflonEdge combo__operand__operand = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge messageSend__message__message = null;\n      EMoflonEdge message__sendEvent__messageSend = null;\n      EMoflonEdge messageSend__enclosingOperand__parentOperand = null;\n      EMoflonEdge parentOperand__covered__line = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge combo__enclosingOperand__parentOperand = null;\n      EMoflonEdge interaction__message__message = null;\n      EMoflonEdge operand__guard__guard = null;\n      EMoflonEdge line__coveredBy__messageSend = null;\n      EMoflonEdge message__receiveEvent__messageReceive = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge guard__specification__spec = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge parentOperand__fragment__messageReceive = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object operand\n         operand = ModalSequenceDiagramFactory.eINSTANCE.createInteractionOperand();\n\n         // create object messageSend\n         messageSend = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object message\n         message = ModalSequenceDiagramFactory.eINSTANCE.createMessage();\n\n         // create object messageReceive\n         messageReceive = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object combo\n         combo = ModalSequenceDiagramFactory.eINSTANCE.createCombinedFragment();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object guard\n         guard = ModalSequenceDiagramFactory.eINSTANCE.createInteractionConstraint();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // create object spec\n         spec = ModalSequenceDiagramFactory.eINSTANCE.createLiteralString();\n\n         // assign attribute combo\n         combo.setInteractionOperator ((ModalSequenceDiagram.InteractionOperatorKind)csp.getValue(\"combo\",\"interactionOperator\"));\n         // assign attribute guard\n         guard.setName ((java.lang.String)csp.getValue(\"guard\",\"name\"));\n         // assign attribute spec\n         spec.setValue ((java.lang.String)csp.getValue(\"spec\",\"value\"));\n         // assign attribute message\n         message.setName ((java.lang.String)csp.getValue(\"message\",\"name\"));\n\n         // create link\n         operand.getCovered().add(line);\n\n\n         // create link\n         messageSend.getCovered().add(line);\n\n\n         // create link\n         parentOperand.getCovered().add(line);\n\n\n         // create link\n         parentCombo.getCovered().add(line);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageSend,message,\"message\");\n\n         // create link\n         parentOperand.getFragment().add(messageSend);\n\n\n         // create link\n         message.setSendEvent( messageSend);\n\n\n         // create link\n         messageReceive.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         combo.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageReceive,message,\"message\");\n\n         // create link\n         message.setReceiveEvent( messageReceive);\n\n\n         // create link\n         \tcombo.getOperand().add(operand); // add link\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         \toperand.setGuard(guard); // add link to one\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         \tguard.setSpecification(spec); // add link to one\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         interaction.getMessage().add(message);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects message and flowToParentOperand \n         JavaSDM.ensure ( !message.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToParentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects parentCombo and message \n         JavaSDM.ensure ( !parentCombo.equals (message) );\n\n         // check isomorphic binding between objects parentOperand and message \n         JavaSDM.ensure ( !parentOperand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToMessage and parentCombo \n         JavaSDM.ensure ( !stepToMessage.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and parentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object messageReceive__message__message\n         messageReceive__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentOperand\n         line__coveredBy__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__operand\n         line__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentCombo__covered__line\n         parentCombo__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentCombo\n         line__coveredBy__parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__messageSend\n         parentOperand__fragment__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__interaction__interaction\n         message__interaction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_actor_actor\n         __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__line\n         operand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__covered__line\n         messageSend__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__combo\n         parentOperand__fragment__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__operand__operand\n         combo__operand__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__message__message\n         messageSend__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__sendEvent__messageSend\n         message__sendEvent__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__enclosingOperand__parentOperand\n         messageSend__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__covered__line\n         parentOperand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__enclosingOperand__parentOperand\n         combo__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__message__message\n         interaction__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__guard__guard\n         operand__guard__guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__messageSend\n         line__coveredBy__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_stepAlternative_alt\n         __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object guard__specification__spec\n         guard__specification__spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __alt_ref_altFlow\n         __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __flow_steps_step\n         __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltSysStepNFToComboRule\");\n         // assign attribute line__coveredBy__messageSend\n         line__coveredBy__messageSend.setName (\"coveredBy\");\n         // assign attribute messageSend__covered__line\n         messageSend__covered__line.setName (\"covered\");\n         // assign attribute parentOperand__fragment__messageSend\n         parentOperand__fragment__messageSend.setName (\"fragment\");\n         // assign attribute messageSend__enclosingOperand__parentOperand\n         messageSend__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive.setName (\"fragment\");\n         // assign attribute messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__parentOperand\n         line__coveredBy__parentOperand.setName (\"coveredBy\");\n         // assign attribute parentOperand__covered__line\n         parentOperand__covered__line.setName (\"covered\");\n         // assign attribute parentOperand__fragment__combo\n         parentOperand__fragment__combo.setName (\"fragment\");\n         // assign attribute combo__enclosingOperand__parentOperand\n         combo__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__parentCombo\n         line__coveredBy__parentCombo.setName (\"coveredBy\");\n         // assign attribute parentCombo__covered__line\n         parentCombo__covered__line.setName (\"covered\");\n         // assign attribute __step_stepAlternative_alt\n         __step_stepAlternative_alt.setName (\"stepAlternative\");\n         // assign attribute __alt_ref_altFlow\n         __alt_ref_altFlow.setName (\"ref\");\n         // assign attribute combo__operand__operand\n         combo__operand__operand.setName (\"operand\");\n         // assign attribute line__coveredBy__operand\n         line__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__line\n         operand__covered__line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute operand__guard__guard\n         operand__guard__guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute guard__specification__spec\n         guard__specification__spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute __flow_steps_step\n         __flow_steps_step.setName (\"steps\");\n         // assign attribute __step_actor_actor\n         __step_actor_actor.setName (\"actor\");\n         // assign attribute message__sendEvent__messageSend\n         message__sendEvent__messageSend.setName (\"sendEvent\");\n         // assign attribute message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive.setName (\"receiveEvent\");\n         // assign attribute message__interaction__interaction\n         message__interaction__interaction.setName (\"interaction\");\n         // assign attribute interaction__message__message\n         interaction__message__message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute messageSend__message__message\n         messageSend__message__message.setName (\"message\");\n         // assign attribute messageReceive__message__message\n         messageReceive__message__message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentCombo__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentCombo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__interaction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_actor_actor,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__operand__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__sendEvent__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__guard__guard,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__receiveEvent__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_stepAlternative_alt,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard__specification__spec,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__alt_ref_altFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__flow_steps_step,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__messageReceive,\"createdEdges\");\n\n         // create link\n         __step_actor_actor.setTrg( actor);\n\n\n         // create link\n         line__coveredBy__parentCombo.setSrc( line);\n\n\n         // create link\n         operand__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__parentOperand.setSrc( line);\n\n\n         // create link\n         parentCombo__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__operand.setSrc( line);\n\n\n         // create link\n         messageSend__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__messageSend.setSrc( line);\n\n\n         // create link\n         parentOperand__covered__line.setTrg( line);\n\n\n         // create link\n         messageSend__enclosingOperand__parentOperand.setSrc( messageSend);\n\n\n         // create link\n         messageSend__covered__line.setSrc( messageSend);\n\n\n         // create link\n         parentOperand__fragment__messageSend.setTrg( messageSend);\n\n\n         // create link\n         message__sendEvent__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__message__message.setSrc( messageSend);\n\n\n         // create link\n         line__coveredBy__messageSend.setTrg( messageSend);\n\n\n         // create link\n         __flow_steps_step.setSrc( flow);\n\n\n         // create link\n         combo__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageSend.setSrc( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         messageSend__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__covered__line.setSrc( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__combo.setSrc( parentOperand);\n\n\n         // create link\n         line__coveredBy__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         messageReceive__message__message.setSrc( messageReceive);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         combo__enclosingOperand__parentOperand.setSrc( combo);\n\n\n         // create link\n         combo__operand__operand.setSrc( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         parentOperand__fragment__combo.setTrg( combo);\n\n\n         // create link\n         parentCombo__covered__line.setSrc( parentCombo);\n\n\n         // create link\n         line__coveredBy__parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         __step_stepAlternative_alt.setSrc( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         __flow_steps_step.setTrg( step);\n\n\n         // create link\n         __step_actor_actor.setSrc( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         __alt_ref_altFlow.setSrc( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         __step_stepAlternative_alt.setTrg( alt);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         operand__guard__guard.setSrc( operand);\n\n\n         // create link\n         combo__operand__operand.setTrg( operand);\n\n\n         // create link\n         line__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         operand__covered__line.setSrc( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         guard__specification__spec.setSrc( guard);\n\n\n         // create link\n         operand__guard__guard.setTrg( guard);\n\n\n         // create link\n         guard__specification__spec.setTrg( spec);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         __alt_ref_altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         message__sendEvent__messageSend.setSrc( message);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setSrc( message);\n\n\n         // create link\n         messageReceive__message__message.setTrg( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         messageSend__message__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setSrc( message);\n\n\n         // create link\n         interaction__message__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setTrg( interaction);\n\n\n         // create link\n         interaction__message__message.setSrc( interaction);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,actor,line,messageSend,flow,parentOperand,flowToParentOperand,messageReceive,combo,parentCombo,step,alt,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,interaction,stepToMessage);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Actor actor = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      CSP csp = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterUseCaseToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterFlowToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltSysStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (match.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (match.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link source from flow to flowToParentOperand\n         fujaba__Success = false;\n\n         fujaba__IterFlowToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(flow,FlowToInteractionFragment.class,\"source\")).iterator ();\n\n         while ( fujaba__IterFlowToFlowToParentOperand.hasNext () )\n         {\n            try\n            {\n               flowToParentOperand = (FlowToInteractionFragment) fujaba__IterFlowToFlowToParentOperand.next ();\n\n               // check object flowToParentOperand is really bound\n               JavaSDM.ensure ( flowToParentOperand != null );\n               // bind object\n               _TmpObject = flowToParentOperand.getTarget ();\n\n               // ensure correct type and really bound of object parentOperand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               parentOperand = (InteractionOperand) _TmpObject;\n\n               // iterate to-many link source from useCase to useCaseToInteraction\n               fujaba__Success = false;\n\n               fujaba__IterUseCaseToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(useCase,UseCaseToInteraction.class,\"source\")).iterator ();\n\n               while ( fujaba__IterUseCaseToUseCaseToInteraction.hasNext () )\n               {\n                  try\n                  {\n                     useCaseToInteraction = (UseCaseToInteraction) fujaba__IterUseCaseToUseCaseToInteraction.next ();\n\n                     // check object useCaseToInteraction is really bound\n                     JavaSDM.ensure ( useCaseToInteraction != null );\n                     // bind object\n                     interaction = useCaseToInteraction.getTarget ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // story node \'find context\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object alt is really bound\n                        JavaSDM.ensure ( alt != null );\n                        // check object altFlow is really bound\n                        JavaSDM.ensure ( altFlow != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object flowToParentOperand is really bound\n                        JavaSDM.ensure ( flowToParentOperand != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object step is really bound\n                        JavaSDM.ensure ( step != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check object useCaseToInteraction is really bound\n                        JavaSDM.ensure ( useCaseToInteraction != null );\n                        // check isomorphic binding between objects flow and altFlow \n                        JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                        // check link actor from step to actor\n                        JavaSDM.ensure (actor.equals (step.getActor ()\n                        ));\n\n                        // check link ref from alt to altFlow\n                        JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                        ));\n\n                        // check link flows from flow to useCase\n                        JavaSDM.ensure (useCase.equals (flow.eContainer()\n                        ));\n\n                        // bind object\n                        parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n\n                        // check if contained via correct reference\n                        JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                        // check link source from flowToParentOperand to flow\n                        JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                        ));\n\n                        // check link source from useCaseToInteraction to useCase\n                        JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                        ));\n\n                        // check link stepAlternative from alt to step\n                        JavaSDM.ensure (step.equals (alt.eContainer()\n                        ));\n\n                        // check link steps from step to flow\n                        JavaSDM.ensure (flow.equals (step.eContainer()\n                        ));\n\n                        // check link target from flowToParentOperand to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                        ));\n\n                        // check link target from useCaseToInteraction to interaction\n                        JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                        ));\n\n                        // iterate to-many link lifeline from interaction to line\n                        fujaba__Success = false;\n\n                        fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n                        while ( fujaba__IterInteractionToLine.hasNext () )\n                        {\n                           try\n                           {\n                              line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __step_actor_actor\n                              __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flow_steps_step\n                              __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __step_stepAlternative_alt\n                              __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __alt_ref_altFlow\n                              __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow.setName (\"source\");\n                              // assign attribute __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand.setName (\"target\");\n                              // assign attribute __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand.setName (\"operand\");\n                              // assign attribute __step_stepAlternative_alt\n                              __step_stepAlternative_alt.setName (\"stepAlternative\");\n                              // assign attribute __alt_ref_altFlow\n                              __alt_ref_altFlow.setName (\"ref\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __flow_steps_step\n                              __flow_steps_step.setName (\"steps\");\n                              // assign attribute __step_actor_actor\n                              __step_actor_actor.setName (\"actor\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __step_actor_actor.setTrg( actor);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              __flow_steps_step.setSrc( flow);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(step);\n\n\n                              // create link\n                              __flow_steps_step.setTrg( step);\n\n\n                              // create link\n                              __step_actor_actor.setSrc( step);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setSrc( step);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(alt);\n\n\n                              // create link\n                              __alt_ref_altFlow.setSrc( alt);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setTrg( alt);\n\n\n                              // create link\n                              __alt_ref_altFlow.setTrg( altFlow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(altFlow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__alt_ref_altFlow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_actor_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_stepAlternative_alt,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,actor,line,flow,parentOperand,flowToParentOperand,parentCombo,step,alt,altFlow,useCase,useCaseToInteraction,interaction));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"AltSysStepNFToComboRule\");\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n\n                                    // create link\n                                    ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n                        }\n                        JavaSDM.ensure (fujaba__Success);\n\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"actor\", actor);\nmatch.registerObject(\"flow\", flow);\nmatch.registerObject(\"step\", step);\nmatch.registerObject(\"alt\", alt);\nmatch.registerObject(\"altFlow\", altFlow);\nmatch.registerObject(\"useCase\", useCase);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, Actor actor, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"system\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_actor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"actor.type\", true, csp);\r\nvar_actor_type.setValue(actor.getType());\r\nvar_actor_type.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqActorType eqActorType = new EqActorType();\r\n\r\ncsp.getConstraints().add(eqActorType);\r\n\r\n// Solve CSP\r\neqActorType.setRuleName(\"\");\r\neqActorType.solve(var_actor_type,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, Actor actor, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", true, csp);\r\nvar_altFlow_name.setValue(altFlow.getName());\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", true, csp);\r\nvar_alt_condition.setValue(alt.getCondition());\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", true, csp);\r\nvar_step_name.setValue(step.getName());\r\nvar_step_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", csp);\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", csp);\r\nvar_spec_value.setType(\"\");\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", csp);\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", csp);\r\nvar_message_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();EqInterOperKind eqInterOperKind = new EqInterOperKind();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eqInterOperKind);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"altFlow\",altFlow);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			Actor actor, Lifeline line, NamedFlow flow,
			InteractionOperand parentOperand,
			FlowToInteractionFragment flowToParentOperand,
			CombinedFragment parentCombo, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, UseCaseToInteraction useCaseToInteraction,
			Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject actor,
			EObject line, EObject messageSend, EObject flow,
			EObject parentOperand, EObject flowToParentOperand,
			EObject messageReceive, EObject combo, EObject parentCombo,
			EObject step, EObject alt, EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message, EObject interaction,
			EObject stepToMessage);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"step\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getNormalStep()) && match.getObject(\"alt\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlowAlternative()) && match.getObject(\"altFlow\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge __messageSend_covered_line = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __line_coveredBy_messageSend = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_interaction_interaction\n            __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_message_message\n            __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_enclosingOperand_parentOperand\n            __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_line\n            __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_operand_operand\n            __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_enclosingOperand_parentOperand\n            __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_messageSend\n            __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_covered_line\n            __messageSend_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __guard_specification_spec\n            __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_message_message\n            __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_guard_guard\n            __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentCombo_covered_line\n            __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_messageSend\n            __line_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_operand\n            __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_combo\n            __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_message_message\n            __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_covered_line\n            __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_sendEvent_messageSend\n            __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __line_coveredBy_messageSend\n            __line_coveredBy_messageSend.setName (\"coveredBy\");\n            // assign attribute __messageSend_covered_line\n            __messageSend_covered_line.setName (\"covered\");\n            // assign attribute __parentOperand_fragment_messageSend\n            __parentOperand_fragment_messageSend.setName (\"fragment\");\n            // assign attribute __messageSend_enclosingOperand_parentOperand\n            __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive.setName (\"fragment\");\n            // assign attribute __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand.setName (\"coveredBy\");\n            // assign attribute __parentOperand_covered_line\n            __parentOperand_covered_line.setName (\"covered\");\n            // assign attribute __parentOperand_fragment_combo\n            __parentOperand_fragment_combo.setName (\"fragment\");\n            // assign attribute __combo_enclosingOperand_parentOperand\n            __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo.setName (\"coveredBy\");\n            // assign attribute __parentCombo_covered_line\n            __parentCombo_covered_line.setName (\"covered\");\n            // assign attribute __combo_operand_operand\n            __combo_operand_operand.setName (\"operand\");\n            // assign attribute __line_coveredBy_operand\n            __line_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_line\n            __operand_covered_line.setName (\"covered\");\n            // assign attribute __operand_guard_guard\n            __operand_guard_guard.setName (\"guard\");\n            // assign attribute __guard_specification_spec\n            __guard_specification_spec.setName (\"specification\");\n            // assign attribute __message_sendEvent_messageSend\n            __message_sendEvent_messageSend.setName (\"sendEvent\");\n            // assign attribute __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n            // assign attribute __message_interaction_interaction\n            __message_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_message_message\n            __interaction_message_message.setName (\"message\");\n            // assign attribute __messageSend_message_message\n            __messageSend_message_message.setName (\"message\");\n            // assign attribute __messageReceive_message_message\n            __messageReceive_message_message.setName (\"message\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_interaction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_operand_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_receiveEvent_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,operand,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,combo,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__guard_specification_spec,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_guard_guard,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentCombo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageReceive,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,spec,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,guard,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,message,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_sendEvent_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageSend,\"toBeTranslatedNodes\");\n\n            // create link\n            __line_coveredBy_operand.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setSrc( line);\n\n\n            // create link\n            __parentCombo_covered_line.setTrg( line);\n\n\n            // create link\n            __operand_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_messageSend.setSrc( line);\n\n\n            // create link\n            __parentOperand_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_parentCombo.setSrc( line);\n\n\n            // create link\n            __messageSend_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n            // create link\n            __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageSend_covered_line.setSrc( messageSend);\n\n\n            // create link\n            __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageSend_message_message.setSrc( messageSend);\n\n\n            // create link\n            __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n            // create link\n            __parentOperand_covered_line.setSrc( parentOperand);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_message_message.setSrc( messageReceive);\n\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __parentOperand_fragment_combo.setTrg( combo);\n\n\n            // create link\n            __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n            // create link\n            __combo_operand_operand.setSrc( combo);\n\n\n            // create link\n            __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n            // create link\n            __parentCombo_covered_line.setSrc( parentCombo);\n\n\n            // create link\n            __line_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __operand_guard_guard.setSrc( operand);\n\n\n            // create link\n            __combo_operand_operand.setTrg( operand);\n\n\n            // create link\n            __operand_covered_line.setSrc( operand);\n\n\n            // create link\n            __operand_guard_guard.setTrg( guard);\n\n\n            // create link\n            __guard_specification_spec.setSrc( guard);\n\n\n            // create link\n            __guard_specification_spec.setTrg( spec);\n\n\n            // create link\n            __message_interaction_interaction.setSrc( message);\n\n\n            // create link\n            __messageSend_message_message.setTrg( message);\n\n\n            // create link\n            __message_sendEvent_messageSend.setSrc( message);\n\n\n            // create link\n            __interaction_message_message.setTrg( message);\n\n\n            // create link\n            __messageReceive_message_message.setTrg( message);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setSrc( message);\n\n\n            // create link\n            __interaction_message_message.setSrc( interaction);\n\n\n            // create link\n            __message_interaction_interaction.setTrg( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_interaction_interaction\n            __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_lifeline_line\n            __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand.setName (\"operand\");\n            // assign attribute __line_interaction_interaction\n            __line_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_lifeline_line\n            __interaction_lifeline_line.setName (\"lifeline\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_operand_parentOperand,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentOperand,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentCombo,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_interaction_interaction,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,line,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,interaction,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_lifeline_line,\"contextEdges\");\n\n            // create link\n            __line_interaction_interaction.setSrc( line);\n\n\n            // create link\n            __interaction_lifeline_line.setTrg( line);\n\n\n            // create link\n            __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n            // create link\n            __line_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __interaction_lifeline_line.setSrc( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match, Lifeline line,
			MessageOccurrenceSpecification messageSend,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageReceive,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      CombinedFragment combo = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      NormalStep step = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      AlternativeFlowAlternative alt = null;\n      NormalStepToMessage stepToMessage = null;\n      AlternativeFlow altFlow = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge alt__ref__altFlow = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __messageSend_covered_line = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge flow__steps__step = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge step__actor__actor = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __line_coveredBy_messageSend = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge step__stepAlternative__alt = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object step\n         step = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object alt\n         alt = UseCaseDSLFactory.eINSTANCE.createAlternativeFlowAlternative();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object altFlow\n         altFlow = UseCaseDSLFactory.eINSTANCE.createAlternativeFlow();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // assign attribute step\n         step.setName ((java.lang.String)csp.getValue(\"step\",\"name\"));\n         // assign attribute alt\n         alt.setCondition ((java.lang.String)csp.getValue(\"alt\",\"condition\"));\n         // assign attribute altFlow\n         altFlow.setName ((java.lang.String)csp.getValue(\"altFlow\",\"name\"));\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         step.setActor( actor);\n\n\n         // create link\n         \tflow.getSteps().add(step); // add link\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         \tstep.getStepAlternative().add(alt); // add link\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(alt,altFlow,\"ref\");\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects message and flowToParentOperand \n         JavaSDM.ensure ( !message.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToParentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects parentCombo and message \n         JavaSDM.ensure ( !parentCombo.equals (message) );\n\n         // check isomorphic binding between objects parentOperand and message \n         JavaSDM.ensure ( !parentOperand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToMessage and parentCombo \n         JavaSDM.ensure ( !stepToMessage.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and parentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alt__ref__altFlow\n         alt__ref__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_enclosingOperand_parentOperand\n         __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_covered_line\n         __messageSend_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_line\n         __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_operand_operand\n         __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_message_message\n         __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_operand\n         __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_guard_guard\n         __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_interaction_interaction\n         __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object flow__steps__step\n         flow__steps__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_message_message\n         __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_enclosingOperand_parentOperand\n         __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__actor__actor\n         step__actor__actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __guard_specification_spec\n         __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_messageSend\n         __line_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentCombo_covered_line\n         __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_combo\n         __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_message_message\n         __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_sendEvent_messageSend\n         __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__stepAlternative__alt\n         step__stepAlternative__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_messageSend\n         __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_covered_line\n         __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltSysStepNFToComboRule\");\n         // assign attribute __line_coveredBy_messageSend\n         __line_coveredBy_messageSend.setName (\"coveredBy\");\n         // assign attribute __messageSend_covered_line\n         __messageSend_covered_line.setName (\"covered\");\n         // assign attribute __parentOperand_fragment_messageSend\n         __parentOperand_fragment_messageSend.setName (\"fragment\");\n         // assign attribute __messageSend_enclosingOperand_parentOperand\n         __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive.setName (\"fragment\");\n         // assign attribute __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand.setName (\"coveredBy\");\n         // assign attribute __parentOperand_covered_line\n         __parentOperand_covered_line.setName (\"covered\");\n         // assign attribute __parentOperand_fragment_combo\n         __parentOperand_fragment_combo.setName (\"fragment\");\n         // assign attribute __combo_enclosingOperand_parentOperand\n         __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo.setName (\"coveredBy\");\n         // assign attribute __parentCombo_covered_line\n         __parentCombo_covered_line.setName (\"covered\");\n         // assign attribute step__stepAlternative__alt\n         step__stepAlternative__alt.setName (\"stepAlternative\");\n         // assign attribute alt__ref__altFlow\n         alt__ref__altFlow.setName (\"ref\");\n         // assign attribute __combo_operand_operand\n         __combo_operand_operand.setName (\"operand\");\n         // assign attribute __line_coveredBy_operand\n         __line_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_line\n         __operand_covered_line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute __operand_guard_guard\n         __operand_guard_guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute __guard_specification_spec\n         __guard_specification_spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute flow__steps__step\n         flow__steps__step.setName (\"steps\");\n         // assign attribute step__actor__actor\n         step__actor__actor.setName (\"actor\");\n         // assign attribute __message_sendEvent_messageSend\n         __message_sendEvent_messageSend.setName (\"sendEvent\");\n         // assign attribute __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n         // assign attribute __message_interaction_interaction\n         __message_interaction_interaction.setName (\"interaction\");\n         // assign attribute __interaction_message_message\n         __interaction_message_message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute __messageSend_message_message\n         __messageSend_message_message.setName (\"message\");\n         // assign attribute __messageReceive_message_message\n         __messageReceive_message_message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt__ref__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_operand_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_guard_guard,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_interaction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,flow__steps__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__actor__actor,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__guard_specification_spec,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentCombo_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentCombo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_sendEvent_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__stepAlternative__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_receiveEvent_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_covered_line,\"translatedEdges\");\n\n         // create link\n         step__actor__actor.setTrg( actor);\n\n\n         // create link\n         __line_coveredBy_messageSend.setSrc( line);\n\n\n         // create link\n         __parentOperand_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_operand.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setSrc( line);\n\n\n         // create link\n         __messageSend_covered_line.setTrg( line);\n\n\n         // create link\n         __operand_covered_line.setTrg( line);\n\n\n         // create link\n         __parentCombo_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setSrc( line);\n\n\n         // create link\n         __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageSend_message_message.setSrc( messageSend);\n\n\n         // create link\n         __messageSend_covered_line.setSrc( messageSend);\n\n\n         // create link\n         __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __line_coveredBy_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n         // create link\n         flow__steps__step.setSrc( flow);\n\n\n         // create link\n         __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n         // create link\n         __parentOperand_covered_line.setSrc( parentOperand);\n\n\n         // create link\n         __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         __messageReceive_message_message.setSrc( messageReceive);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __combo_operand_operand.setSrc( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         __parentOperand_fragment_combo.setTrg( combo);\n\n\n         // create link\n         __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n         // create link\n         __parentCombo_covered_line.setSrc( parentCombo);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         step__actor__actor.setSrc( step);\n\n\n         // create link\n         flow__steps__step.setTrg( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         step__stepAlternative__alt.setSrc( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         alt__ref__altFlow.setSrc( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         step__stepAlternative__alt.setTrg( alt);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         __operand_covered_line.setSrc( operand);\n\n\n         // create link\n         __combo_operand_operand.setTrg( operand);\n\n\n         // create link\n         __operand_guard_guard.setSrc( operand);\n\n\n         // create link\n         __line_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         __guard_specification_spec.setSrc( guard);\n\n\n         // create link\n         __operand_guard_guard.setTrg( guard);\n\n\n         // create link\n         __guard_specification_spec.setTrg( spec);\n\n\n         // create link\n         alt__ref__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         __messageSend_message_message.setTrg( message);\n\n\n         // create link\n         __interaction_message_message.setTrg( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         __messageReceive_message_message.setTrg( message);\n\n\n         // create link\n         __message_interaction_interaction.setSrc( message);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setSrc( message);\n\n\n         // create link\n         __message_sendEvent_messageSend.setSrc( message);\n\n\n         // create link\n         __message_interaction_interaction.setTrg( interaction);\n\n\n         // create link\n         __interaction_message_message.setSrc( interaction);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,actor,line,messageSend,flow,parentOperand,flowToParentOperand,messageReceive,combo,parentCombo,step,alt,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,interaction,stepToMessage);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __line_coveredBy_messageSend = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __messageSend_covered_line = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      CSP csp = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterInteractionToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      NamedFlow flow = null;\n      Iterator fujaba__IterParentOperandToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltSysStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (match.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (match.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (match.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (match.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link target from parentOperand to flowToParentOperand\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,FlowToInteractionFragment.class,\"target\")).iterator ();\n\n         while ( fujaba__IterParentOperandToFlowToParentOperand.hasNext () )\n         {\n            try\n            {\n               flowToParentOperand = (FlowToInteractionFragment) fujaba__IterParentOperandToFlowToParentOperand.next ();\n\n               // check object flowToParentOperand is really bound\n               JavaSDM.ensure ( flowToParentOperand != null );\n               // bind object\n               _TmpObject = flowToParentOperand.getSource ();\n\n               // ensure correct type and really bound of object flow\n               JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n               flow = (NamedFlow) _TmpObject;\n\n               // iterate to-many link target from interaction to useCaseToInteraction\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,UseCaseToInteraction.class,\"target\")).iterator ();\n\n               while ( fujaba__IterInteractionToUseCaseToInteraction.hasNext () )\n               {\n                  try\n                  {\n                     useCaseToInteraction = (UseCaseToInteraction) fujaba__IterInteractionToUseCaseToInteraction.next ();\n\n                     // check object useCaseToInteraction is really bound\n                     JavaSDM.ensure ( useCaseToInteraction != null );\n                     // bind object\n                     useCase = useCaseToInteraction.getSource ();\n\n                     // check object useCase is really bound\n                     JavaSDM.ensure ( useCase != null );\n\n                     // story node \'find context\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object flowToParentOperand is really bound\n                        JavaSDM.ensure ( flowToParentOperand != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check object useCaseToInteraction is really bound\n                        JavaSDM.ensure ( useCaseToInteraction != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link flows from flow to useCase\n                        JavaSDM.ensure (useCase.equals (flow.eContainer()\n                        ));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link source from flowToParentOperand to flow\n                        JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                        ));\n\n                        // check link source from useCaseToInteraction to useCase\n                        JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                        ));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link target from flowToParentOperand to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                        ));\n\n                        // check link target from useCaseToInteraction to interaction\n                        JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object isApplicableMatch\n                        isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                        // create object __parentOperand_covered_line\n                        __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __parentCombo_covered_line\n                        __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __operand_covered_line\n                        __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __line_coveredBy_messageSend\n                        __line_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __line_interaction_interaction\n                        __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __line_coveredBy_parentCombo\n                        __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __messageSend_covered_line\n                        __messageSend_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __line_coveredBy_operand\n                        __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __line_coveredBy_parentOperand\n                        __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __interaction_lifeline_line\n                        __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __message_sendEvent_messageSend\n                        __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __parentOperand_fragment_messageSend\n                        __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __messageSend_message_message\n                        __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __messageSend_enclosingOperand_parentOperand\n                        __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __useCase_flows_flow\n                        __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __flowToParentOperand_source_flow\n                        __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __parentOperand_fragment_messageReceive\n                        __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __messageReceive_enclosingOperand_parentOperand\n                        __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __combo_enclosingOperand_parentOperand\n                        __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __parentCombo_operand_parentOperand\n                        __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __flowToParentOperand_target_parentOperand\n                        __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __parentOperand_fragment_combo\n                        __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __messageReceive_message_message\n                        __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __message_receiveEvent_messageReceive\n                        __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __combo_operand_operand\n                        __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __operand_guard_guard\n                        __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __guard_specification_spec\n                        __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __useCaseToInteraction_source_useCase\n                        __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __useCaseToInteraction_target_interaction\n                        __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __interaction_message_message\n                        __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // create object __message_interaction_interaction\n                        __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                        // assign attribute __line_coveredBy_messageSend\n                        __line_coveredBy_messageSend.setName (\"coveredBy\");\n                        // assign attribute __messageSend_covered_line\n                        __messageSend_covered_line.setName (\"covered\");\n                        // assign attribute __parentOperand_fragment_messageSend\n                        __parentOperand_fragment_messageSend.setName (\"fragment\");\n                        // assign attribute __messageSend_enclosingOperand_parentOperand\n                        __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                        // assign attribute __parentOperand_fragment_messageReceive\n                        __parentOperand_fragment_messageReceive.setName (\"fragment\");\n                        // assign attribute __messageReceive_enclosingOperand_parentOperand\n                        __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                        // assign attribute __flowToParentOperand_source_flow\n                        __flowToParentOperand_source_flow.setName (\"source\");\n                        // assign attribute __flowToParentOperand_target_parentOperand\n                        __flowToParentOperand_target_parentOperand.setName (\"target\");\n                        // assign attribute __line_coveredBy_parentOperand\n                        __line_coveredBy_parentOperand.setName (\"coveredBy\");\n                        // assign attribute __parentOperand_covered_line\n                        __parentOperand_covered_line.setName (\"covered\");\n                        // assign attribute __parentOperand_fragment_combo\n                        __parentOperand_fragment_combo.setName (\"fragment\");\n                        // assign attribute __combo_enclosingOperand_parentOperand\n                        __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                        // assign attribute __parentCombo_operand_parentOperand\n                        __parentCombo_operand_parentOperand.setName (\"operand\");\n                        // assign attribute __line_coveredBy_parentCombo\n                        __line_coveredBy_parentCombo.setName (\"coveredBy\");\n                        // assign attribute __parentCombo_covered_line\n                        __parentCombo_covered_line.setName (\"covered\");\n                        // assign attribute __combo_operand_operand\n                        __combo_operand_operand.setName (\"operand\");\n                        // assign attribute __line_coveredBy_operand\n                        __line_coveredBy_operand.setName (\"coveredBy\");\n                        // assign attribute __operand_covered_line\n                        __operand_covered_line.setName (\"covered\");\n                        // assign attribute __operand_guard_guard\n                        __operand_guard_guard.setName (\"guard\");\n                        // assign attribute __guard_specification_spec\n                        __guard_specification_spec.setName (\"specification\");\n                        // assign attribute __useCase_flows_flow\n                        __useCase_flows_flow.setName (\"flows\");\n                        // assign attribute __useCaseToInteraction_source_useCase\n                        __useCaseToInteraction_source_useCase.setName (\"source\");\n                        // assign attribute __useCaseToInteraction_target_interaction\n                        __useCaseToInteraction_target_interaction.setName (\"target\");\n                        // assign attribute __message_sendEvent_messageSend\n                        __message_sendEvent_messageSend.setName (\"sendEvent\");\n                        // assign attribute __message_receiveEvent_messageReceive\n                        __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n                        // assign attribute __message_interaction_interaction\n                        __message_interaction_interaction.setName (\"interaction\");\n                        // assign attribute __interaction_message_message\n                        __interaction_message_message.setName (\"message\");\n                        // assign attribute __line_interaction_interaction\n                        __line_interaction_interaction.setName (\"interaction\");\n                        // assign attribute __interaction_lifeline_line\n                        __interaction_lifeline_line.setName (\"lifeline\");\n                        // assign attribute __messageSend_message_message\n                        __messageSend_message_message.setName (\"message\");\n                        // assign attribute __messageReceive_message_message\n                        __messageReceive_message_message.setName (\"message\");\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(actor);\n\n\n                        // create link\n                        __parentOperand_covered_line.setTrg( line);\n\n\n                        // create link\n                        __parentCombo_covered_line.setTrg( line);\n\n\n                        // create link\n                        __operand_covered_line.setTrg( line);\n\n\n                        // create link\n                        __line_coveredBy_messageSend.setSrc( line);\n\n\n                        // create link\n                        __line_interaction_interaction.setSrc( line);\n\n\n                        // create link\n                        __line_coveredBy_parentCombo.setSrc( line);\n\n\n                        // create link\n                        __messageSend_covered_line.setTrg( line);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(line);\n\n\n                        // create link\n                        __line_coveredBy_operand.setSrc( line);\n\n\n                        // create link\n                        __line_coveredBy_parentOperand.setSrc( line);\n\n\n                        // create link\n                        __interaction_lifeline_line.setTrg( line);\n\n\n                        // create link\n                        __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(messageSend);\n\n\n                        // create link\n                        __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n                        // create link\n                        __messageSend_message_message.setSrc( messageSend);\n\n\n                        // create link\n                        __line_coveredBy_messageSend.setTrg( messageSend);\n\n\n                        // create link\n                        __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n                        // create link\n                        __messageSend_covered_line.setSrc( messageSend);\n\n\n                        // create link\n                        __useCase_flows_flow.setTrg( flow);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(flow);\n\n\n                        // create link\n                        __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                        // create link\n                        __parentOperand_covered_line.setSrc( parentOperand);\n\n\n                        // create link\n                        __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n                        // create link\n                        __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n                        // create link\n                        __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n                        // create link\n                        __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                        // create link\n                        __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                        // create link\n                        __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                        // create link\n                        __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                        // create link\n                        __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                        // create link\n                        __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n                        // create link\n                        __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                        // create link\n                        __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                        // create link\n                        __messageReceive_message_message.setSrc( messageReceive);\n\n\n                        // create link\n                        __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n                        // create link\n                        __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n                        // create link\n                        __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(messageReceive);\n\n\n                        // create link\n                        __combo_operand_operand.setSrc( combo);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(combo);\n\n\n                        // create link\n                        __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n                        // create link\n                        __parentOperand_fragment_combo.setTrg( combo);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                        // create link\n                        __parentCombo_covered_line.setSrc( parentCombo);\n\n\n                        // create link\n                        __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                        // create link\n                        __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n                        // create link\n                        __combo_operand_operand.setTrg( operand);\n\n\n                        // create link\n                        __operand_covered_line.setSrc( operand);\n\n\n                        // create link\n                        __operand_guard_guard.setSrc( operand);\n\n\n                        // create link\n                        __line_coveredBy_operand.setTrg( operand);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(operand);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(guard);\n\n\n                        // create link\n                        __operand_guard_guard.setTrg( guard);\n\n\n                        // create link\n                        __guard_specification_spec.setSrc( guard);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(spec);\n\n\n                        // create link\n                        __guard_specification_spec.setTrg( spec);\n\n\n                        // create link\n                        __useCase_flows_flow.setSrc( useCase);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                        // create link\n                        __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                        // create link\n                        __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                        // create link\n                        __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                        // create link\n                        __interaction_message_message.setTrg( message);\n\n\n                        // create link\n                        __message_sendEvent_messageSend.setSrc( message);\n\n\n                        // create link\n                        __message_interaction_interaction.setSrc( message);\n\n\n                        // create link\n                        __message_receiveEvent_messageReceive.setSrc( message);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(message);\n\n\n                        // create link\n                        __messageSend_message_message.setTrg( message);\n\n\n                        // create link\n                        __messageReceive_message_message.setTrg( message);\n\n\n                        // create link\n                        __message_interaction_interaction.setTrg( interaction);\n\n\n                        // create link\n                        isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                        // create link\n                        __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                        // create link\n                        __interaction_message_message.setSrc( interaction);\n\n\n                        // create link\n                        __interaction_lifeline_line.setSrc( interaction);\n\n\n                        // create link\n                        __line_interaction_interaction.setTrg( interaction);\n\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_operand,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_covered_line,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_enclosingOperand_parentOperand,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_operand_operand,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_enclosingOperand_parentOperand,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_guard_guard,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_sendEvent_messageSend,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentOperand,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_messageSend,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_receiveEvent_messageReceive,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_covered_line,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_message_message,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__guard_specification_spec,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_combo,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_message_message,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_covered_line,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_messageReceive,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_line,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentCombo,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_messageSend,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_interaction_interaction,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_message_message,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_enclosingOperand_parentOperand,\"allContextElements\");\n\n                        // create link\n                        org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n                        // story node \'solve CSP\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,actor,line,messageSend,flow,parentOperand,flowToParentOperand,messageReceive,combo,parentCombo,operand,guard,spec,useCase,useCaseToInteraction,message,interaction));\n\n                           // ensure correct type and really bound of object csp\n                           JavaSDM.ensure ( _TmpObject instanceof CSP );\n                           csp = (CSP) _TmpObject;\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        // statement node \'check CSP\'\n                        fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                        if (fujaba__Success)\n                        {\n                           // story node \'add match to rule result\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object isApplicableMatch is really bound\n                              JavaSDM.ensure ( isApplicableMatch != null );\n                              // check object ruleresult is really bound\n                              JavaSDM.ensure ( ruleresult != null );\n                              // assign attribute isApplicableMatch\n                              isApplicableMatch.setRuleName (\"AltSysStepNFToComboRule\");\n                              // assign attribute ruleresult\n                              ruleresult.setSuccess (true);\n\n                              // create link\n                              ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"line\", line);\nmatch.registerObject(\"messageSend\", messageSend);\nmatch.registerObject(\"parentOperand\", parentOperand);\nmatch.registerObject(\"messageReceive\", messageReceive);\nmatch.registerObject(\"combo\", combo);\nmatch.registerObject(\"parentCombo\", parentCombo);\nmatch.registerObject(\"operand\", operand);\nmatch.registerObject(\"guard\", guard);\nmatch.registerObject(\"spec\", spec);\nmatch.registerObject(\"message\", message);\nmatch.registerObject(\"interaction\", interaction);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match, Lifeline line,
			MessageOccurrenceSpecification messageSend,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageReceive,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", true, csp);\r\nvar_combo_interactionOperator.setValue(combo.getInteractionOperator());\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqInterOperKind eqInterOperKind = new EqInterOperKind();\r\n\r\ncsp.getConstraints().add(eqInterOperKind);\r\n\r\n// Solve CSP\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match, Lifeline line,
			MessageOccurrenceSpecification messageSend,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageReceive,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"system\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_actor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"actor.type\", true, csp);\r\nvar_actor_type.setValue(actor.getType());\r\nvar_actor_type.setType(\"EObject\");\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", true, csp);\r\nvar_guard_name.setValue(guard.getName());\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", true, csp);\r\nvar_spec_value.setValue(spec.getValue());\r\nvar_spec_value.setType(\"\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", true, csp);\r\nvar_message_name.setValue(message.getName());\r\nvar_message_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", csp);\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", csp);\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", csp);\r\nvar_step_name.setType(\"\");\r\n\r\n// Create constraints\r\nEqActorType eqActorType = new EqActorType();Eq eq = new Eq();Eq eq_0 = new Eq();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eqActorType);\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neqActorType.setRuleName(\"\");\r\neqActorType.solve(var_actor_type,literal0);\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"messageSend\",messageSend);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"messageReceive\",messageReceive);\r\nisApplicableMatch.registerObject(\"combo\",combo);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"operand\",operand);\r\nisApplicableMatch.registerObject(\"guard\",guard);\r\nisApplicableMatch.registerObject(\"spec\",spec);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"message\",message);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			Actor actor, Lifeline line,
			MessageOccurrenceSpecification messageSend, NamedFlow flow,
			InteractionOperand parentOperand,
			FlowToInteractionFragment flowToParentOperand,
			MessageOccurrenceSpecification messageReceive,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction, Message message,
			Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult, EObject actor,
			EObject line, EObject messageSend, EObject flow,
			EObject parentOperand, EObject flowToParentOperand,
			EObject messageReceive, EObject combo, EObject parentCombo,
			EObject step, EObject alt, EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message, EObject interaction,
			EObject stepToMessage);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"messageSend\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"messageReceive\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"combo\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getCombinedFragment()) && match.getObject(\"operand\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionOperand()) && match.getObject(\"guard\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionConstraint()) && match.getObject(\"spec\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getLiteralString()) && match.getObject(\"message\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessage());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_642460 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_89801 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_238236 = null;\n      Interaction __DEC_operand_enclosingInteraction_420557 = null;\n      InteractionOperand __DEC_combo_fragment_959818 = null;\n      InteractionOperand __DEC_messageReceive_fragment_449801 = null;\n      InteractionOperand __DEC_messageSend_fragment_317258 = null;\n      InteractionOperand __DEC_operand_fragment_997791 = null;\n      Constraint __DEC_spec_specification_464170 = null;\n      InteractionOperand __DEC_guard_guard_190731 = null;\n      CombinedFragment __DEC_operand_operand_366482 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_317817 = null;\n      Message __DEC_messageReceive_receiveEvent_317817 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_477883 = null;\n      Message __DEC_messageSend_receiveEvent_477883 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_719492 = null;\n      Message __DEC_messageReceive_sendEvent_719492 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_741900 = null;\n      Message __DEC_messageSend_sendEvent_741900 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_615082 = null;\n      MessageEnd __DEC_message_message_615082 = null;\n      Match match = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n               // check object combo is really bound\n               JavaSDM.ensure ( combo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(combo.getOperand().contains(operand));\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // bind object\n               _TmpObject = _edge_coveredBy.getTrg ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // bind object\n               _TmpObject = message.getReceiveEvent ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // check link covered from messageSend to line\n               JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to parentOperand\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // check link fragment from messageReceive to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link fragment from messageSend to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                     // check object parentCombo is really bound\n                     JavaSDM.ensure ( parentCombo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_642460 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_642460 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_642460 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_642460 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_642460.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_89801 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_89801 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_89801 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_89801 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_89801.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_238236 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_238236 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_238236 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_238236 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_238236.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_420557 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_420557 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_420557 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_420557 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_420557.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_959818 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_959818 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_959818 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_959818 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_959818.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_959818 and parentOperand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_959818.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_449801 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_449801 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_449801 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_449801 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_449801.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_449801 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_449801.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_317258 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_317258 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_317258 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_317258 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_317258.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_317258 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_317258.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_997791 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_997791 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_997791 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_997791 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_997791.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_997791 and parentOperand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_997791.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_464170 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_464170 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_464170 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_464170.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_464170 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_464170.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_190731 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_190731 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_190731 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_190731.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_190731 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_190731.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_guard_guard_190731 and parentOperand \n                           JavaSDM.ensure ( !__DEC_guard_guard_190731.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_366482 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_366482 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_366482 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_366482.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_366482 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_366482.equals (combo) );\n\n                           // check isomorphic binding between objects __DEC_operand_operand_366482 and parentCombo \n                           JavaSDM.ensure ( !__DEC_operand_operand_366482.equals (parentCombo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_317817\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_317817 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_317817.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_317817 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_317817.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_317817 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_317817 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_317817 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_317817.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_477883\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_477883 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_477883.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_477883 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_477883.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_477883 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_477883 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_477883 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_477883.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_719492\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_719492 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_719492.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_719492 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_719492.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_719492 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_719492 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_719492 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_719492.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_741900\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_741900 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_741900.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_741900 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_741900.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_741900 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_741900 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_741900 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_741900.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_615082\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_615082 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_615082.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_615082 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_615082.next ();\n\n                                 // check object __DEC_message_message_615082 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_615082 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_615082 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_615082.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_615082 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_615082.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_coveredBy is really bound\n                        JavaSDM.ensure ( _edge_coveredBy != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to parentOperand\n                        JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link guard from parentOperand to guard\n                        JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link operand from operand to parentCombo\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                        .contains (parentCombo)));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_coveredBy to line\n                        JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                        ));\n\n                        // check link trg from _edge_coveredBy to messageSend\n                        JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_227(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_843895 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_654477 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_129986 = null;\n      Interaction __DEC_operand_enclosingInteraction_979929 = null;\n      InteractionOperand __DEC_combo_fragment_892156 = null;\n      InteractionOperand __DEC_messageReceive_fragment_266423 = null;\n      InteractionOperand __DEC_messageSend_fragment_33184 = null;\n      InteractionOperand __DEC_operand_fragment_669611 = null;\n      Constraint __DEC_spec_specification_128134 = null;\n      InteractionOperand __DEC_guard_guard_724122 = null;\n      CombinedFragment __DEC_operand_operand_269469 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_305796 = null;\n      Message __DEC_messageReceive_receiveEvent_305796 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_513381 = null;\n      Message __DEC_messageSend_receiveEvent_513381 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_665508 = null;\n      Message __DEC_messageReceive_sendEvent_665508 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_736295 = null;\n      Message __DEC_messageSend_sendEvent_736295 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_414350 = null;\n      MessageEnd __DEC_message_message_414350 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link message from message to interaction\n         JavaSDM.ensure (interaction.equals (message.getInteraction ()\n         ));\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link covered from messageSend to line\n         JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to parentOperand\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n               // ensure correct type and really bound of object parentOperand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               parentOperand = (InteractionOperand) _TmpObject;\n               // check link fragment from messageReceive to parentOperand\n               JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n               ));\n\n               // check link fragment from messageSend to parentOperand\n               JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n               ));\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link src from line to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                     while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link trg from _edge_coveredBy to messageSend\n                           JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_843895 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_843895 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_843895 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_843895 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_843895.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_654477 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_654477 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_654477 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_654477 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_654477.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_129986 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_129986 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_129986 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_129986 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_129986.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_979929 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_979929 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_979929 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_979929 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_979929.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_892156 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_892156 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_892156 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_892156 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_892156.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_892156 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_892156.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_266423 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_266423 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_266423 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_266423 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_266423.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_266423 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_266423.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_33184 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_33184 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_33184 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_33184 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_33184.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_33184 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_33184.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_669611 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_669611 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_669611 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_669611 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_669611.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_669611 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_669611.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_128134 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_128134 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_128134 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_128134.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_128134 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_128134.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_724122 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_724122 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_724122 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_724122.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_724122 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_724122.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_724122 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_724122.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_269469 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_269469 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_269469 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_269469.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_269469 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_269469.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_269469 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_269469.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_305796\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_305796 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_305796.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_305796 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_305796.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_305796 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_305796 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_305796 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_305796.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_513381\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_513381 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_513381.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_513381 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_513381.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_513381 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_513381 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_513381 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_513381.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_665508\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_665508 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_665508.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_665508 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_665508.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_665508 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_665508 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_665508 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_665508.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_736295\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_736295 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_736295.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_736295 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_736295.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_736295 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_736295 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_736295 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_736295.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_414350\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_414350 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_414350.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_414350 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_414350.next ();\n\n                                       // check object __DEC_message_message_414350 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_414350 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_414350 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_414350.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_414350 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_414350.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_covered is really bound\n                              JavaSDM.ensure ( _edge_covered != null );\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                              JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_covered to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_covered.getSrc ()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_covered to line\n                              JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_228(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_288386 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_7142 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_485729 = null;\n      Interaction __DEC_operand_enclosingInteraction_998165 = null;\n      InteractionOperand __DEC_combo_fragment_247253 = null;\n      InteractionOperand __DEC_messageReceive_fragment_333648 = null;\n      InteractionOperand __DEC_messageSend_fragment_370374 = null;\n      InteractionOperand __DEC_operand_fragment_719872 = null;\n      Constraint __DEC_spec_specification_604296 = null;\n      InteractionOperand __DEC_guard_guard_489614 = null;\n      CombinedFragment __DEC_operand_operand_204965 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_675485 = null;\n      Message __DEC_messageReceive_receiveEvent_675485 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_185748 = null;\n      Message __DEC_messageSend_receiveEvent_185748 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_374677 = null;\n      Message __DEC_messageReceive_sendEvent_374677 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_663509 = null;\n      Message __DEC_messageSend_sendEvent_663509 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_370866 = null;\n      MessageEnd __DEC_message_message_370866 = null;\n      Match match = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link src from _edge_fragment to parentOperand\n         JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link covered from line to parentCombo\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                           // ensure correct type and really bound of object parentCombo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           parentCombo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from parentOperand to parentCombo\n                           JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_288386 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_288386 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_288386 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_288386 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_288386.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_7142 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_7142 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_7142 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_7142 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_7142.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_485729 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_485729 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_485729 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_485729 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_485729.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_998165 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_998165 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_998165 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_998165 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_998165.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_247253 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_247253 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_247253 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_247253 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_247253.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_247253 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_247253.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_333648 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_333648 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_333648 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_333648 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_333648.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_333648 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_333648.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_370374 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_370374 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_370374 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_370374 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_370374.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_370374 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_370374.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_719872 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_719872 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_719872 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_719872 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_719872.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_719872 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_719872.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_604296 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_604296 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_604296 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_604296.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_604296 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_604296.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_489614 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_489614 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_489614 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_489614.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_489614 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_489614.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_489614 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_489614.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_204965 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_204965 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_204965 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_204965.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_204965 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_204965.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_204965 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_204965.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_675485\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_675485 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_675485.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_675485 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_675485.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_675485 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_675485 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_675485 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_675485.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_185748\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_185748 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_185748.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_185748 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_185748.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_185748 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_185748 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_185748 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_185748.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_374677\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_374677 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_374677.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_374677 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_374677.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_374677 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_374677 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_374677 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_374677.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_663509\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_663509 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_663509.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_663509 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_663509.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_663509 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_663509 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_663509 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_663509.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_370866\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_370866 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_370866.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_370866 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_370866.next ();\n\n                                       // check object __DEC_message_message_370866 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_370866 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_370866 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_370866.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_370866 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_370866.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_fragment is really bound\n                              JavaSDM.ensure ( _edge_fragment != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_fragment to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                              ));\n\n                              // check link trg from _edge_fragment to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_229(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_309350 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_983750 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_648974 = null;\n      Interaction __DEC_operand_enclosingInteraction_620995 = null;\n      InteractionOperand __DEC_combo_fragment_263852 = null;\n      InteractionOperand __DEC_messageReceive_fragment_453859 = null;\n      InteractionOperand __DEC_messageSend_fragment_282995 = null;\n      InteractionOperand __DEC_operand_fragment_698124 = null;\n      Constraint __DEC_spec_specification_5908 = null;\n      InteractionOperand __DEC_guard_guard_274237 = null;\n      CombinedFragment __DEC_operand_operand_501917 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_994598 = null;\n      Message __DEC_messageReceive_receiveEvent_994598 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_622973 = null;\n      Message __DEC_messageSend_receiveEvent_622973 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_713929 = null;\n      Message __DEC_messageReceive_sendEvent_713929 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_582571 = null;\n      Message __DEC_messageSend_sendEvent_582571 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_461084 = null;\n      MessageEnd __DEC_message_message_461084 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link fragment from messageSend to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from messageSend to line\n               JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link src from parentOperand to _edge_fragment\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                     while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                           // check object _edge_fragment is really bound\n                           JavaSDM.ensure ( _edge_fragment != null );\n                           // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                           JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                           // check link trg from _edge_fragment to messageSend\n                           JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_309350 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_309350 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_309350 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_309350 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_309350.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_983750 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_983750 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_983750 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_983750 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_983750.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_648974 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_648974 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_648974 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_648974 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_648974.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_620995 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_620995 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_620995 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_620995 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_620995.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_263852 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_263852 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_263852 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_263852 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_263852.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_263852 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_263852.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_453859 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_453859 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_453859 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_453859 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_453859.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_453859 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_453859.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_282995 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_282995 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_282995 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_282995 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_282995.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_282995 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_282995.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_698124 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_698124 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_698124 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_698124 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_698124.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_698124 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_698124.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_5908 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_5908 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_5908 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_5908.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_5908 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_5908.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_274237 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_274237 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_274237 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_274237.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_274237 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_274237.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_274237 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_274237.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_501917 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_501917 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_501917 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_501917.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_501917 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_501917.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_501917 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_501917.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_994598\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_994598 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_994598.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_994598 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_994598.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_994598 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_994598 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_994598 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_994598.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_622973\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_622973 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_622973.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_622973 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_622973.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_622973 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_622973 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_622973 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_622973.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_713929\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_713929 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_713929.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_713929 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_713929.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_713929 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_713929 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_713929 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_713929.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_582571\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_582571 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_582571.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_582571 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_582571.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_582571 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_582571 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_582571 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_582571.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_461084\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_461084 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_461084.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_461084 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_461084.next ();\n\n                                       // check object __DEC_message_message_461084 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_461084 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_461084 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_461084.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_461084 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_461084.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_enclosingOperand is really bound\n                              JavaSDM.ensure ( _edge_enclosingOperand != null );\n                              // check object _edge_fragment is really bound\n                              JavaSDM.ensure ( _edge_fragment != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                              JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_enclosingOperand to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_enclosingOperand.getSrc ()\n                              ));\n\n                              // check link src from _edge_fragment to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                              ));\n\n                              // check link trg from _edge_enclosingOperand to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                              ));\n\n                              // check link trg from _edge_fragment to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_230(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_836864 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_305446 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_920558 = null;\n      Interaction __DEC_operand_enclosingInteraction_253964 = null;\n      InteractionOperand __DEC_combo_fragment_98239 = null;\n      InteractionOperand __DEC_messageReceive_fragment_945074 = null;\n      InteractionOperand __DEC_messageSend_fragment_829589 = null;\n      InteractionOperand __DEC_operand_fragment_447303 = null;\n      Constraint __DEC_spec_specification_721676 = null;\n      InteractionOperand __DEC_guard_guard_492153 = null;\n      CombinedFragment __DEC_operand_operand_579429 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_610928 = null;\n      Message __DEC_messageReceive_receiveEvent_610928 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_799368 = null;\n      Message __DEC_messageSend_receiveEvent_799368 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_306231 = null;\n      Message __DEC_messageReceive_sendEvent_306231 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_579354 = null;\n      Message __DEC_messageSend_sendEvent_579354 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_307164 = null;\n      MessageEnd __DEC_message_message_307164 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link fragment from parentOperand to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // bind object\n               _TmpObject = message.getReceiveEvent ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link fragment from messageReceive to parentOperand\n               JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n               ));\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link trg from _edge_fragment to messageReceive\n               JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n               ));\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from messageSend to line\n                     JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object combo is really bound\n                           JavaSDM.ensure ( combo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_836864 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_836864 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_836864 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_836864 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_836864.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_305446 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_305446 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_305446 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_305446 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_305446.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_920558 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_920558 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_920558 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_920558 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_920558.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_253964 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_253964 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_253964 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_253964 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_253964.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_98239 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_98239 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_98239 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_98239 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_98239.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_98239 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_98239.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_945074 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_945074 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_945074 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_945074 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_945074.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_945074 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_945074.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_829589 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_829589 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_829589 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_829589 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_829589.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_829589 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_829589.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_447303 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_447303 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_447303 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_447303 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_447303.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_447303 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_447303.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_721676 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_721676 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_721676 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_721676.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_721676 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_721676.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_492153 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_492153 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_492153 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_492153.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_492153 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_492153.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_492153 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_492153.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_579429 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_579429 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_579429 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_579429.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_579429 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_579429.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_579429 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_579429.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_610928\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_610928 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_610928.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_610928 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_610928.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_610928 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_610928 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_610928 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_610928.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_799368\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_799368 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_799368.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_799368 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_799368.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_799368 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_799368 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_799368 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_799368.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_306231\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_306231 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_306231.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_306231 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_306231.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_306231 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_306231 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_306231 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_306231.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_579354\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_579354 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_579354.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_579354 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_579354.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_579354 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_579354 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_579354 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_579354.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_307164\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_307164 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_307164.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_307164 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_307164.next ();\n\n                                       // check object __DEC_message_message_307164 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_307164 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_307164 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_307164.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_307164 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_307164.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_fragment is really bound\n                              JavaSDM.ensure ( _edge_fragment != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_fragment to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                              ));\n\n                              // check link trg from _edge_fragment to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_231(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_665510 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_994327 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_333445 = null;\n      Interaction __DEC_operand_enclosingInteraction_794038 = null;\n      InteractionOperand __DEC_combo_fragment_216401 = null;\n      InteractionOperand __DEC_messageReceive_fragment_614805 = null;\n      InteractionOperand __DEC_messageSend_fragment_110197 = null;\n      InteractionOperand __DEC_operand_fragment_778907 = null;\n      Constraint __DEC_spec_specification_558803 = null;\n      InteractionOperand __DEC_guard_guard_554970 = null;\n      CombinedFragment __DEC_operand_operand_715923 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_825826 = null;\n      Message __DEC_messageReceive_receiveEvent_825826 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_98835 = null;\n      Message __DEC_messageSend_receiveEvent_98835 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_58861 = null;\n      Message __DEC_messageReceive_sendEvent_58861 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_128401 = null;\n      Message __DEC_messageSend_sendEvent_128401 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_854914 = null;\n      MessageEnd __DEC_message_message_854914 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link src from parentOperand to _edge_fragment\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n         while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n         {\n            try\n            {\n               _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n               // check object _edge_fragment is really bound\n               JavaSDM.ensure ( _edge_fragment != null );\n               // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n               JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object combo is really bound\n                           JavaSDM.ensure ( combo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = message.getReceiveEvent ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link fragment from messageReceive to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // check link src from _edge_enclosingOperand to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (_edge_enclosingOperand.getSrc ()\n                                 ));\n\n                                 // check link trg from _edge_fragment to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                 ));\n\n                                 // check link covered from messageSend to line\n                                 JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_665510 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_665510 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_665510 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_665510 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_665510.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_994327 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_994327 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_994327 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_994327 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_994327.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_333445 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_333445 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_333445 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_333445 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_333445.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_794038 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_794038 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_794038 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_794038 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_794038.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_216401 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_216401 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_216401 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_216401 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_216401.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_216401 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_216401.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_614805 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_614805 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_614805 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_614805 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_614805.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_614805 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_614805.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_110197 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_110197 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_110197 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_110197 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_110197.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_110197 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_110197.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_778907 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_778907 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_778907 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_778907 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_778907.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_778907 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_778907.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_558803 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_558803 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_558803 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_558803.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_558803 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_558803.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_554970 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_554970 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_554970 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_554970.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_554970 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_554970.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_554970 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_554970.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_715923 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_715923 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_715923 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_715923.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_715923 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_715923.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_715923 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_715923.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_825826\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_825826 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_825826.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_825826 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_825826.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_825826 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_825826 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_825826 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_825826.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_98835\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_98835 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_98835.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_98835 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_98835.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_98835 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_98835 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_98835 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_98835.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_58861\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_58861 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_58861.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_58861 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_58861.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_58861 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_58861 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_58861 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_58861.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_128401\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_128401 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_128401.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_128401 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_128401.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_128401 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_128401 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_128401 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_128401.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_854914\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_854914 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_854914.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_854914 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_854914.next ();\n\n                                             // check object __DEC_message_message_854914 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_854914 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_854914 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_854914.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_854914 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_854914.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_enclosingOperand is really bound\n                                    JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                    JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_enclosingOperand to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_enclosingOperand.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_enclosingOperand to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_232(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_622970 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_778088 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_386565 = null;\n      Interaction __DEC_operand_enclosingInteraction_40501 = null;\n      InteractionOperand __DEC_combo_fragment_17969 = null;\n      InteractionOperand __DEC_messageReceive_fragment_353785 = null;\n      InteractionOperand __DEC_messageSend_fragment_726568 = null;\n      InteractionOperand __DEC_operand_fragment_392152 = null;\n      Constraint __DEC_spec_specification_407035 = null;\n      InteractionOperand __DEC_guard_guard_171023 = null;\n      CombinedFragment __DEC_operand_operand_891951 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_151934 = null;\n      Message __DEC_messageReceive_receiveEvent_151934 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_436258 = null;\n      Message __DEC_messageSend_receiveEvent_436258 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_688080 = null;\n      Message __DEC_messageReceive_sendEvent_688080 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_337033 = null;\n      Message __DEC_messageSend_sendEvent_337033 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_233848 = null;\n      MessageEnd __DEC_message_message_233848 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // iterate to-many link covered from line to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               parentOperand = messageSend.getEnclosingOperand ();\n\n               // check object parentOperand is really bound\n               JavaSDM.ensure ( parentOperand != null );\n\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // bind object\n               _TmpObject = message.getReceiveEvent ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link fragment from messageReceive to parentOperand\n               JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n               ));\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link trg from _edge_coveredBy to parentOperand\n               JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_622970 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_622970 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_622970 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_622970 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_622970.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_778088 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_778088 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_778088 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_778088 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_778088.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_386565 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_386565 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_386565 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_386565 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_386565.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_40501 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_40501 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_40501 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_40501 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_40501.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_17969 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_17969 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_17969 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_17969 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_17969.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_17969 and parentOperand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_17969.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_353785 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_353785 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_353785 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_353785 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_353785.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_353785 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_353785.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_726568 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_726568 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_726568 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_726568 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_726568.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_726568 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_726568.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_392152 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_392152 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_392152 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_392152 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_392152.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_392152 and parentOperand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_392152.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_407035 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_407035 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_407035 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_407035.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_407035 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_407035.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_171023 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_171023 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_171023 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_171023.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_171023 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_171023.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_guard_guard_171023 and parentOperand \n                           JavaSDM.ensure ( !__DEC_guard_guard_171023.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_891951 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_891951 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_891951 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_891951.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_891951 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_891951.equals (combo) );\n\n                           // check isomorphic binding between objects __DEC_operand_operand_891951 and parentCombo \n                           JavaSDM.ensure ( !__DEC_operand_operand_891951.equals (parentCombo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_151934\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_151934 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_151934.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_151934 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_151934.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_151934 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_151934 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_151934 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_151934.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_436258\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_436258 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_436258.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_436258 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_436258.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_436258 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_436258 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_436258 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_436258.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_688080\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_688080 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_688080.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_688080 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_688080.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_688080 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_688080 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_688080 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_688080.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_337033\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_337033 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_337033.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_337033 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_337033.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_337033 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_337033 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_337033 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_337033.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_233848\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_233848 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_233848.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_233848 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_233848.next ();\n\n                                 // check object __DEC_message_message_233848 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_233848 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_233848 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_233848.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_233848 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_233848.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_coveredBy is really bound\n                        JavaSDM.ensure ( _edge_coveredBy != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to parentOperand\n                        JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link guard from parentOperand to guard\n                        JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link operand from operand to parentCombo\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                        .contains (parentCombo)));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_coveredBy to line\n                        JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                        ));\n\n                        // check link trg from _edge_coveredBy to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_233(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_652042 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_284938 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_586831 = null;\n      Interaction __DEC_operand_enclosingInteraction_881963 = null;\n      InteractionOperand __DEC_combo_fragment_936631 = null;\n      InteractionOperand __DEC_messageReceive_fragment_502094 = null;\n      InteractionOperand __DEC_messageSend_fragment_818093 = null;\n      InteractionOperand __DEC_operand_fragment_496650 = null;\n      Constraint __DEC_spec_specification_792273 = null;\n      InteractionOperand __DEC_guard_guard_744232 = null;\n      CombinedFragment __DEC_operand_operand_645849 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_836465 = null;\n      Message __DEC_messageReceive_receiveEvent_836465 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_378414 = null;\n      Message __DEC_messageSend_receiveEvent_378414 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_895608 = null;\n      Message __DEC_messageReceive_sendEvent_895608 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_876836 = null;\n      Message __DEC_messageSend_sendEvent_876836 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_547550 = null;\n      MessageEnd __DEC_message_message_547550 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // iterate to-many link covered from line to parentCombo\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n               // ensure correct type and really bound of object parentCombo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               parentCombo = (CombinedFragment) _TmpObject;\n               // iterate to-many link src from line to _edge_coveredBy\n               fujaba__Success = false;\n\n               fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n               while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n               {\n                  try\n                  {\n                     _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                     // check object _edge_coveredBy is really bound\n                     JavaSDM.ensure ( _edge_coveredBy != null );\n                     // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                     JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object combo is really bound\n                           JavaSDM.ensure ( combo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link covered from line to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // bind object\n                                 parentOperand = messageSend.getEnclosingOperand ();\n\n                                 // check object parentOperand is really bound\n                                 JavaSDM.ensure ( parentOperand != null );\n\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // check link fragment from combo to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                 ));\n\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = message.getReceiveEvent ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link fragment from messageReceive to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // check link operand from parentOperand to parentCombo\n                                 JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                 ));\n\n                                 // check link src from _edge_covered to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (_edge_covered.getSrc ()\n                                 ));\n\n                                 // check link trg from _edge_coveredBy to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                 ));\n\n                                 // check link covered from parentOperand to line\n                                 JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_652042 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_652042 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_652042 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_652042 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_652042.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_284938 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_284938 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_284938 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_284938 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_284938.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_586831 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_586831 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_586831 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_586831 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_586831.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_881963 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_881963 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_881963 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_881963 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_881963.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_936631 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_936631 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_936631 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_936631 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_936631.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_936631 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_936631.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_502094 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_502094 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_502094 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_502094 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_502094.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_502094 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_502094.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_818093 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_818093 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_818093 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_818093 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_818093.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_818093 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_818093.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_496650 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_496650 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_496650 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_496650 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_496650.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_496650 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_496650.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_792273 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_792273 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_792273 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_792273.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_792273 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_792273.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_744232 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_744232 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_744232 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_744232.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_744232 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_744232.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_744232 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_744232.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_645849 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_645849 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_645849 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_645849.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_645849 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_645849.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_645849 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_645849.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_836465\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_836465 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_836465.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_836465 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_836465.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_836465 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_836465 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_836465 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_836465.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_378414\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_378414 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_378414.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_378414 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_378414.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_378414 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_378414 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_378414 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_378414.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_895608\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_895608 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_895608.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_895608 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_895608.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_895608 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_895608 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_895608 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_895608.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_876836\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_876836 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_876836.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_876836 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_876836.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_876836 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_876836 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_876836 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_876836.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_547550\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_547550 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_547550.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_547550 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_547550.next ();\n\n                                             // check object __DEC_message_message_547550 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_547550 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_547550 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_547550.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_547550 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_547550.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to line\n                                    JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_234(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_860290 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_261710 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_208319 = null;\n      Interaction __DEC_operand_enclosingInteraction_143700 = null;\n      InteractionOperand __DEC_combo_fragment_1787 = null;\n      InteractionOperand __DEC_messageReceive_fragment_252058 = null;\n      InteractionOperand __DEC_messageSend_fragment_689888 = null;\n      InteractionOperand __DEC_operand_fragment_612960 = null;\n      Constraint __DEC_spec_specification_664707 = null;\n      InteractionOperand __DEC_guard_guard_538759 = null;\n      CombinedFragment __DEC_operand_operand_973383 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_960431 = null;\n      Message __DEC_messageReceive_receiveEvent_960431 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_743473 = null;\n      Message __DEC_messageSend_receiveEvent_743473 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_926265 = null;\n      Message __DEC_messageReceive_sendEvent_926265 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_818852 = null;\n      Message __DEC_messageSend_sendEvent_818852 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_363102 = null;\n      MessageEnd __DEC_message_message_363102 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      CombinedFragment combo = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // check link fragment from combo to parentOperand\n         JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // check link covered from messageSend to line\n                           JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_860290 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_860290 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_860290 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_860290 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_860290.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_261710 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_261710 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_261710 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_261710 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_261710.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_208319 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_208319 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_208319 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_208319 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_208319.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_143700 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_143700 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_143700 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_143700 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_143700.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_1787 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_1787 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_1787 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_1787 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_1787.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_1787 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_1787.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_252058 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_252058 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_252058 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_252058 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_252058.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_252058 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_252058.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_689888 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_689888 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_689888 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_689888 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_689888.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_689888 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_689888.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_612960 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_612960 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_612960 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_612960 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_612960.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_612960 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_612960.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_664707 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_664707 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_664707 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_664707.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_664707 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_664707.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_538759 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_538759 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_538759 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_538759.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_538759 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_538759.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_538759 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_538759.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_973383 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_973383 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_973383 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_973383.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_973383 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_973383.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_973383 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_973383.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_960431\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_960431 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_960431.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_960431 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_960431.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_960431 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_960431 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_960431 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_960431.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_743473\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_743473 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_743473.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_743473 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_743473.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_743473 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_743473 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_743473 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_743473.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_926265\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_926265 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_926265.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_926265 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_926265.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_926265 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_926265 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_926265 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_926265.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_818852\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_818852 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_818852.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_818852 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_818852.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_818852 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_818852 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_818852 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_818852.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_363102\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_363102 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_363102.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_363102 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_363102.next ();\n\n                                       // check object __DEC_message_message_363102 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_363102 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_363102 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_363102.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_363102 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_363102.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_fragment is really bound\n                              JavaSDM.ensure ( _edge_fragment != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_fragment to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                              ));\n\n                              // check link trg from _edge_fragment to combo\n                              JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_235(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_740818 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_530802 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_544437 = null;\n      Interaction __DEC_operand_enclosingInteraction_20311 = null;\n      InteractionOperand __DEC_combo_fragment_678855 = null;\n      InteractionOperand __DEC_messageReceive_fragment_231522 = null;\n      InteractionOperand __DEC_messageSend_fragment_989563 = null;\n      InteractionOperand __DEC_operand_fragment_517070 = null;\n      Constraint __DEC_spec_specification_901273 = null;\n      InteractionOperand __DEC_guard_guard_623550 = null;\n      CombinedFragment __DEC_operand_operand_765345 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_698666 = null;\n      Message __DEC_messageReceive_receiveEvent_698666 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_206389 = null;\n      Message __DEC_messageSend_receiveEvent_206389 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_600467 = null;\n      Message __DEC_messageReceive_sendEvent_600467 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_140005 = null;\n      Message __DEC_messageSend_sendEvent_140005 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_113566 = null;\n      MessageEnd __DEC_message_message_113566 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from combo to parentOperand\n         JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // check link covered from messageSend to line\n                           JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                           // iterate to-many link src from parentOperand to _edge_fragment\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                                 // check object _edge_fragment is really bound\n                                 JavaSDM.ensure ( _edge_fragment != null );\n                                 // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                 JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                 // check link trg from _edge_fragment to combo\n                                 JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_740818 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_740818 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_740818 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_740818 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_740818.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_530802 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_530802 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_530802 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_530802 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_530802.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_544437 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_544437 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_544437 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_544437 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_544437.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_20311 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_20311 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_20311 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_20311 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_20311.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_678855 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_678855 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_678855 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_678855 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_678855.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_678855 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_678855.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_231522 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_231522 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_231522 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_231522 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_231522.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_231522 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_231522.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_989563 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_989563 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_989563 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_989563 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_989563.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_989563 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_989563.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_517070 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_517070 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_517070 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_517070 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_517070.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_517070 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_517070.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_901273 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_901273 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_901273 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_901273.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_901273 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_901273.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_623550 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_623550 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_623550 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_623550.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_623550 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_623550.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_623550 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_623550.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_765345 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_765345 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_765345 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_765345.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_765345 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_765345.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_765345 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_765345.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_698666\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_698666 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_698666.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_698666 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_698666.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_698666 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_698666 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_698666 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_698666.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_206389\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_206389 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_206389.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_206389 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_206389.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_206389 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_206389 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_206389 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_206389.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_600467\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_600467 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_600467.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_600467 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_600467.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_600467 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_600467 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_600467 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_600467.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_140005\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_140005 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_140005.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_140005 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_140005.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_140005 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_140005 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_140005 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_140005.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_113566\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_113566 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_113566.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_113566 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_113566.next ();\n\n                                             // check object __DEC_message_message_113566 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_113566 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_113566 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_113566.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_113566 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_113566.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_enclosingOperand is really bound\n                                    JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                    JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_enclosingOperand to combo\n                                    JavaSDM.ensure (combo.equals (_edge_enclosingOperand.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_enclosingOperand to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to combo\n                                    JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_236(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_646760 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_901092 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_412193 = null;\n      Interaction __DEC_operand_enclosingInteraction_137733 = null;\n      InteractionOperand __DEC_combo_fragment_548288 = null;\n      InteractionOperand __DEC_messageReceive_fragment_296987 = null;\n      InteractionOperand __DEC_messageSend_fragment_138776 = null;\n      InteractionOperand __DEC_operand_fragment_541729 = null;\n      Constraint __DEC_spec_specification_230225 = null;\n      InteractionOperand __DEC_guard_guard_534801 = null;\n      CombinedFragment __DEC_operand_operand_756374 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_656367 = null;\n      Message __DEC_messageReceive_receiveEvent_656367 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_501169 = null;\n      Message __DEC_messageSend_receiveEvent_501169 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_738826 = null;\n      Message __DEC_messageReceive_sendEvent_738826 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_372123 = null;\n      Message __DEC_messageSend_sendEvent_372123 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_127212 = null;\n      MessageEnd __DEC_message_message_127212 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               parentOperand = messageSend.getEnclosingOperand ();\n\n               // check object parentOperand is really bound\n               JavaSDM.ensure ( parentOperand != null );\n\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // bind object\n               _TmpObject = message.getReceiveEvent ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link fragment from messageReceive to parentOperand\n               JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n               ));\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // check link operand from parentOperand to parentCombo\n               JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_646760 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_646760 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_646760 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_646760 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_646760.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_901092 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_901092 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_901092 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_901092 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_901092.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_412193 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_412193 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_412193 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_412193 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_412193.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_137733 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_137733 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_137733 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_137733 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_137733.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_548288 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_548288 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_548288 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_548288 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_548288.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_548288 and parentOperand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_548288.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_296987 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_296987 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_296987 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_296987 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_296987.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_296987 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_296987.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_138776 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_138776 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_138776 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_138776 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_138776.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_138776 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_138776.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_541729 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_541729 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_541729 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_541729 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_541729.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_541729 and parentOperand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_541729.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_230225 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_230225 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_230225 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_230225.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_230225 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_230225.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_534801 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_534801 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_534801 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_534801.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_534801 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_534801.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_guard_guard_534801 and parentOperand \n                           JavaSDM.ensure ( !__DEC_guard_guard_534801.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_756374 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_756374 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_756374 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_756374.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_756374 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_756374.equals (combo) );\n\n                           // check isomorphic binding between objects __DEC_operand_operand_756374 and parentCombo \n                           JavaSDM.ensure ( !__DEC_operand_operand_756374.equals (parentCombo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_656367\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_656367 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_656367.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_656367 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_656367.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_656367 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_656367 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_656367 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_656367.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_501169\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_501169 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_501169.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_501169 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_501169.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_501169 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_501169 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_501169 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_501169.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_738826\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_738826 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_738826.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_738826 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_738826.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_738826 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_738826 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_738826 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_738826.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_372123\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_372123 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_372123.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_372123 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_372123.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_372123 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_372123 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_372123 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_372123.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_127212\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_127212 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_127212.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_127212 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_127212.next ();\n\n                                 // check object __DEC_message_message_127212 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_127212 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_127212 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_127212.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_127212 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_127212.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_coveredBy is really bound\n                        JavaSDM.ensure ( _edge_coveredBy != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to parentOperand\n                        JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link guard from parentOperand to guard\n                        JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link operand from operand to parentCombo\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                        .contains (parentCombo)));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_coveredBy to line\n                        JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                        ));\n\n                        // check link trg from _edge_coveredBy to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_237(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_161100 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_558408 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_405257 = null;\n      Interaction __DEC_operand_enclosingInteraction_389606 = null;\n      InteractionOperand __DEC_combo_fragment_306468 = null;\n      InteractionOperand __DEC_messageReceive_fragment_901018 = null;\n      InteractionOperand __DEC_messageSend_fragment_820700 = null;\n      InteractionOperand __DEC_operand_fragment_556048 = null;\n      Constraint __DEC_spec_specification_869299 = null;\n      InteractionOperand __DEC_guard_guard_771026 = null;\n      CombinedFragment __DEC_operand_operand_802558 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_449485 = null;\n      Message __DEC_messageReceive_receiveEvent_449485 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_348124 = null;\n      Message __DEC_messageSend_receiveEvent_348124 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_426107 = null;\n      Message __DEC_messageReceive_sendEvent_426107 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_312254 = null;\n      Message __DEC_messageSend_sendEvent_312254 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_634421 = null;\n      MessageEnd __DEC_message_message_634421 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n               // check object combo is really bound\n               JavaSDM.ensure ( combo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(combo.getOperand().contains(operand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from line to parentOperand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                           // ensure correct type and really bound of object parentOperand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           parentOperand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link fragment from messageSend to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                           ));\n\n                           // check link operand from parentOperand to parentCombo\n                           JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                           ));\n\n                           // iterate to-many link src from line to _edge_coveredBy\n                           fujaba__Success = false;\n\n                           fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                                 // check object _edge_coveredBy is really bound\n                                 JavaSDM.ensure ( _edge_coveredBy != null );\n                                 // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                 JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                 // check link trg from _edge_coveredBy to parentCombo\n                                 JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_161100 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_161100 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_161100 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_161100 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_161100.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_558408 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_558408 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_558408 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_558408 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_558408.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_405257 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_405257 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_405257 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_405257 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_405257.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_389606 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_389606 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_389606 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_389606 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_389606.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_306468 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_306468 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_306468 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_306468 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_306468.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_306468 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_306468.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_901018 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_901018 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_901018 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_901018 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_901018.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_901018 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_901018.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_820700 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_820700 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_820700 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_820700 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_820700.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_820700 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_820700.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_556048 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_556048 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_556048 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_556048 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_556048.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_556048 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_556048.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_869299 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_869299 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_869299 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_869299.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_869299 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_869299.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_771026 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_771026 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_771026 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_771026.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_771026 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_771026.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_771026 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_771026.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_802558 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_802558 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_802558 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_802558.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_802558 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_802558.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_802558 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_802558.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_449485\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_449485 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_449485.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_449485 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_449485.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_449485 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_449485 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_449485 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_449485.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_348124\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_348124 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_348124.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_348124 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_348124.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_348124 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_348124 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_348124 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_348124.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_426107\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_426107 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_426107.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_426107 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_426107.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_426107 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_426107 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_426107 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_426107.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_312254\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_312254 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_312254.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_312254 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_312254.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_312254 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_312254 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_312254 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_312254.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_634421\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_634421 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_634421.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_634421 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_634421.next ();\n\n                                             // check object __DEC_message_message_634421 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_634421 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_634421 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_634421.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_634421 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_634421.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to line\n                                    JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_238(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_322687 = null;\n      NormalStep __DEC_alt_stepAlternative_405937 = null;\n      Flow __DEC_step_steps_600039 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_254362 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_254362 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      AlternativeFlowAlternative alt = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_stepAlternative is really bound\n         JavaSDM.ensure ( _edge_stepAlternative != null );\n         // bind object\n         _TmpObject = _edge_stepAlternative.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_stepAlternative.getTrg ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         _TmpObject = alt.getRef ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check link stepAlternative from alt to step\n         JavaSDM.ensure (step.equals (alt.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_322687 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_322687 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_322687 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_322687.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_322687 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_322687.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_405937 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_405937 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_405937 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_405937.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_405937 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_405937.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_600039 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_600039 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_600039 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_600039.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_600039 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_600039.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_600039 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_600039.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_254362\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_254362 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_254362.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_254362 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_254362.next ();\n\n                     // check object __DEC_altFlow_ref_254362 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_254362 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_254362 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_254362.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_stepAlternative is really bound\n            JavaSDM.ensure ( _edge_stepAlternative != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_stepAlternative to step\n            JavaSDM.ensure (step.equals (_edge_stepAlternative.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_stepAlternative to alt\n            JavaSDM.ensure (alt.equals (_edge_stepAlternative.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,actor,flow,step,alt,altFlow,useCase);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_46(
			EMoflonEdge _edge_stepAlternative);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_373263 = null;\n      NormalStep __DEC_alt_stepAlternative_936015 = null;\n      Flow __DEC_step_steps_454479 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_77785 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_77785 = null;\n      Match match = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_ref is really bound\n         JavaSDM.ensure ( _edge_ref != null );\n         // bind object\n         _TmpObject = _edge_ref.getTrg ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_ref.getSrc ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // check link ref from alt to altFlow\n         JavaSDM.ensure (altFlow.equals (alt.getRef ()\n         ));\n\n         // bind object\n         step = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(step.getStepAlternative().contains(alt));\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_373263 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_373263 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_373263 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_373263.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_373263 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_373263.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_936015 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_936015 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_936015 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_936015.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_936015 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_936015.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_454479 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_454479 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_454479 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_454479.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_454479 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_454479.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_454479 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_454479.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_77785\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_77785 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_77785.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_77785 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_77785.next ();\n\n                     // check object __DEC_altFlow_ref_77785 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_77785 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_77785 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_77785.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_ref is really bound\n            JavaSDM.ensure ( _edge_ref != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_ref to alt\n            JavaSDM.ensure (alt.equals (_edge_ref.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_ref to altFlow\n            JavaSDM.ensure (altFlow.equals (_edge_ref.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,actor,flow,step,alt,altFlow,useCase);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_47(EMoflonEdge _edge_ref);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_949324 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_99535 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_770885 = null;\n      Interaction __DEC_operand_enclosingInteraction_140579 = null;\n      InteractionOperand __DEC_combo_fragment_664032 = null;\n      InteractionOperand __DEC_messageReceive_fragment_662946 = null;\n      InteractionOperand __DEC_messageSend_fragment_816519 = null;\n      InteractionOperand __DEC_operand_fragment_18314 = null;\n      Constraint __DEC_spec_specification_882689 = null;\n      InteractionOperand __DEC_guard_guard_443819 = null;\n      CombinedFragment __DEC_operand_operand_468915 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_544670 = null;\n      Message __DEC_messageReceive_receiveEvent_544670 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_648881 = null;\n      Message __DEC_messageSend_receiveEvent_648881 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_448694 = null;\n      Message __DEC_messageReceive_sendEvent_448694 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_507009 = null;\n      Message __DEC_messageSend_sendEvent_507009 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_713252 = null;\n      MessageEnd __DEC_message_message_713252 = null;\n      Match match = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_operand is really bound\n         JavaSDM.ensure ( _edge_operand != null );\n         // bind object\n         _TmpObject = _edge_operand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_operand.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // check link operand from operand to combo\n         JavaSDM.ensure (combo.equals (operand.eContainer()\n         ));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     parentOperand = messageSend.getEnclosingOperand ();\n\n                     // check object parentOperand is really bound\n                     JavaSDM.ensure ( parentOperand != null );\n\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // check link covered from parentOperand to line\n                     JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to parentCombo\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                           // ensure correct type and really bound of object parentCombo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           parentCombo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from parentOperand to parentCombo\n                           JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_949324 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_949324 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_949324 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_949324 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_949324.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_99535 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_99535 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_99535 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_99535 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_99535.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_770885 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_770885 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_770885 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_770885 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_770885.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_140579 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_140579 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_140579 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_140579 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_140579.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_664032 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_664032 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_664032 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_664032 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_664032.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_664032 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_664032.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_662946 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_662946 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_662946 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_662946 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_662946.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_662946 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_662946.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_816519 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_816519 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_816519 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_816519 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_816519.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_816519 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_816519.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_18314 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_18314 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_18314 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_18314 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_18314.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_18314 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_18314.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_882689 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_882689 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_882689 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_882689.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_882689 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_882689.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_443819 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_443819 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_443819 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_443819.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_443819 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_443819.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_443819 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_443819.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_468915 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_468915 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_468915 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_468915.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_468915 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_468915.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_468915 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_468915.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_544670\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_544670 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_544670.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_544670 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_544670.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_544670 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_544670 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_544670 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_544670.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_648881\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_648881 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_648881.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_648881 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_648881.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_648881 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_648881 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_648881 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_648881.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_448694\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_448694 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_448694.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_448694 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_448694.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_448694 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_448694 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_448694 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_448694.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_507009\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_507009 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_507009.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_507009 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_507009.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_507009 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_507009 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_507009 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_507009.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_713252\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_713252 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_713252.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_713252 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_713252.next ();\n\n                                       // check object __DEC_message_message_713252 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_713252 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_713252 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_713252.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_713252 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_713252.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_operand is really bound\n                              JavaSDM.ensure ( _edge_operand != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_operand to combo\n                              JavaSDM.ensure (combo.equals (_edge_operand.getSrc ()\n                              ));\n\n                              // check link trg from _edge_operand to operand\n                              JavaSDM.ensure (operand.equals (_edge_operand.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_239(EMoflonEdge _edge_operand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_440931 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_860302 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_586976 = null;\n      Interaction __DEC_operand_enclosingInteraction_485627 = null;\n      InteractionOperand __DEC_combo_fragment_964732 = null;\n      InteractionOperand __DEC_messageReceive_fragment_870509 = null;\n      InteractionOperand __DEC_messageSend_fragment_371486 = null;\n      InteractionOperand __DEC_operand_fragment_892852 = null;\n      Constraint __DEC_spec_specification_584524 = null;\n      InteractionOperand __DEC_guard_guard_719779 = null;\n      CombinedFragment __DEC_operand_operand_116571 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_989171 = null;\n      Message __DEC_messageReceive_receiveEvent_989171 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_754052 = null;\n      Message __DEC_messageSend_receiveEvent_754052 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_404842 = null;\n      Message __DEC_messageReceive_sendEvent_404842 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_657444 = null;\n      Message __DEC_messageSend_sendEvent_657444 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_884090 = null;\n      MessageEnd __DEC_message_message_884090 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to parentCombo\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n               // ensure correct type and really bound of object parentCombo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               parentCombo = (CombinedFragment) _TmpObject;\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from line to parentOperand\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link covered from line to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check link fragment from messageSend to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_440931 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_440931 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_440931 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_440931 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_440931.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_860302 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_860302 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_860302 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_860302 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_860302.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_586976 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_586976 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_586976 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_586976 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_586976.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_485627 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_485627 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_485627 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_485627 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_485627.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_964732 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_964732 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_964732 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_964732 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_964732.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_964732 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_964732.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_870509 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_870509 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_870509 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_870509 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_870509.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_870509 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_870509.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_371486 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_371486 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_371486 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_371486 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_371486.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_371486 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_371486.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_892852 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_892852 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_892852 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_892852 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_892852.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_892852 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_892852.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_584524 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_584524 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_584524 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_584524.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_584524 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_584524.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_719779 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_719779 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_719779 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_719779.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_719779 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_719779.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_719779 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_719779.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_116571 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_116571 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_116571 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_116571.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_116571 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_116571.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_116571 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_116571.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_989171\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_989171 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_989171.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_989171 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_989171.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_989171 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_989171 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_989171 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_989171.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_754052\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_754052 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_754052.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_754052 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_754052.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_754052 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_754052 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_754052 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_754052.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_404842\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_404842 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_404842.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_404842 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_404842.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_404842 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_404842 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_404842 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_404842.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_657444\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_657444 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_657444.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_657444 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_657444.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_657444 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_657444 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_657444 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_657444.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_884090\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_884090 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_884090.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_884090 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_884090.next ();\n\n                                       // check object __DEC_message_message_884090 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_884090 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_884090 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_884090.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_884090 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_884090.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to operand\n                              JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_240(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_560556 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_50539 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_181987 = null;\n      Interaction __DEC_operand_enclosingInteraction_545123 = null;\n      InteractionOperand __DEC_combo_fragment_916085 = null;\n      InteractionOperand __DEC_messageReceive_fragment_34724 = null;\n      InteractionOperand __DEC_messageSend_fragment_798412 = null;\n      InteractionOperand __DEC_operand_fragment_77352 = null;\n      Constraint __DEC_spec_specification_250439 = null;\n      InteractionOperand __DEC_guard_guard_542224 = null;\n      CombinedFragment __DEC_operand_operand_846200 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_297033 = null;\n      Message __DEC_messageReceive_receiveEvent_297033 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_455625 = null;\n      Message __DEC_messageSend_receiveEvent_455625 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_857438 = null;\n      Message __DEC_messageReceive_sendEvent_857438 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_366248 = null;\n      Message __DEC_messageSend_sendEvent_366248 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_416776 = null;\n      MessageEnd __DEC_message_message_416776 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               parentOperand = messageSend.getEnclosingOperand ();\n\n               // check object parentOperand is really bound\n               JavaSDM.ensure ( parentOperand != null );\n\n               // check isomorphic binding between objects parentOperand and operand \n               JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n               // check link fragment from combo to parentOperand\n               JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n               ));\n\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // bind object\n               _TmpObject = message.getReceiveEvent ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link fragment from messageReceive to parentOperand\n               JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n               ));\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to parentCombo\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                     // ensure correct type and really bound of object parentCombo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     parentCombo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link src from line to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                     while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link trg from _edge_coveredBy to operand\n                           JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_560556 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_560556 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_560556 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_560556 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_560556.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_50539 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_50539 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_50539 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_50539 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_50539.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_181987 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_181987 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_181987 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_181987 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_181987.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_545123 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_545123 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_545123 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_545123 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_545123.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_916085 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_916085 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_916085 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_916085 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_916085.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_916085 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_916085.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_34724 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_34724 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_34724 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_34724 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_34724.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_34724 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_34724.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_798412 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_798412 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_798412 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_798412 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_798412.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_798412 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_798412.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_77352 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_77352 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_77352 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_77352 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_77352.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_77352 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_77352.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_250439 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_250439 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_250439 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_250439.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_250439 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_250439.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_542224 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_542224 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_542224 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_542224.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_542224 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_542224.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_542224 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_542224.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_846200 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_846200 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_846200 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_846200.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_846200 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_846200.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_846200 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_846200.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_297033\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_297033 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_297033.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_297033 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_297033.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_297033 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_297033 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_297033 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_297033.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_455625\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_455625 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_455625.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_455625 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_455625.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_455625 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_455625 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_455625 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_455625.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_857438\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_857438 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_857438.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_857438 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_857438.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_857438 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_857438 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_857438 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_857438.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_366248\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_366248 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_366248.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_366248 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_366248.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_366248 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_366248 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_366248 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_366248.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_416776\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_416776 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_416776.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_416776 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_416776.next ();\n\n                                       // check object __DEC_message_message_416776 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_416776 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_416776 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_416776.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_416776 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_416776.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_covered is really bound\n                              JavaSDM.ensure ( _edge_covered != null );\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                              JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_covered to operand\n                              JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_covered to line\n                              JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to operand\n                              JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_241(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_578139 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_164341 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_712552 = null;\n      Interaction __DEC_operand_enclosingInteraction_491704 = null;\n      InteractionOperand __DEC_combo_fragment_223698 = null;\n      InteractionOperand __DEC_messageReceive_fragment_86452 = null;\n      InteractionOperand __DEC_messageSend_fragment_203498 = null;\n      InteractionOperand __DEC_operand_fragment_185762 = null;\n      Constraint __DEC_spec_specification_993537 = null;\n      InteractionOperand __DEC_guard_guard_506643 = null;\n      CombinedFragment __DEC_operand_operand_852960 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_32202 = null;\n      Message __DEC_messageReceive_receiveEvent_32202 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_352517 = null;\n      Message __DEC_messageSend_receiveEvent_352517 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_401190 = null;\n      Message __DEC_messageReceive_sendEvent_401190 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_427203 = null;\n      Message __DEC_messageSend_sendEvent_427203 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_643584 = null;\n      MessageEnd __DEC_message_message_643584 = null;\n      Match match = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_guard is really bound\n         JavaSDM.ensure ( _edge_guard != null );\n         // bind object\n         _TmpObject = _edge_guard.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link trg from _edge_guard to guard\n         JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     parentOperand = messageSend.getEnclosingOperand ();\n\n                     // check object parentOperand is really bound\n                     JavaSDM.ensure ( parentOperand != null );\n\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // bind object\n                     parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                     // check object parentCombo is really bound\n                     JavaSDM.ensure ( parentCombo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // check link covered from parentOperand to line\n                     JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_578139 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_578139 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_578139 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_578139 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_578139.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_164341 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_164341 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_164341 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_164341 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_164341.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_712552 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_712552 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_712552 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_712552 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_712552.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_491704 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_491704 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_491704 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_491704 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_491704.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_223698 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_223698 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_223698 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_223698 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_223698.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_223698 and parentOperand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_223698.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_86452 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_86452 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_86452 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_86452 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_86452.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_86452 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_86452.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_203498 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_203498 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_203498 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_203498 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_203498.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_203498 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_203498.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_185762 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_185762 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_185762 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_185762 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_185762.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_185762 and parentOperand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_185762.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_993537 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_993537 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_993537 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_993537.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_993537 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_993537.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_506643 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_506643 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_506643 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_506643.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_506643 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_506643.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_guard_guard_506643 and parentOperand \n                           JavaSDM.ensure ( !__DEC_guard_guard_506643.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_852960 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_852960 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_852960 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_852960.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_852960 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_852960.equals (combo) );\n\n                           // check isomorphic binding between objects __DEC_operand_operand_852960 and parentCombo \n                           JavaSDM.ensure ( !__DEC_operand_operand_852960.equals (parentCombo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_32202\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_32202 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_32202.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_32202 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_32202.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_32202 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_32202 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_32202 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_32202.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_352517\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_352517 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_352517.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_352517 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_352517.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_352517 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_352517 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_352517 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_352517.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_401190\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_401190 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_401190.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_401190 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_401190.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_401190 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_401190 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_401190 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_401190.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_427203\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_427203 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_427203.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_427203 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_427203.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_427203 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_427203 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_427203 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_427203.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_643584\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_643584 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_643584.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_643584 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_643584.next ();\n\n                                 // check object __DEC_message_message_643584 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_643584 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_643584 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_643584.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_643584 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_643584.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_guard is really bound\n                        JavaSDM.ensure ( _edge_guard != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to parentOperand\n                        JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link guard from parentOperand to guard\n                        JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link operand from operand to parentCombo\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                        .contains (parentCombo)));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_guard to operand\n                        JavaSDM.ensure (operand.equals (_edge_guard.getSrc ()\n                        ));\n\n                        // check link trg from _edge_guard to guard\n                        JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_242(EMoflonEdge _edge_guard);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_236395 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_100683 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_688381 = null;\n      Interaction __DEC_operand_enclosingInteraction_562248 = null;\n      InteractionOperand __DEC_combo_fragment_122271 = null;\n      InteractionOperand __DEC_messageReceive_fragment_859181 = null;\n      InteractionOperand __DEC_messageSend_fragment_841970 = null;\n      InteractionOperand __DEC_operand_fragment_392650 = null;\n      Constraint __DEC_spec_specification_994572 = null;\n      InteractionOperand __DEC_guard_guard_798407 = null;\n      CombinedFragment __DEC_operand_operand_492988 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_311177 = null;\n      Message __DEC_messageReceive_receiveEvent_311177 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_349660 = null;\n      Message __DEC_messageSend_receiveEvent_349660 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_57431 = null;\n      Message __DEC_messageReceive_sendEvent_57431 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_762914 = null;\n      Message __DEC_messageSend_sendEvent_762914 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_526294 = null;\n      MessageEnd __DEC_message_message_526294 = null;\n      Match match = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      InteractionConstraint guard = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_specification is really bound\n         JavaSDM.ensure ( _edge_specification != null );\n         // bind object\n         _TmpObject = _edge_specification.getSrc ();\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n\n         // bind object\n         operand = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(guard.equals(operand.getGuard()));\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = _edge_specification.getTrg ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link specification from spec to guard\n         JavaSDM.ensure (guard.equals (spec.eContainer()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from line to parentOperand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                           // ensure correct type and really bound of object parentOperand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           parentOperand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link fragment from messageSend to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                           // check object parentCombo is really bound\n                           JavaSDM.ensure ( parentCombo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_236395 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_236395 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_236395 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_236395 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_236395.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_100683 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_100683 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_100683 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_100683 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_100683.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_688381 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_688381 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_688381 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_688381 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_688381.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_562248 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_562248 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_562248 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_562248 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_562248.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_122271 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_122271 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_122271 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_122271 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_122271.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_122271 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_122271.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_859181 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_859181 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_859181 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_859181 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_859181.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_859181 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_859181.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_841970 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_841970 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_841970 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_841970 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_841970.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_841970 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_841970.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_392650 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_392650 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_392650 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_392650 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_392650.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_392650 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_392650.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_994572 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_994572 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_994572 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_994572.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_994572 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_994572.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_798407 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_798407 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_798407 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_798407.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_798407 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_798407.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_798407 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_798407.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_492988 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_492988 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_492988 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_492988.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_492988 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_492988.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_492988 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_492988.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_311177\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_311177 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_311177.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_311177 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_311177.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_311177 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_311177 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_311177 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_311177.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_349660\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_349660 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_349660.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_349660 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_349660.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_349660 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_349660 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_349660 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_349660.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_57431\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_57431 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_57431.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_57431 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_57431.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_57431 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_57431 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_57431 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_57431.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_762914\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_762914 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_762914.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_762914 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_762914.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_762914 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_762914 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_762914 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_762914.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_526294\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_526294 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_526294.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_526294 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_526294.next ();\n\n                                       // check object __DEC_message_message_526294 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_526294 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_526294 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_526294.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_526294 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_526294.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_specification is really bound\n                              JavaSDM.ensure ( _edge_specification != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_specification to guard\n                              JavaSDM.ensure (guard.equals (_edge_specification.getSrc ()\n                              ));\n\n                              // check link trg from _edge_specification to spec\n                              JavaSDM.ensure (spec.equals (_edge_specification.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_243(
			EMoflonEdge _edge_specification);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_31637 = null;\n      NormalStep __DEC_alt_stepAlternative_683457 = null;\n      Flow __DEC_step_steps_218717 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_514842 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_514842 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      Actor actor = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_steps is really bound\n         JavaSDM.ensure ( _edge_steps != null );\n         // bind object\n         _TmpObject = _edge_steps.getSrc ();\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_steps.getTrg ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // check link steps from step to flow\n         JavaSDM.ensure (flow.equals (step.eContainer()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_31637 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_31637 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_31637 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_31637.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_31637 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_31637.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_683457 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_683457 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_683457 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_683457.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_683457 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_683457.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_218717 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_218717 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_218717 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_218717.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_218717 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_218717.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_218717 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_218717.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_514842\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_514842 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_514842.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_514842 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_514842.next ();\n\n                           // check object __DEC_altFlow_ref_514842 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_514842 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_514842 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_514842.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_steps is really bound\n                  JavaSDM.ensure ( _edge_steps != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_steps to flow\n                  JavaSDM.ensure (flow.equals (_edge_steps.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_steps to step\n                  JavaSDM.ensure (step.equals (_edge_steps.getTrg ()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,actor,flow,step,alt,altFlow,useCase);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_48(EMoflonEdge _edge_steps);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_256282 = null;\n      NormalStep __DEC_alt_stepAlternative_327313 = null;\n      Flow __DEC_step_steps_23035 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_201571 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_201571 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      Actor actor = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_actor is really bound\n         JavaSDM.ensure ( _edge_actor != null );\n         // bind object\n         _TmpObject = _edge_actor.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_actor.getTrg ();\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n\n         // check link actor from step to actor\n         JavaSDM.ensure (actor.equals (step.getActor ()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_256282 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_256282 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_256282 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_256282.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_256282 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_256282.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_327313 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_327313 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_327313 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_327313.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_327313 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_327313.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_23035 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_23035 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_23035 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_23035.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_23035 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_23035.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_23035 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_23035.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_201571\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_201571 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_201571.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_201571 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_201571.next ();\n\n                           // check object __DEC_altFlow_ref_201571 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_201571 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_201571 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_201571.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_actor is really bound\n                  JavaSDM.ensure ( _edge_actor != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_actor to step\n                  JavaSDM.ensure (step.equals (_edge_actor.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_actor to actor\n                  JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,actor,flow,step,alt,altFlow,useCase);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_49(EMoflonEdge _edge_actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_349648 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_145293 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_101432 = null;\n      Interaction __DEC_operand_enclosingInteraction_553784 = null;\n      InteractionOperand __DEC_combo_fragment_745885 = null;\n      InteractionOperand __DEC_messageReceive_fragment_605881 = null;\n      InteractionOperand __DEC_messageSend_fragment_703039 = null;\n      InteractionOperand __DEC_operand_fragment_105866 = null;\n      Constraint __DEC_spec_specification_886106 = null;\n      InteractionOperand __DEC_guard_guard_379310 = null;\n      CombinedFragment __DEC_operand_operand_809306 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_427756 = null;\n      Message __DEC_messageReceive_receiveEvent_427756 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_890756 = null;\n      Message __DEC_messageSend_receiveEvent_890756 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_645706 = null;\n      Message __DEC_messageReceive_sendEvent_645706 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_599474 = null;\n      Message __DEC_messageSend_sendEvent_599474 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_587100 = null;\n      MessageEnd __DEC_message_message_587100 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sendEvent is really bound\n         JavaSDM.ensure ( _edge_sendEvent != null );\n         // bind object\n         _TmpObject = _edge_sendEvent.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link src from _edge_sendEvent to message\n         JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to parentCombo\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                     // ensure correct type and really bound of object parentCombo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     parentCombo = (CombinedFragment) _TmpObject;\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object combo is really bound\n                           JavaSDM.ensure ( combo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_349648 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_349648 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_349648 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_349648 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_349648.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_145293 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_145293 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_145293 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_145293 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_145293.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_101432 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_101432 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_101432 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_101432 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_101432.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_553784 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_553784 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_553784 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_553784 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_553784.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_745885 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_745885 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_745885 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_745885 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_745885.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_745885 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_745885.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_605881 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_605881 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_605881 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_605881 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_605881.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_605881 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_605881.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_703039 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_703039 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_703039 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_703039 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_703039.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_703039 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_703039.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_105866 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_105866 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_105866 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_105866 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_105866.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_105866 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_105866.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_886106 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_886106 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_886106 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_886106.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_886106 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_886106.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_379310 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_379310 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_379310 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_379310.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_379310 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_379310.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_379310 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_379310.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_809306 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_809306 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_809306 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_809306.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_809306 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_809306.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_809306 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_809306.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_427756\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_427756 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_427756.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_427756 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_427756.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_427756 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_427756 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_427756 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_427756.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_890756\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_890756 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_890756.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_890756 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_890756.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_890756 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_890756 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_890756 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_890756.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_645706\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_645706 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_645706.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_645706 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_645706.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_645706 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_645706 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_645706 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_645706.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_599474\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_599474 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_599474.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_599474 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_599474.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_599474 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_599474 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_599474 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_599474.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_587100\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_587100 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_587100.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_587100 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_587100.next ();\n\n                                       // check object __DEC_message_message_587100 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_587100 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_587100 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_587100.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_587100 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_587100.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_sendEvent is really bound\n                              JavaSDM.ensure ( _edge_sendEvent != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_sendEvent to message\n                              JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n                              ));\n\n                              // check link trg from _edge_sendEvent to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_sendEvent.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_244(
			EMoflonEdge _edge_sendEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_584929 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_451902 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_656681 = null;\n      Interaction __DEC_operand_enclosingInteraction_819851 = null;\n      InteractionOperand __DEC_combo_fragment_84432 = null;\n      InteractionOperand __DEC_messageReceive_fragment_155453 = null;\n      InteractionOperand __DEC_messageSend_fragment_338189 = null;\n      InteractionOperand __DEC_operand_fragment_897342 = null;\n      Constraint __DEC_spec_specification_241092 = null;\n      InteractionOperand __DEC_guard_guard_753925 = null;\n      CombinedFragment __DEC_operand_operand_508770 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_612834 = null;\n      Message __DEC_messageReceive_receiveEvent_612834 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_970382 = null;\n      Message __DEC_messageSend_receiveEvent_970382 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_364760 = null;\n      Message __DEC_messageReceive_sendEvent_364760 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_686861 = null;\n      Message __DEC_messageSend_sendEvent_686861 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_17085 = null;\n      MessageEnd __DEC_message_message_17085 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_receiveEvent is really bound\n         JavaSDM.ensure ( _edge_receiveEvent != null );\n         // bind object\n         _TmpObject = _edge_receiveEvent.getSrc ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link trg from _edge_receiveEvent to messageReceive\n         JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link lifeline from line to interaction\n               JavaSDM.ensure (interaction.equals (line.getInteraction ()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to parentCombo\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                     // ensure correct type and really bound of object parentCombo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     parentCombo = (CombinedFragment) _TmpObject;\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object combo is really bound\n                           JavaSDM.ensure ( combo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_584929 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_584929 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_584929 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_584929 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_584929.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_451902 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_451902 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_451902 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_451902 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_451902.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_656681 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_656681 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_656681 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_656681 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_656681.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_819851 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_819851 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_819851 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_819851 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_819851.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_84432 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_84432 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_84432 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_84432 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_84432.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_84432 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_84432.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_155453 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_155453 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_155453 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_155453 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_155453.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_155453 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_155453.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_338189 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_338189 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_338189 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_338189 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_338189.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_338189 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_338189.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_897342 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_897342 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_897342 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_897342 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_897342.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_897342 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_897342.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_241092 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_241092 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_241092 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_241092.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_241092 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_241092.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_753925 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_753925 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_753925 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_753925.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_753925 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_753925.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_753925 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_753925.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_508770 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_508770 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_508770 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_508770.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_508770 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_508770.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_508770 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_508770.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_612834\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_612834 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_612834.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_612834 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_612834.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_612834 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_612834 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_612834 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_612834.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_970382\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_970382 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_970382.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_970382 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_970382.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_970382 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_970382 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_970382 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_970382.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_364760\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_364760 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_364760.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_364760 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_364760.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_364760 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_364760 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_364760 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_364760.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_686861\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_686861 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_686861.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_686861 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_686861.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_686861 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_686861 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_686861 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_686861.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_17085\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_17085 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_17085.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_17085 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_17085.next ();\n\n                                       // check object __DEC_message_message_17085 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_17085 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_17085 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_17085.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_17085 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_17085.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_receiveEvent is really bound\n                              JavaSDM.ensure ( _edge_receiveEvent != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_receiveEvent to message\n                              JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n                              ));\n\n                              // check link trg from _edge_receiveEvent to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_245(
			EMoflonEdge _edge_receiveEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_29865 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_553872 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_713994 = null;\n      Interaction __DEC_operand_enclosingInteraction_174974 = null;\n      InteractionOperand __DEC_combo_fragment_974526 = null;\n      InteractionOperand __DEC_messageReceive_fragment_743349 = null;\n      InteractionOperand __DEC_messageSend_fragment_313245 = null;\n      InteractionOperand __DEC_operand_fragment_729906 = null;\n      Constraint __DEC_spec_specification_431036 = null;\n      InteractionOperand __DEC_guard_guard_83576 = null;\n      CombinedFragment __DEC_operand_operand_809923 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_774573 = null;\n      Message __DEC_messageReceive_receiveEvent_774573 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_576893 = null;\n      Message __DEC_messageSend_receiveEvent_576893 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_535193 = null;\n      Message __DEC_messageReceive_sendEvent_535193 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_842506 = null;\n      Message __DEC_messageSend_sendEvent_842506 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_839059 = null;\n      MessageEnd __DEC_message_message_839059 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_interaction is really bound\n         JavaSDM.ensure ( _edge_interaction != null );\n         // bind object\n         _TmpObject = _edge_interaction.getTrg ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link lifeline from interaction to line\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n         while ( fujaba__IterInteractionToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // iterate to-many link covered from line to parentCombo\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                     // ensure correct type and really bound of object parentCombo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     parentCombo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link covered from line to parentOperand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                           // ensure correct type and really bound of object parentOperand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           parentOperand = (InteractionOperand) _TmpObject;\n                           // check link operand from parentOperand to parentCombo\n                           JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                           ));\n\n                           // iterate to-many link covered from line to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check link fragment from messageSend to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                 ));\n\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = message.getReceiveEvent ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link fragment from messageReceive to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // check link src from _edge_interaction to message\n                                 JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                 ));\n\n                                 // iterate to-many link covered from line to operand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterLineToOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                       // ensure correct type and really bound of object operand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       operand = (InteractionOperand) _TmpObject;\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // bind object\n                                       guard = operand.getGuard ();\n\n                                       // check object guard is really bound\n                                       JavaSDM.ensure ( guard != null );\n\n                                       // bind object\n                                       combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object combo is really bound\n                                       JavaSDM.ensure ( combo != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects parentCombo and combo \n                                       JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                       // check link fragment from combo to parentOperand\n                                       JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                       ));\n\n                                       // bind object\n                                       _TmpObject = guard.getSpecification ();\n\n                                       // ensure correct type and really bound of object spec\n                                       JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                       spec = (LiteralString) _TmpObject;\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_29865 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_29865 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_29865 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_29865 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_29865.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_553872 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_553872 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_553872 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_553872 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_553872.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_713994 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_713994 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_713994 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_713994 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_713994.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_174974 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_174974 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_174974 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_174974 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_174974.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_974526 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_974526 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_974526 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_974526 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_974526.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_974526 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_974526.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_743349 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_743349 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_743349 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_743349 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_743349.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_743349 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_743349.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_313245 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_313245 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_313245 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_313245 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_313245.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_313245 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_313245.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_729906 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_729906 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_729906 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_729906 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_729906.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_729906 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_729906.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_431036 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_431036 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_431036 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_431036.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_431036 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_431036.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_83576 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_83576 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_83576 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_83576.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_83576 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_83576.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_83576 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_83576.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_809923 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_809923 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_809923 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_809923.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_809923 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_809923.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_809923 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_809923.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_774573\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_774573 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_774573.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_774573 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_774573.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_774573 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_774573 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_774573 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_774573.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_576893\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_576893 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_576893.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_576893 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_576893.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_576893 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_576893 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_576893 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_576893.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_535193\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_535193 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_535193.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_535193 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_535193.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_535193 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_535193 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_535193 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_535193.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_842506\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_842506 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_842506.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_842506 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_842506.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_842506 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_842506 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_842506 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_842506.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_839059\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_839059 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_839059.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_839059 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_839059.next ();\n\n                                                   // check object __DEC_message_message_839059 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_839059 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_839059 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_839059.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_839059 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_839059.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_interaction is really bound\n                                          JavaSDM.ensure ( _edge_interaction != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_interaction to message\n                                          JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_interaction to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                          ));\n\n                                          // check link covered from messageSend to line\n                                          JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from parentOperand to line\n                                          JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_246(
			EMoflonEdge _edge_interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_360364 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_104525 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_213413 = null;\n      Interaction __DEC_operand_enclosingInteraction_169701 = null;\n      InteractionOperand __DEC_combo_fragment_685366 = null;\n      InteractionOperand __DEC_messageReceive_fragment_780537 = null;\n      InteractionOperand __DEC_messageSend_fragment_333115 = null;\n      InteractionOperand __DEC_operand_fragment_29 = null;\n      Constraint __DEC_spec_specification_12667 = null;\n      InteractionOperand __DEC_guard_guard_336444 = null;\n      CombinedFragment __DEC_operand_operand_357712 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_82242 = null;\n      Message __DEC_messageReceive_receiveEvent_82242 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_824172 = null;\n      Message __DEC_messageSend_receiveEvent_824172 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_95432 = null;\n      Message __DEC_messageReceive_sendEvent_95432 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_27954 = null;\n      Message __DEC_messageSend_sendEvent_27954 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_742452 = null;\n      MessageEnd __DEC_message_message_742452 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionTo_edge_interaction = null;\n      EMoflonEdge _edge_interaction = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link trg from interaction to _edge_interaction\n         fujaba__Success = false;\n\n         fujaba__IterInteractionTo_edge_interaction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,EMoflonEdge.class,\"trg\")).iterator ();\n\n         while ( fujaba__IterInteractionTo_edge_interaction.hasNext () )\n         {\n            try\n            {\n               _edge_interaction = (EMoflonEdge) fujaba__IterInteractionTo_edge_interaction.next ();\n\n               // check object _edge_interaction is really bound\n               JavaSDM.ensure ( _edge_interaction != null );\n               // check isomorphic binding between objects _edge_message and _edge_interaction \n               JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n               // iterate to-many link lifeline from interaction to line\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n               while ( fujaba__IterInteractionToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // iterate to-many link covered from line to parentCombo\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                           // ensure correct type and really bound of object parentCombo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           parentCombo = (CombinedFragment) _TmpObject;\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // bind object\n                                 combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object combo is really bound\n                                 JavaSDM.ensure ( combo != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects parentCombo and combo \n                                 JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // iterate to-many link covered from line to messageSend\n                                 fujaba__Success = false;\n\n                                 fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterLineToMessageSend.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                                       // ensure correct type and really bound of object messageSend\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                       // bind object\n                                       parentOperand = messageSend.getEnclosingOperand ();\n\n                                       // check object parentOperand is really bound\n                                       JavaSDM.ensure ( parentOperand != null );\n\n                                       // check isomorphic binding between objects parentOperand and operand \n                                       JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                       // check link fragment from combo to parentOperand\n                                       JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                       ));\n\n                                       // bind object\n                                       message = messageSend.getMessage ();\n\n                                       // check object message is really bound\n                                       JavaSDM.ensure ( message != null );\n\n                                       // check link message from message to interaction\n                                       JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                       ));\n\n                                       // bind object\n                                       _TmpObject = message.getReceiveEvent ();\n\n                                       // ensure correct type and really bound of object messageReceive\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // check link fragment from messageReceive to parentOperand\n                                       JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                       ));\n\n                                       // check link message from messageReceive to message\n                                       JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                       ));\n\n                                       // check link sendEvent from message to messageSend\n                                       JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                       ));\n\n                                       // check link operand from parentOperand to parentCombo\n                                       JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                       ));\n\n                                       // check link src from _edge_interaction to message\n                                       JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                       ));\n\n                                       // check link trg from _edge_message to message\n                                       JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                       ));\n\n                                       // check link covered from parentOperand to line\n                                       JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_360364 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_360364 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_360364 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_360364 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_360364.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_104525 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_104525 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_104525 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_104525 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_104525.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_213413 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_213413 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_213413 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_213413 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_213413.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_169701 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_169701 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_169701 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_169701 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_169701.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_685366 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_685366 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_685366 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_685366 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_685366.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_685366 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_685366.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_780537 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_780537 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_780537 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_780537 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_780537.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_780537 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_780537.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_333115 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_333115 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_333115 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_333115 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_333115.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_333115 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_333115.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_29 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_29 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_29 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_29 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_29.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_29 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_29.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_12667 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_12667 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_12667 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_12667.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_12667 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_12667.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_336444 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_336444 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_336444 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_336444.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_336444 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_336444.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_336444 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_336444.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_357712 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_357712 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_357712 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_357712.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_357712 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_357712.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_357712 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_357712.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_82242\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_82242 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_82242.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_82242 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_82242.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_82242 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_82242 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_82242 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_82242.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_824172\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_824172 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_824172.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_824172 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_824172.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_824172 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_824172 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_824172 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_824172.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_95432\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_95432 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_95432.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_95432 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_95432.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_95432 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_95432 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_95432 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_95432.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_27954\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_27954 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_27954.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_27954 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_27954.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_27954 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_27954 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_27954 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_27954.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_742452\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_742452 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_742452.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_742452 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_742452.next ();\n\n                                                   // check object __DEC_message_message_742452 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_742452 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_742452 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_742452.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_742452 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_742452.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_interaction is really bound\n                                          JavaSDM.ensure ( _edge_interaction != null );\n                                          // check object _edge_message is really bound\n                                          JavaSDM.ensure ( _edge_message != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_message and _edge_interaction \n                                          JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_interaction to message\n                                          JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_message to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_interaction to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_message to message\n                                          JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                          ));\n\n                                          // check link covered from messageSend to line\n                                          JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from parentOperand to line\n                                          JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_247(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_823660 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_190217 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_10295 = null;\n      Interaction __DEC_operand_enclosingInteraction_942661 = null;\n      InteractionOperand __DEC_combo_fragment_430007 = null;\n      InteractionOperand __DEC_messageReceive_fragment_642483 = null;\n      InteractionOperand __DEC_messageSend_fragment_814675 = null;\n      InteractionOperand __DEC_operand_fragment_977958 = null;\n      Constraint __DEC_spec_specification_178451 = null;\n      InteractionOperand __DEC_guard_guard_318505 = null;\n      CombinedFragment __DEC_operand_operand_476878 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_112811 = null;\n      Message __DEC_messageReceive_receiveEvent_112811 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_391704 = null;\n      Message __DEC_messageSend_receiveEvent_391704 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_124038 = null;\n      Message __DEC_messageReceive_sendEvent_124038 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_443497 = null;\n      Message __DEC_messageSend_sendEvent_443497 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_637031 = null;\n      MessageEnd __DEC_message_message_637031 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_823660 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_823660 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_823660 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_823660 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_823660.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_190217 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_190217 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_190217 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_190217 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_190217.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_10295 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_10295 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_10295 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_10295 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_10295.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_942661 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_942661 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_942661 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_942661 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_942661.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_430007 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_430007 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_430007 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_430007 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_430007.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_430007 and parentOperand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_430007.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_642483 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_642483 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_642483 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_642483 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_642483.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_642483 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_642483.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_814675 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_814675 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_814675 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_814675 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_814675.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_814675 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_814675.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_977958 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_977958 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_977958 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_977958 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_977958.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_977958 and parentOperand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_977958.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_178451 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_178451 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_178451 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_178451.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_178451 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_178451.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_318505 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_318505 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_318505 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_318505.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_318505 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_318505.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_guard_guard_318505 and parentOperand \n                           JavaSDM.ensure ( !__DEC_guard_guard_318505.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_476878 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_476878 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_476878 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_476878.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_476878 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_476878.equals (combo) );\n\n                           // check isomorphic binding between objects __DEC_operand_operand_476878 and parentCombo \n                           JavaSDM.ensure ( !__DEC_operand_operand_476878.equals (parentCombo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_112811\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_112811 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_112811.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_112811 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_112811.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_112811 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_112811 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_112811 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_112811.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_391704\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_391704 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_391704.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_391704 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_391704.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_391704 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_391704 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_391704 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_391704.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_124038\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_124038 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_124038.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_124038 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_124038.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_124038 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_124038 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_124038 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_124038.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_443497\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_443497 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_443497.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_443497 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_443497.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_443497 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_443497 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_443497 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_443497.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_637031\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_637031 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_637031.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_637031 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_637031.next ();\n\n                                 // check object __DEC_message_message_637031 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_637031 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_637031 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_637031.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_637031 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_637031.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_message is really bound\n                        JavaSDM.ensure ( _edge_message != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to parentOperand\n                        JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link guard from parentOperand to guard\n                        JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link operand from operand to parentCombo\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                        .contains (parentCombo)));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_message to messageSend\n                        JavaSDM.ensure (messageSend.equals (_edge_message.getSrc ()\n                        ));\n\n                        // check link trg from _edge_message to message\n                        JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_248(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_621865 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_670102 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_177389 = null;\n      Interaction __DEC_operand_enclosingInteraction_402686 = null;\n      InteractionOperand __DEC_combo_fragment_94935 = null;\n      InteractionOperand __DEC_messageReceive_fragment_542037 = null;\n      InteractionOperand __DEC_messageSend_fragment_733349 = null;\n      InteractionOperand __DEC_operand_fragment_630721 = null;\n      Constraint __DEC_spec_specification_793542 = null;\n      InteractionOperand __DEC_guard_guard_996923 = null;\n      CombinedFragment __DEC_operand_operand_545976 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_434377 = null;\n      Message __DEC_messageReceive_receiveEvent_434377 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_240442 = null;\n      Message __DEC_messageSend_receiveEvent_240442 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_611668 = null;\n      Message __DEC_messageReceive_sendEvent_611668 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_297292 = null;\n      Message __DEC_messageSend_sendEvent_297292 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_558957 = null;\n      MessageEnd __DEC_message_message_558957 = null;\n      Match match = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Interaction interaction = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getTrg ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link src from _edge_message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n         ));\n\n         // iterate to-many link lifeline from interaction to line\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n         while ( fujaba__IterInteractionToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link covered from messageSend to line\n               JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link covered from line to parentCombo\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                           // ensure correct type and really bound of object parentCombo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           parentCombo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // iterate to-many link covered from line to parentOperand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToParentOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                                 // ensure correct type and really bound of object parentOperand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 parentOperand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // check link fragment from combo to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                 ));\n\n                                 // check link fragment from messageReceive to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                 ));\n\n                                 // check link fragment from messageSend to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                 ));\n\n                                 // check link operand from parentOperand to parentCombo\n                                 JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_621865 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_621865 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_621865 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_621865 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_621865.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_670102 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_670102 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_670102 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_670102 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_670102.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_177389 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_177389 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_177389 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_177389 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_177389.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_402686 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_402686 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_402686 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_402686 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_402686.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_94935 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_94935 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_94935 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_94935 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_94935.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_94935 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_94935.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_542037 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_542037 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_542037 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_542037 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_542037.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_542037 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_542037.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_733349 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_733349 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_733349 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_733349 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_733349.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_733349 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_733349.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_630721 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_630721 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_630721 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_630721 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_630721.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_630721 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_630721.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_793542 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_793542 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_793542 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_793542.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_793542 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_793542.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_996923 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_996923 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_996923 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_996923.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_996923 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_996923.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_996923 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_996923.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_545976 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_545976 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_545976 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_545976.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_545976 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_545976.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_545976 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_545976.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_434377\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_434377 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_434377.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_434377 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_434377.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_434377 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_434377 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_434377 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_434377.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_240442\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_240442 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_240442.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_240442 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_240442.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_240442 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_240442 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_240442 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_240442.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_611668\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_611668 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_611668.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_611668 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_611668.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_611668 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_611668 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_611668 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_611668.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_297292\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_297292 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_297292.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_297292 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_297292.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_297292 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_297292 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_297292 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_297292.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_558957\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_558957 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_558957.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_558957 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_558957.next ();\n\n                                             // check object __DEC_message_message_558957 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_558957 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_558957 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_558957.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_558957 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_558957.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_249(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // AltSysStepNFToComboRule
