/**
 */
package UseCaseToModalSequenceDiagramIntegration.Rules;

import ModalSequenceDiagram.CombinedFragment;
import ModalSequenceDiagram.Constraint;
import ModalSequenceDiagram.Interaction;
import ModalSequenceDiagram.InteractionConstraint;
import ModalSequenceDiagram.InteractionOperand;
import ModalSequenceDiagram.Lifeline;
import ModalSequenceDiagram.LiteralString;
import ModalSequenceDiagram.Message;
import ModalSequenceDiagram.MessageEnd;
import ModalSequenceDiagram.MessageOccurrenceSpecification;
import ModalSequenceDiagram.ModalSequenceDiagramFactory;
import ModalSequenceDiagram.Model;

import TGGLanguage.csp.*;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NamedFlow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import UseCaseToModalSequenceDiagramIntegration.ActorToLifeline;
import UseCaseToModalSequenceDiagramIntegration.FlowToInteractionFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToMessage;
import UseCaseToModalSequenceDiagramIntegration.PackageDeclarationToPackage;
import UseCaseToModalSequenceDiagramIntegration.ParallelStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.StepAlternativeToInteractionOperand;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToInteraction;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToModalSequenceDiagramIntegrationFactory;
import UseCaseToModalSequenceDiagramIntegration.UseCasesModelToModel;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Alt Sys Step NF To Combo Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see UseCaseToModalSequenceDiagramIntegration.Rules.RulesPackage#getAltSysStepNFToComboRule()
 * @model
 * @generated
 */
public interface AltSysStepNFToComboRule extends AbstractRule,
		AltStepNFToComboRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,actor,flow,step,alt,altFlow,useCase,packageDeclaration));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __flow_steps_step\n            __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __alt_ref_altFlow\n            __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_actor_actor\n            __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_stepAlternative_alt\n            __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __step_stepAlternative_alt\n            __step_stepAlternative_alt.setName (\"stepAlternative\");\n            // assign attribute __alt_ref_altFlow\n            __alt_ref_altFlow.setName (\"ref\");\n            // assign attribute __flow_steps_step\n            __flow_steps_step.setName (\"steps\");\n            // assign attribute __step_actor_actor\n            __step_actor_actor.setName (\"actor\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,alt,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__flow_steps_step,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__alt_ref_altFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_actor_actor,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,step,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_stepAlternative_alt,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,altFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            __step_actor_actor.setTrg( actor);\n\n\n            // create link\n            __flow_steps_step.setSrc( flow);\n\n\n            // create link\n            __flow_steps_step.setTrg( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setSrc( step);\n\n\n            // create link\n            __step_actor_actor.setSrc( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setTrg( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setSrc( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setTrg( altFlow);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __useCase_flows_flow\n            __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __useCase_flows_flow\n            __useCase_flows_flow.setName (\"flows\");\n            // assign attribute __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor.setName (\"actors\");\n            // assign attribute __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,useCase,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,flow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_useCases_useCase,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__useCase_flows_flow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_actors_actor,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,actor,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,packageDeclaration,\"contextNodes\");\n\n            // create link\n            __packageDeclaration_actors_actor.setTrg( actor);\n\n\n            // create link\n            __useCase_flows_flow.setTrg( flow);\n\n\n            // create link\n            __useCase_flows_flow.setSrc( useCase);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n            // create link\n            __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,actor,flow,step,alt,altFlow,useCase,packageDeclaration);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, Actor actor, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      PackageDeclaration packageDeclaration = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      InteractionOperand operand = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      CombinedFragment combo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      NormalStepToMessage stepToMessage = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      InteractionConstraint guard = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      LiteralString spec = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge parentOperand__fragment__messageSend = null;\n      EMoflonEdge combo__enclosingOperand__parentOperand = null;\n      EMoflonEdge line__coveredBy__messageSend = null;\n      EMoflonEdge operand__covered__line = null;\n      EMoflonEdge messageReceive__enclosingOperand__parentOperand = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge messageSend__enclosingOperand__parentOperand = null;\n      EMoflonEdge operand__guard__guard = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge parentOperand__fragment__combo = null;\n      EMoflonEdge message__sendEvent__messageSend = null;\n      EMoflonEdge messageSend__covered__line = null;\n      EMoflonEdge message__receiveEvent__messageReceive = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge line__coveredBy__parentCombo = null;\n      EMoflonEdge line__coveredBy__operand = null;\n      EMoflonEdge parentCombo__covered__line = null;\n      EMoflonEdge message__interaction__interaction = null;\n      EMoflonEdge combo__operand__operand = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge interaction__message__message = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge parentOperand__fragment__messageReceive = null;\n      EMoflonEdge messageReceive__message__message = null;\n      EMoflonEdge messageSend__message__message = null;\n      EMoflonEdge line__coveredBy__parentOperand = null;\n      EMoflonEdge parentOperand__covered__line = null;\n      EMoflonEdge guard__specification__spec = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object operand\n         operand = ModalSequenceDiagramFactory.eINSTANCE.createInteractionOperand();\n\n         // create object messageSend\n         messageSend = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object message\n         message = ModalSequenceDiagramFactory.eINSTANCE.createMessage();\n\n         // create object combo\n         combo = ModalSequenceDiagramFactory.eINSTANCE.createCombinedFragment();\n\n         // create object messageReceive\n         messageReceive = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object guard\n         guard = ModalSequenceDiagramFactory.eINSTANCE.createInteractionConstraint();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // create object spec\n         spec = ModalSequenceDiagramFactory.eINSTANCE.createLiteralString();\n\n         // assign attribute combo\n         combo.setInteractionOperator ((ModalSequenceDiagram.InteractionOperatorKind)csp.getValue(\"combo\",\"interactionOperator\"));\n         // assign attribute guard\n         guard.setName ((java.lang.String)csp.getValue(\"guard\",\"name\"));\n         // assign attribute spec\n         spec.setValue ((java.lang.String)csp.getValue(\"spec\",\"value\"));\n         // assign attribute message\n         message.setName ((java.lang.String)csp.getValue(\"message\",\"name\"));\n\n         // create link\n         parentOperand.getCovered().add(line);\n\n\n         // create link\n         operand.getCovered().add(line);\n\n\n         // create link\n         messageSend.getCovered().add(line);\n\n\n         // create link\n         parentCombo.getCovered().add(line);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageSend,message,\"message\");\n\n         // create link\n         message.setSendEvent( messageSend);\n\n\n         // create link\n         parentOperand.getFragment().add(messageSend);\n\n\n         // create link\n         combo.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         messageReceive.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageReceive,message,\"message\");\n\n         // create link\n         message.setReceiveEvent( messageReceive);\n\n\n         // create link\n         \tcombo.getOperand().add(operand); // add link\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         \toperand.setGuard(guard); // add link to one\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         \tguard.setSpecification(spec); // add link to one\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         interaction.getMessage().add(message);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"createdElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects packageDeclaration and alt \n         JavaSDM.ensure ( !packageDeclaration.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlow \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and alternative1ToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects message and flowToParentOperand \n         JavaSDM.ensure ( !message.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToParentOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToParentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects packageDeclaration and guard \n         JavaSDM.ensure ( !packageDeclaration.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects packageDeclaration and message \n         JavaSDM.ensure ( !packageDeclaration.equals (message) );\n\n         // check isomorphic binding between objects parentCombo and message \n         JavaSDM.ensure ( !parentCombo.equals (message) );\n\n         // check isomorphic binding between objects parentOperand and message \n         JavaSDM.ensure ( !parentOperand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and packageDeclaration \n         JavaSDM.ensure ( !parentCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and packageDeclaration \n         JavaSDM.ensure ( !parentOperand.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects spec and packageDeclaration \n         JavaSDM.ensure ( !spec.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToCombo and packageDeclaration \n         JavaSDM.ensure ( !stepToCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and packageDeclaration \n         JavaSDM.ensure ( !stepToMessage.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToMessage and parentCombo \n         JavaSDM.ensure ( !stepToMessage.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and parentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__messageSend\n         parentOperand__fragment__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__enclosingOperand__parentOperand\n         combo__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__messageSend\n         line__coveredBy__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__line\n         operand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__enclosingOperand__parentOperand\n         messageSend__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__guard__guard\n         operand__guard__guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __flow_steps_step\n         __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __alt_ref_altFlow\n         __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__combo\n         parentOperand__fragment__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__sendEvent__messageSend\n         message__sendEvent__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__covered__line\n         messageSend__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_actor_actor\n         __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_stepAlternative_alt\n         __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentCombo\n         line__coveredBy__parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__operand\n         line__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentCombo__covered__line\n         parentCombo__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__interaction__interaction\n         message__interaction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__operand__operand\n         combo__operand__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__message__message\n         interaction__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__message__message\n         messageReceive__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__message__message\n         messageSend__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentOperand\n         line__coveredBy__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__covered__line\n         parentOperand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object guard__specification__spec\n         guard__specification__spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltSysStepNFToComboRule\");\n         // assign attribute line__coveredBy__messageSend\n         line__coveredBy__messageSend.setName (\"coveredBy\");\n         // assign attribute messageSend__covered__line\n         messageSend__covered__line.setName (\"covered\");\n         // assign attribute parentOperand__fragment__messageSend\n         parentOperand__fragment__messageSend.setName (\"fragment\");\n         // assign attribute messageSend__enclosingOperand__parentOperand\n         messageSend__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive.setName (\"fragment\");\n         // assign attribute messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__parentOperand\n         line__coveredBy__parentOperand.setName (\"coveredBy\");\n         // assign attribute parentOperand__covered__line\n         parentOperand__covered__line.setName (\"covered\");\n         // assign attribute parentOperand__fragment__combo\n         parentOperand__fragment__combo.setName (\"fragment\");\n         // assign attribute combo__enclosingOperand__parentOperand\n         combo__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__parentCombo\n         line__coveredBy__parentCombo.setName (\"coveredBy\");\n         // assign attribute parentCombo__covered__line\n         parentCombo__covered__line.setName (\"covered\");\n         // assign attribute __step_stepAlternative_alt\n         __step_stepAlternative_alt.setName (\"stepAlternative\");\n         // assign attribute __alt_ref_altFlow\n         __alt_ref_altFlow.setName (\"ref\");\n         // assign attribute combo__operand__operand\n         combo__operand__operand.setName (\"operand\");\n         // assign attribute line__coveredBy__operand\n         line__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__line\n         operand__covered__line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute operand__guard__guard\n         operand__guard__guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute guard__specification__spec\n         guard__specification__spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute __flow_steps_step\n         __flow_steps_step.setName (\"steps\");\n         // assign attribute __step_actor_actor\n         __step_actor_actor.setName (\"actor\");\n         // assign attribute message__sendEvent__messageSend\n         message__sendEvent__messageSend.setName (\"sendEvent\");\n         // assign attribute message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive.setName (\"receiveEvent\");\n         // assign attribute message__interaction__interaction\n         message__interaction__interaction.setName (\"interaction\");\n         // assign attribute interaction__message__message\n         interaction__message__message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute messageSend__message__message\n         messageSend__message__message.setName (\"message\");\n         // assign attribute messageReceive__message__message\n         messageReceive__message__message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__guard__guard,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__flow_steps_step,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__alt_ref_altFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__sendEvent__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__receiveEvent__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_actor_actor,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_stepAlternative_alt,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentCombo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentCombo__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__interaction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__operand__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard__specification__spec,\"createdEdges\");\n\n         // create link\n         __step_actor_actor.setTrg( actor);\n\n\n         // create link\n         line__coveredBy__parentOperand.setSrc( line);\n\n\n         // create link\n         operand__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__parentCombo.setSrc( line);\n\n\n         // create link\n         line__coveredBy__operand.setSrc( line);\n\n\n         // create link\n         messageSend__covered__line.setTrg( line);\n\n\n         // create link\n         parentOperand__covered__line.setTrg( line);\n\n\n         // create link\n         parentCombo__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__messageSend.setSrc( line);\n\n\n         // create link\n         messageSend__covered__line.setSrc( messageSend);\n\n\n         // create link\n         line__coveredBy__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__enclosingOperand__parentOperand.setSrc( messageSend);\n\n\n         // create link\n         messageSend__message__message.setSrc( messageSend);\n\n\n         // create link\n         message__sendEvent__messageSend.setTrg( messageSend);\n\n\n         // create link\n         parentOperand__fragment__messageSend.setTrg( messageSend);\n\n\n         // create link\n         __flow_steps_step.setSrc( flow);\n\n\n         // create link\n         parentOperand__fragment__combo.setSrc( parentOperand);\n\n\n         // create link\n         combo__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__covered__line.setSrc( parentOperand);\n\n\n         // create link\n         messageSend__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         line__coveredBy__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageSend.setSrc( parentOperand);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         messageReceive__message__message.setSrc( messageReceive);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         combo__enclosingOperand__parentOperand.setSrc( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         parentOperand__fragment__combo.setTrg( combo);\n\n\n         // create link\n         combo__operand__operand.setSrc( combo);\n\n\n         // create link\n         line__coveredBy__parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         parentCombo__covered__line.setSrc( parentCombo);\n\n\n         // create link\n         __step_stepAlternative_alt.setSrc( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         __step_actor_actor.setSrc( step);\n\n\n         // create link\n         __flow_steps_step.setTrg( step);\n\n\n         // create link\n         __step_stepAlternative_alt.setTrg( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         __alt_ref_altFlow.setSrc( alt);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         operand__covered__line.setSrc( operand);\n\n\n         // create link\n         line__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         operand__guard__guard.setSrc( operand);\n\n\n         // create link\n         combo__operand__operand.setTrg( operand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         guard__specification__spec.setSrc( guard);\n\n\n         // create link\n         operand__guard__guard.setTrg( guard);\n\n\n         // create link\n         guard__specification__spec.setTrg( spec);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         __alt_ref_altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         message__sendEvent__messageSend.setSrc( message);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setSrc( message);\n\n\n         // create link\n         messageSend__message__message.setTrg( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         messageReceive__message__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setSrc( message);\n\n\n         // create link\n         interaction__message__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setTrg( interaction);\n\n\n         // create link\n         interaction__message__message.setSrc( interaction);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,actor,line,messageSend,flow,parentOperand,flowToParentOperand,messageReceive,combo,parentCombo,step,alt,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,interaction,stepToMessage,packageDeclaration);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Actor actor = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      PackageDeclaration packageDeclaration = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      EMoflonEdge __step_actor_actor = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      CSP csp = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterUseCaseToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterFlowToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltSysStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (match.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (match.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (match.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link source from flow to flowToParentOperand\n         fujaba__Success = false;\n\n         fujaba__IterFlowToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(flow,FlowToInteractionFragment.class,\"source\")).iterator ();\n\n         while ( fujaba__IterFlowToFlowToParentOperand.hasNext () )\n         {\n            try\n            {\n               flowToParentOperand = (FlowToInteractionFragment) fujaba__IterFlowToFlowToParentOperand.next ();\n\n               // check object flowToParentOperand is really bound\n               JavaSDM.ensure ( flowToParentOperand != null );\n               // bind object\n               _TmpObject = flowToParentOperand.getTarget ();\n\n               // ensure correct type and really bound of object parentOperand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               parentOperand = (InteractionOperand) _TmpObject;\n\n               // iterate to-many link source from useCase to useCaseToInteraction\n               fujaba__Success = false;\n\n               fujaba__IterUseCaseToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(useCase,UseCaseToInteraction.class,\"source\")).iterator ();\n\n               while ( fujaba__IterUseCaseToUseCaseToInteraction.hasNext () )\n               {\n                  try\n                  {\n                     useCaseToInteraction = (UseCaseToInteraction) fujaba__IterUseCaseToUseCaseToInteraction.next ();\n\n                     // check object useCaseToInteraction is really bound\n                     JavaSDM.ensure ( useCaseToInteraction != null );\n                     // bind object\n                     interaction = useCaseToInteraction.getTarget ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // story node \'find context\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object actor is really bound\n                        JavaSDM.ensure ( actor != null );\n                        // check object alt is really bound\n                        JavaSDM.ensure ( alt != null );\n                        // check object altFlow is really bound\n                        JavaSDM.ensure ( altFlow != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object flowToParentOperand is really bound\n                        JavaSDM.ensure ( flowToParentOperand != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object packageDeclaration is really bound\n                        JavaSDM.ensure ( packageDeclaration != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object step is really bound\n                        JavaSDM.ensure ( step != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check object useCaseToInteraction is really bound\n                        JavaSDM.ensure ( useCaseToInteraction != null );\n                        // check isomorphic binding between objects flow and altFlow \n                        JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                        // check link actor from step to actor\n                        JavaSDM.ensure (actor.equals (step.getActor ()\n                        ));\n\n                        // check link ref from alt to altFlow\n                        JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                        ));\n\n                        // check link actors from actor to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                        ));\n\n                        // check link flows from flow to useCase\n                        JavaSDM.ensure (useCase.equals (flow.eContainer()\n                        ));\n\n                        // bind object\n                        parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n\n                        // check if contained via correct reference\n                        JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                        // check link source from flowToParentOperand to flow\n                        JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                        ));\n\n                        // check link source from useCaseToInteraction to useCase\n                        JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                        ));\n\n                        // check link stepAlternative from alt to step\n                        JavaSDM.ensure (step.equals (alt.eContainer()\n                        ));\n\n                        // check link steps from step to flow\n                        JavaSDM.ensure (flow.equals (step.eContainer()\n                        ));\n\n                        // check link target from flowToParentOperand to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                        ));\n\n                        // check link target from useCaseToInteraction to interaction\n                        JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                        ));\n\n                        // check link useCases from useCase to packageDeclaration\n                        JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                        ));\n\n                        // iterate to-many link lifeline from interaction to line\n                        fujaba__Success = false;\n\n                        fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n                        while ( fujaba__IterInteractionToLine.hasNext () )\n                        {\n                           try\n                           {\n                              line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // create object __step_actor_actor\n                              __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flow_steps_step\n                              __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __step_stepAlternative_alt\n                              __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __alt_ref_altFlow\n                              __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow.setName (\"source\");\n                              // assign attribute __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand.setName (\"target\");\n                              // assign attribute __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand.setName (\"operand\");\n                              // assign attribute __step_stepAlternative_alt\n                              __step_stepAlternative_alt.setName (\"stepAlternative\");\n                              // assign attribute __alt_ref_altFlow\n                              __alt_ref_altFlow.setName (\"ref\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __flow_steps_step\n                              __flow_steps_step.setName (\"steps\");\n                              // assign attribute __step_actor_actor\n                              __step_actor_actor.setName (\"actor\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n                              // assign attribute __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor.setName (\"actors\");\n                              // assign attribute __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n                              // create link\n                              __step_actor_actor.setTrg( actor);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                              // create link\n                              __flow_steps_step.setSrc( flow);\n\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                              // create link\n                              __flow_steps_step.setTrg( step);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setSrc( step);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(step);\n\n\n                              // create link\n                              __step_actor_actor.setSrc( step);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(alt);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setTrg( alt);\n\n\n                              // create link\n                              __alt_ref_altFlow.setSrc( alt);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(altFlow);\n\n\n                              // create link\n                              __alt_ref_altFlow.setTrg( altFlow);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_actor_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__alt_ref_altFlow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_stepAlternative_alt,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,actor,line,flow,parentOperand,flowToParentOperand,parentCombo,step,alt,altFlow,useCase,useCaseToInteraction,interaction,packageDeclaration));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"AltSysStepNFToComboRule\");\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n\n                                    // create link\n                                    ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n                        }\n                        JavaSDM.ensure (fujaba__Success);\n\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"actor\", actor);\nmatch.registerObject(\"flow\", flow);\nmatch.registerObject(\"step\", step);\nmatch.registerObject(\"alt\", alt);\nmatch.registerObject(\"altFlow\", altFlow);\nmatch.registerObject(\"useCase\", useCase);\nmatch.registerObject(\"packageDeclaration\", packageDeclaration);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, Actor actor, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"system\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_actor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"actor.type\", true, csp);\r\nvar_actor_type.setValue(actor.getType());\r\nvar_actor_type.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqActorType eqActorType = new EqActorType();\r\n\r\ncsp.getConstraints().add(eqActorType);\r\n\r\n// Solve CSP\r\neqActorType.setRuleName(\"\");\r\neqActorType.solve(var_actor_type,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, Actor actor, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", true, csp);\r\nvar_altFlow_name.setValue(altFlow.getName());\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", true, csp);\r\nvar_alt_condition.setValue(alt.getCondition());\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", true, csp);\r\nvar_step_name.setValue(step.getName());\r\nvar_step_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", csp);\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", csp);\r\nvar_spec_value.setType(\"\");\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", csp);\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", csp);\r\nvar_message_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();EqInterOperKind eqInterOperKind = new EqInterOperKind();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eqInterOperKind);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"altFlow\",altFlow);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			Actor actor, Lifeline line, NamedFlow flow,
			InteractionOperand parentOperand,
			FlowToInteractionFragment flowToParentOperand,
			CombinedFragment parentCombo, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, UseCaseToInteraction useCaseToInteraction,
			Interaction interaction, PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject actor,
			EObject line, EObject messageSend, EObject flow,
			EObject parentOperand, EObject flowToParentOperand,
			EObject messageReceive, EObject combo, EObject parentCombo,
			EObject step, EObject alt, EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message, EObject interaction,
			EObject stepToMessage, EObject packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"step\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getNormalStep()) && match.getObject(\"alt\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlowAlternative()) && match.getObject(\"altFlow\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __messageSend_covered_line = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __line_coveredBy_messageSend = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_guard_guard\n            __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_message_message\n            __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_enclosingOperand_parentOperand\n            __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_enclosingOperand_parentOperand\n            __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_interaction_interaction\n            __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_operand\n            __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_message_message\n            __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_covered_line\n            __messageSend_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentCombo_covered_line\n            __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_combo\n            __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_sendEvent_messageSend\n            __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_operand_operand\n            __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __guard_specification_spec\n            __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_messageSend\n            __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_line\n            __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_messageSend\n            __line_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_message_message\n            __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_covered_line\n            __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __line_coveredBy_messageSend\n            __line_coveredBy_messageSend.setName (\"coveredBy\");\n            // assign attribute __messageSend_covered_line\n            __messageSend_covered_line.setName (\"covered\");\n            // assign attribute __parentOperand_fragment_messageSend\n            __parentOperand_fragment_messageSend.setName (\"fragment\");\n            // assign attribute __messageSend_enclosingOperand_parentOperand\n            __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive.setName (\"fragment\");\n            // assign attribute __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand.setName (\"coveredBy\");\n            // assign attribute __parentOperand_covered_line\n            __parentOperand_covered_line.setName (\"covered\");\n            // assign attribute __parentOperand_fragment_combo\n            __parentOperand_fragment_combo.setName (\"fragment\");\n            // assign attribute __combo_enclosingOperand_parentOperand\n            __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo.setName (\"coveredBy\");\n            // assign attribute __parentCombo_covered_line\n            __parentCombo_covered_line.setName (\"covered\");\n            // assign attribute __combo_operand_operand\n            __combo_operand_operand.setName (\"operand\");\n            // assign attribute __line_coveredBy_operand\n            __line_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_line\n            __operand_covered_line.setName (\"covered\");\n            // assign attribute __operand_guard_guard\n            __operand_guard_guard.setName (\"guard\");\n            // assign attribute __guard_specification_spec\n            __guard_specification_spec.setName (\"specification\");\n            // assign attribute __message_sendEvent_messageSend\n            __message_sendEvent_messageSend.setName (\"sendEvent\");\n            // assign attribute __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n            // assign attribute __message_interaction_interaction\n            __message_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_message_message\n            __interaction_message_message.setName (\"message\");\n            // assign attribute __messageSend_message_message\n            __messageSend_message_message.setName (\"message\");\n            // assign attribute __messageReceive_message_message\n            __messageReceive_message_message.setName (\"message\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentCombo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_guard_guard,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageReceive,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,combo,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_interaction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,operand,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,message,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageSend,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,guard,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,spec,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_sendEvent_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_operand_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_receiveEvent_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__guard_specification_spec,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            __line_coveredBy_parentCombo.setSrc( line);\n\n\n            // create link\n            __parentCombo_covered_line.setTrg( line);\n\n\n            // create link\n            __messageSend_covered_line.setTrg( line);\n\n\n            // create link\n            __operand_covered_line.setTrg( line);\n\n\n            // create link\n            __parentOperand_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_operand.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_messageSend.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setSrc( line);\n\n\n            // create link\n            __messageSend_covered_line.setSrc( messageSend);\n\n\n            // create link\n            __messageSend_message_message.setSrc( messageSend);\n\n\n            // create link\n            __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n            // create link\n            __line_coveredBy_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentOperand_covered_line.setSrc( parentOperand);\n\n\n            // create link\n            __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_message_message.setSrc( messageReceive);\n\n\n            // create link\n            __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n            // create link\n            __combo_operand_operand.setSrc( combo);\n\n\n            // create link\n            __parentOperand_fragment_combo.setTrg( combo);\n\n\n            // create link\n            __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n            // create link\n            __parentCombo_covered_line.setSrc( parentCombo);\n\n\n            // create link\n            __operand_covered_line.setSrc( operand);\n\n\n            // create link\n            __line_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __combo_operand_operand.setTrg( operand);\n\n\n            // create link\n            __operand_guard_guard.setSrc( operand);\n\n\n            // create link\n            __operand_guard_guard.setTrg( guard);\n\n\n            // create link\n            __guard_specification_spec.setSrc( guard);\n\n\n            // create link\n            __guard_specification_spec.setTrg( spec);\n\n\n            // create link\n            __message_sendEvent_messageSend.setSrc( message);\n\n\n            // create link\n            __message_interaction_interaction.setSrc( message);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setSrc( message);\n\n\n            // create link\n            __messageSend_message_message.setTrg( message);\n\n\n            // create link\n            __interaction_message_message.setTrg( message);\n\n\n            // create link\n            __messageReceive_message_message.setTrg( message);\n\n\n            // create link\n            __message_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __interaction_message_message.setSrc( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __interaction_lifeline_line\n            __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_interaction_interaction\n            __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand.setName (\"operand\");\n            // assign attribute __line_interaction_interaction\n            __line_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_lifeline_line\n            __interaction_lifeline_line.setName (\"lifeline\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentOperand,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,line,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_lifeline_line,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentCombo,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_interaction_interaction,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,interaction,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_operand_parentOperand,\"contextEdges\");\n\n            // create link\n            __interaction_lifeline_line.setTrg( line);\n\n\n            // create link\n            __line_interaction_interaction.setSrc( line);\n\n\n            // create link\n            __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n            // create link\n            __interaction_lifeline_line.setSrc( interaction);\n\n\n            // create link\n            __line_interaction_interaction.setTrg( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match, Lifeline line,
			MessageOccurrenceSpecification messageSend,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageReceive,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      CombinedFragment combo = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      PackageDeclaration packageDeclaration = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      NormalStep step = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      AlternativeFlowAlternative alt = null;\n      NormalStepToMessage stepToMessage = null;\n      AlternativeFlow altFlow = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge __line_coveredBy_messageSend = null;\n      EMoflonEdge flow__steps__step = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge step__actor__actor = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge step__stepAlternative__alt = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge alt__ref__altFlow = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge __messageSend_covered_line = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object step\n         step = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object alt\n         alt = UseCaseDSLFactory.eINSTANCE.createAlternativeFlowAlternative();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object altFlow\n         altFlow = UseCaseDSLFactory.eINSTANCE.createAlternativeFlow();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // assign attribute step\n         step.setName ((java.lang.String)csp.getValue(\"step\",\"name\"));\n         // assign attribute alt\n         alt.setCondition ((java.lang.String)csp.getValue(\"alt\",\"condition\"));\n         // assign attribute altFlow\n         altFlow.setName ((java.lang.String)csp.getValue(\"altFlow\",\"name\"));\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         step.setActor( actor);\n\n\n         // create link\n         \tflow.getSteps().add(step); // add link\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         \tstep.getStepAlternative().add(alt); // add link\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(alt,altFlow,\"ref\");\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects packageDeclaration and alt \n         JavaSDM.ensure ( !packageDeclaration.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlow \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and alternative1ToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects message and flowToParentOperand \n         JavaSDM.ensure ( !message.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToParentOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToParentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects packageDeclaration and guard \n         JavaSDM.ensure ( !packageDeclaration.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects packageDeclaration and message \n         JavaSDM.ensure ( !packageDeclaration.equals (message) );\n\n         // check isomorphic binding between objects parentCombo and message \n         JavaSDM.ensure ( !parentCombo.equals (message) );\n\n         // check isomorphic binding between objects parentOperand and message \n         JavaSDM.ensure ( !parentOperand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and packageDeclaration \n         JavaSDM.ensure ( !parentCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and packageDeclaration \n         JavaSDM.ensure ( !parentOperand.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects spec and packageDeclaration \n         JavaSDM.ensure ( !spec.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToCombo and packageDeclaration \n         JavaSDM.ensure ( !stepToCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and packageDeclaration \n         JavaSDM.ensure ( !stepToMessage.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToMessage and parentCombo \n         JavaSDM.ensure ( !stepToMessage.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and parentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object __interaction_message_message\n         __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_message_message\n         __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_messageSend\n         __line_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object flow__steps__step\n         flow__steps__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_sendEvent_messageSend\n         __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_guard_guard\n         __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__actor__actor\n         step__actor__actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentCombo_covered_line\n         __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__stepAlternative__alt\n         step__stepAlternative__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __guard_specification_spec\n         __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_line\n         __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_enclosingOperand_parentOperand\n         __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_message_message\n         __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_operand_operand\n         __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_covered_line\n         __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_operand\n         __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alt__ref__altFlow\n         alt__ref__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_covered_line\n         __messageSend_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_interaction_interaction\n         __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_enclosingOperand_parentOperand\n         __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_combo\n         __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_messageSend\n         __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltSysStepNFToComboRule\");\n         // assign attribute __line_coveredBy_messageSend\n         __line_coveredBy_messageSend.setName (\"coveredBy\");\n         // assign attribute __messageSend_covered_line\n         __messageSend_covered_line.setName (\"covered\");\n         // assign attribute __parentOperand_fragment_messageSend\n         __parentOperand_fragment_messageSend.setName (\"fragment\");\n         // assign attribute __messageSend_enclosingOperand_parentOperand\n         __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive.setName (\"fragment\");\n         // assign attribute __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand.setName (\"coveredBy\");\n         // assign attribute __parentOperand_covered_line\n         __parentOperand_covered_line.setName (\"covered\");\n         // assign attribute __parentOperand_fragment_combo\n         __parentOperand_fragment_combo.setName (\"fragment\");\n         // assign attribute __combo_enclosingOperand_parentOperand\n         __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo.setName (\"coveredBy\");\n         // assign attribute __parentCombo_covered_line\n         __parentCombo_covered_line.setName (\"covered\");\n         // assign attribute step__stepAlternative__alt\n         step__stepAlternative__alt.setName (\"stepAlternative\");\n         // assign attribute alt__ref__altFlow\n         alt__ref__altFlow.setName (\"ref\");\n         // assign attribute __combo_operand_operand\n         __combo_operand_operand.setName (\"operand\");\n         // assign attribute __line_coveredBy_operand\n         __line_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_line\n         __operand_covered_line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute __operand_guard_guard\n         __operand_guard_guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute __guard_specification_spec\n         __guard_specification_spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute flow__steps__step\n         flow__steps__step.setName (\"steps\");\n         // assign attribute step__actor__actor\n         step__actor__actor.setName (\"actor\");\n         // assign attribute __message_sendEvent_messageSend\n         __message_sendEvent_messageSend.setName (\"sendEvent\");\n         // assign attribute __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n         // assign attribute __message_interaction_interaction\n         __message_interaction_interaction.setName (\"interaction\");\n         // assign attribute __interaction_message_message\n         __interaction_message_message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute __messageSend_message_message\n         __messageSend_message_message.setName (\"message\");\n         // assign attribute __messageReceive_message_message\n         __messageReceive_message_message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,flow__steps__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_sendEvent_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_guard_guard,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__actor__actor,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentCombo_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__stepAlternative__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__guard_specification_spec,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentCombo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_operand_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt__ref__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_interaction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_receiveEvent_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_messageSend,\"translatedEdges\");\n\n         // create link\n         step__actor__actor.setTrg( actor);\n\n\n         // create link\n         __parentOperand_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_operand.setSrc( line);\n\n\n         // create link\n         __parentCombo_covered_line.setTrg( line);\n\n\n         // create link\n         __messageSend_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setSrc( line);\n\n\n         // create link\n         __operand_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_messageSend.setSrc( line);\n\n\n         // create link\n         __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageSend_covered_line.setSrc( messageSend);\n\n\n         // create link\n         __messageSend_message_message.setSrc( messageSend);\n\n\n         // create link\n         __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n         // create link\n         __line_coveredBy_messageSend.setTrg( messageSend);\n\n\n         // create link\n         flow__steps__step.setSrc( flow);\n\n\n         // create link\n         __parentOperand_covered_line.setSrc( parentOperand);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __messageReceive_message_message.setSrc( messageReceive);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __combo_operand_operand.setSrc( combo);\n\n\n         // create link\n         __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n         // create link\n         __parentOperand_fragment_combo.setTrg( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         __parentCombo_covered_line.setSrc( parentCombo);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         flow__steps__step.setTrg( step);\n\n\n         // create link\n         step__actor__actor.setSrc( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         step__stepAlternative__alt.setSrc( step);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         alt__ref__altFlow.setSrc( alt);\n\n\n         // create link\n         step__stepAlternative__alt.setTrg( alt);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         __combo_operand_operand.setTrg( operand);\n\n\n         // create link\n         __operand_covered_line.setSrc( operand);\n\n\n         // create link\n         __line_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         __operand_guard_guard.setSrc( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         __guard_specification_spec.setSrc( guard);\n\n\n         // create link\n         __operand_guard_guard.setTrg( guard);\n\n\n         // create link\n         __guard_specification_spec.setTrg( spec);\n\n\n         // create link\n         alt__ref__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setSrc( message);\n\n\n         // create link\n         __message_sendEvent_messageSend.setSrc( message);\n\n\n         // create link\n         __messageReceive_message_message.setTrg( message);\n\n\n         // create link\n         __message_interaction_interaction.setSrc( message);\n\n\n         // create link\n         __messageSend_message_message.setTrg( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         __interaction_message_message.setTrg( message);\n\n\n         // create link\n         __interaction_message_message.setSrc( interaction);\n\n\n         // create link\n         __message_interaction_interaction.setTrg( interaction);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,actor,line,messageSend,flow,parentOperand,flowToParentOperand,messageReceive,combo,parentCombo,step,alt,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,interaction,stepToMessage,packageDeclaration);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __line_coveredBy_messageSend = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __messageSend_covered_line = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      CSP csp = null;\n      Iterator fujaba__IterPackageDeclarationToActor = null;\n      Actor actor = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterInteractionToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      NamedFlow flow = null;\n      Iterator fujaba__IterParentOperandToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltSysStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (match.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (match.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (match.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (match.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link target from parentOperand to flowToParentOperand\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,FlowToInteractionFragment.class,\"target\")).iterator ();\n\n         while ( fujaba__IterParentOperandToFlowToParentOperand.hasNext () )\n         {\n            try\n            {\n               flowToParentOperand = (FlowToInteractionFragment) fujaba__IterParentOperandToFlowToParentOperand.next ();\n\n               // check object flowToParentOperand is really bound\n               JavaSDM.ensure ( flowToParentOperand != null );\n               // bind object\n               _TmpObject = flowToParentOperand.getSource ();\n\n               // ensure correct type and really bound of object flow\n               JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n               flow = (NamedFlow) _TmpObject;\n\n               // iterate to-many link target from interaction to useCaseToInteraction\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,UseCaseToInteraction.class,\"target\")).iterator ();\n\n               while ( fujaba__IterInteractionToUseCaseToInteraction.hasNext () )\n               {\n                  try\n                  {\n                     useCaseToInteraction = (UseCaseToInteraction) fujaba__IterInteractionToUseCaseToInteraction.next ();\n\n                     // check object useCaseToInteraction is really bound\n                     JavaSDM.ensure ( useCaseToInteraction != null );\n                     // bind object\n                     useCase = useCaseToInteraction.getSource ();\n\n                     // check object useCase is really bound\n                     JavaSDM.ensure ( useCase != null );\n\n                     // story node \'find context\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object flow is really bound\n                        JavaSDM.ensure ( flow != null );\n                        // check object flowToParentOperand is really bound\n                        JavaSDM.ensure ( flowToParentOperand != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check object useCase is really bound\n                        JavaSDM.ensure ( useCase != null );\n                        // check object useCaseToInteraction is really bound\n                        JavaSDM.ensure ( useCaseToInteraction != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link flows from flow to useCase\n                        JavaSDM.ensure (useCase.equals (flow.eContainer()\n                        ));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link source from flowToParentOperand to flow\n                        JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                        ));\n\n                        // check link source from useCaseToInteraction to useCase\n                        JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                        ));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link target from flowToParentOperand to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                        ));\n\n                        // check link target from useCaseToInteraction to interaction\n                        JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                        ));\n\n                        // bind object\n                        packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n                        // check object packageDeclaration is really bound\n                        JavaSDM.ensure ( packageDeclaration != null );\n\n                        // check if contained via correct reference\n                        JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // iterate to-many link actors from packageDeclaration to actor\n                        fujaba__Success = false;\n\n                        fujaba__IterPackageDeclarationToActor = new ArrayList(packageDeclaration.getActors()).iterator ();\n\n                        while ( fujaba__IterPackageDeclarationToActor.hasNext () )\n                        {\n                           try\n                           {\n                              actor = (Actor) fujaba__IterPackageDeclarationToActor.next ();\n\n                              // check object actor is really bound\n                              JavaSDM.ensure ( actor != null );\n                              // create object __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __line_coveredBy_parentCombo\n                              __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_covered_line\n                              __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_messageSend\n                              __line_coveredBy_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_covered_line\n                              __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_covered_line\n                              __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_operand\n                              __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_covered_line\n                              __messageSend_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_parentOperand\n                              __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_enclosingOperand_parentOperand\n                              __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_fragment_messageSend\n                              __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_message_message\n                              __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_fragment_combo\n                              __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_fragment_messageReceive\n                              __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __combo_enclosingOperand_parentOperand\n                              __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_enclosingOperand_parentOperand\n                              __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_message_message\n                              __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __combo_operand_operand\n                              __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_guard_guard\n                              __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __guard_specification_spec\n                              __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_message_message\n                              __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_interaction_interaction\n                              __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __line_coveredBy_messageSend\n                              __line_coveredBy_messageSend.setName (\"coveredBy\");\n                              // assign attribute __messageSend_covered_line\n                              __messageSend_covered_line.setName (\"covered\");\n                              // assign attribute __parentOperand_fragment_messageSend\n                              __parentOperand_fragment_messageSend.setName (\"fragment\");\n                              // assign attribute __messageSend_enclosingOperand_parentOperand\n                              __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                              // assign attribute __parentOperand_fragment_messageReceive\n                              __parentOperand_fragment_messageReceive.setName (\"fragment\");\n                              // assign attribute __messageReceive_enclosingOperand_parentOperand\n                              __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                              // assign attribute __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow.setName (\"source\");\n                              // assign attribute __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand.setName (\"target\");\n                              // assign attribute __line_coveredBy_parentOperand\n                              __line_coveredBy_parentOperand.setName (\"coveredBy\");\n                              // assign attribute __parentOperand_covered_line\n                              __parentOperand_covered_line.setName (\"covered\");\n                              // assign attribute __parentOperand_fragment_combo\n                              __parentOperand_fragment_combo.setName (\"fragment\");\n                              // assign attribute __combo_enclosingOperand_parentOperand\n                              __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                              // assign attribute __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand.setName (\"operand\");\n                              // assign attribute __line_coveredBy_parentCombo\n                              __line_coveredBy_parentCombo.setName (\"coveredBy\");\n                              // assign attribute __parentCombo_covered_line\n                              __parentCombo_covered_line.setName (\"covered\");\n                              // assign attribute __combo_operand_operand\n                              __combo_operand_operand.setName (\"operand\");\n                              // assign attribute __line_coveredBy_operand\n                              __line_coveredBy_operand.setName (\"coveredBy\");\n                              // assign attribute __operand_covered_line\n                              __operand_covered_line.setName (\"covered\");\n                              // assign attribute __operand_guard_guard\n                              __operand_guard_guard.setName (\"guard\");\n                              // assign attribute __guard_specification_spec\n                              __guard_specification_spec.setName (\"specification\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend.setName (\"sendEvent\");\n                              // assign attribute __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n                              // assign attribute __message_interaction_interaction\n                              __message_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_message_message\n                              __interaction_message_message.setName (\"message\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n                              // assign attribute __messageSend_message_message\n                              __messageSend_message_message.setName (\"message\");\n                              // assign attribute __messageReceive_message_message\n                              __messageReceive_message_message.setName (\"message\");\n                              // assign attribute __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor.setName (\"actors\");\n                              // assign attribute __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n                              // create link\n                              __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __line_coveredBy_parentCombo.setSrc( line);\n\n\n                              // create link\n                              __parentCombo_covered_line.setTrg( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              __line_coveredBy_messageSend.setSrc( line);\n\n\n                              // create link\n                              __parentOperand_covered_line.setTrg( line);\n\n\n                              // create link\n                              __operand_covered_line.setTrg( line);\n\n\n                              // create link\n                              __line_coveredBy_operand.setSrc( line);\n\n\n                              // create link\n                              __messageSend_covered_line.setTrg( line);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              __line_coveredBy_parentOperand.setSrc( line);\n\n\n                              // create link\n                              __line_coveredBy_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageSend);\n\n\n                              // create link\n                              __messageSend_covered_line.setSrc( messageSend);\n\n\n                              // create link\n                              __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n                              // create link\n                              __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              __messageSend_message_message.setSrc( messageSend);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                              // create link\n                              __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n                              // create link\n                              __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n                              // create link\n                              __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                              // create link\n                              __parentOperand_covered_line.setSrc( parentOperand);\n\n\n                              // create link\n                              __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageReceive);\n\n\n                              // create link\n                              __messageReceive_message_message.setSrc( messageReceive);\n\n\n                              // create link\n                              __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              __combo_operand_operand.setSrc( combo);\n\n\n                              // create link\n                              __parentOperand_fragment_combo.setTrg( combo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(combo);\n\n\n                              // create link\n                              __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n                              // create link\n                              __parentCombo_covered_line.setSrc( parentCombo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                              // create link\n                              __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n                              // create link\n                              __operand_covered_line.setSrc( operand);\n\n\n                              // create link\n                              __line_coveredBy_operand.setTrg( operand);\n\n\n                              // create link\n                              __operand_guard_guard.setSrc( operand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(operand);\n\n\n                              // create link\n                              __combo_operand_operand.setTrg( operand);\n\n\n                              // create link\n                              __operand_guard_guard.setTrg( guard);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(guard);\n\n\n                              // create link\n                              __guard_specification_spec.setSrc( guard);\n\n\n                              // create link\n                              __guard_specification_spec.setTrg( spec);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(spec);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __interaction_message_message.setTrg( message);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setSrc( message);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setSrc( message);\n\n\n                              // create link\n                              __message_interaction_interaction.setSrc( message);\n\n\n                              // create link\n                              __messageSend_message_message.setTrg( message);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(message);\n\n\n                              // create link\n                              __messageReceive_message_message.setTrg( message);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              __interaction_message_message.setSrc( interaction);\n\n\n                              // create link\n                              __message_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__guard_specification_spec,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_enclosingOperand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_combo,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_sendEvent_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_operand_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_guard_guard,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_enclosingOperand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_enclosingOperand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_receiveEvent_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentCombo,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,actor,line,messageSend,flow,parentOperand,flowToParentOperand,messageReceive,combo,parentCombo,operand,guard,spec,useCase,useCaseToInteraction,message,interaction,packageDeclaration));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"AltSysStepNFToComboRule\");\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n\n                                    // create link\n                                    ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n                        }\n                        JavaSDM.ensure (fujaba__Success);\n\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"line\", line);\nmatch.registerObject(\"messageSend\", messageSend);\nmatch.registerObject(\"parentOperand\", parentOperand);\nmatch.registerObject(\"messageReceive\", messageReceive);\nmatch.registerObject(\"combo\", combo);\nmatch.registerObject(\"parentCombo\", parentCombo);\nmatch.registerObject(\"operand\", operand);\nmatch.registerObject(\"guard\", guard);\nmatch.registerObject(\"spec\", spec);\nmatch.registerObject(\"message\", message);\nmatch.registerObject(\"interaction\", interaction);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match, Lifeline line,
			MessageOccurrenceSpecification messageSend,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageReceive,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", true, csp);\r\nvar_combo_interactionOperator.setValue(combo.getInteractionOperator());\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqInterOperKind eqInterOperKind = new EqInterOperKind();\r\n\r\ncsp.getConstraints().add(eqInterOperKind);\r\n\r\n// Solve CSP\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match, Lifeline line,
			MessageOccurrenceSpecification messageSend,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageReceive,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"system\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_actor_type = CSPFactoryHelper.eINSTANCE.createVariable(\"actor.type\", true, csp);\r\nvar_actor_type.setValue(actor.getType());\r\nvar_actor_type.setType(\"EObject\");\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", true, csp);\r\nvar_guard_name.setValue(guard.getName());\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", true, csp);\r\nvar_spec_value.setValue(spec.getValue());\r\nvar_spec_value.setType(\"\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", true, csp);\r\nvar_message_name.setValue(message.getName());\r\nvar_message_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", csp);\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", csp);\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", csp);\r\nvar_step_name.setType(\"\");\r\n\r\n// Create constraints\r\nEqActorType eqActorType = new EqActorType();Eq eq = new Eq();Eq eq_0 = new Eq();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eqActorType);\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neqActorType.setRuleName(\"\");\r\neqActorType.solve(var_actor_type,literal0);\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"messageSend\",messageSend);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"messageReceive\",messageReceive);\r\nisApplicableMatch.registerObject(\"combo\",combo);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"operand\",operand);\r\nisApplicableMatch.registerObject(\"guard\",guard);\r\nisApplicableMatch.registerObject(\"spec\",spec);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"message\",message);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			Actor actor, Lifeline line,
			MessageOccurrenceSpecification messageSend, NamedFlow flow,
			InteractionOperand parentOperand,
			FlowToInteractionFragment flowToParentOperand,
			MessageOccurrenceSpecification messageReceive,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction, Message message,
			Interaction interaction, PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult, EObject actor,
			EObject line, EObject messageSend, EObject flow,
			EObject parentOperand, EObject flowToParentOperand,
			EObject messageReceive, EObject combo, EObject parentCombo,
			EObject step, EObject alt, EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message, EObject interaction,
			EObject stepToMessage, EObject packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"messageSend\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"messageReceive\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"combo\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getCombinedFragment()) && match.getObject(\"operand\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionOperand()) && match.getObject(\"guard\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionConstraint()) && match.getObject(\"spec\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getLiteralString()) && match.getObject(\"message\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessage());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_230053 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_748933 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_957829 = null;\n      Interaction __DEC_operand_enclosingInteraction_700258 = null;\n      InteractionOperand __DEC_combo_fragment_43464 = null;\n      InteractionOperand __DEC_messageReceive_fragment_427197 = null;\n      InteractionOperand __DEC_messageSend_fragment_580767 = null;\n      InteractionOperand __DEC_operand_fragment_740009 = null;\n      Constraint __DEC_spec_specification_434883 = null;\n      InteractionOperand __DEC_guard_guard_893276 = null;\n      CombinedFragment __DEC_operand_operand_668736 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_25753 = null;\n      Message __DEC_messageReceive_receiveEvent_25753 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_523580 = null;\n      Message __DEC_messageSend_receiveEvent_523580 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_600701 = null;\n      Message __DEC_messageReceive_sendEvent_600701 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_589719 = null;\n      Message __DEC_messageSend_sendEvent_589719 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_763876 = null;\n      MessageEnd __DEC_message_message_763876 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link message from message to interaction\n         JavaSDM.ensure (interaction.equals (message.getInteraction ()\n         ));\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link covered from messageSend to line\n         JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to parentOperand\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n               // ensure correct type and really bound of object parentOperand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               parentOperand = (InteractionOperand) _TmpObject;\n               // check link fragment from messageReceive to parentOperand\n               JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n               ));\n\n               // check link fragment from messageSend to parentOperand\n               JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n               ));\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_230053 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_230053 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_230053 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_230053 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_230053.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_748933 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_748933 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_748933 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_748933 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_748933.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_957829 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_957829 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_957829 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_957829 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_957829.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_700258 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_700258 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_700258 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_700258 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_700258.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_43464 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_43464 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_43464 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_43464 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_43464.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_43464 and parentOperand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_43464.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_427197 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_427197 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_427197 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_427197 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_427197.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_427197 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_427197.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_580767 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_580767 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_580767 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_580767 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_580767.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_580767 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_580767.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_740009 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_740009 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_740009 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_740009 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_740009.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_740009 and parentOperand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_740009.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_434883 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_434883 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_434883 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_434883.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_434883 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_434883.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_893276 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_893276 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_893276 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_893276.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_893276 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_893276.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_guard_guard_893276 and parentOperand \n                           JavaSDM.ensure ( !__DEC_guard_guard_893276.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_668736 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_668736 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_668736 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_668736.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_668736 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_668736.equals (combo) );\n\n                           // check isomorphic binding between objects __DEC_operand_operand_668736 and parentCombo \n                           JavaSDM.ensure ( !__DEC_operand_operand_668736.equals (parentCombo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_25753\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_25753 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_25753.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_25753 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_25753.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_25753 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_25753 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_25753 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_25753.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_523580\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_523580 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_523580.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_523580 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_523580.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_523580 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_523580 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_523580 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_523580.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_600701\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_600701 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_600701.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_600701 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_600701.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_600701 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_600701 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_600701 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_600701.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_589719\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_589719 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_589719.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_589719 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_589719.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_589719 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_589719 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_589719 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_589719.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_763876\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_763876 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_763876.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_763876 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_763876.next ();\n\n                                 // check object __DEC_message_message_763876 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_763876 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_763876 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_763876.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_763876 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_763876.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_coveredBy is really bound\n                        JavaSDM.ensure ( _edge_coveredBy != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to parentOperand\n                        JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link guard from parentOperand to guard\n                        JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link operand from operand to parentCombo\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                        .contains (parentCombo)));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_coveredBy to line\n                        JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                        ));\n\n                        // check link trg from _edge_coveredBy to messageSend\n                        JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_227(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_662424 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_748685 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_729858 = null;\n      Interaction __DEC_operand_enclosingInteraction_168580 = null;\n      InteractionOperand __DEC_combo_fragment_236023 = null;\n      InteractionOperand __DEC_messageReceive_fragment_669726 = null;\n      InteractionOperand __DEC_messageSend_fragment_188672 = null;\n      InteractionOperand __DEC_operand_fragment_943731 = null;\n      Constraint __DEC_spec_specification_509923 = null;\n      InteractionOperand __DEC_guard_guard_548047 = null;\n      CombinedFragment __DEC_operand_operand_654960 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_797169 = null;\n      Message __DEC_messageReceive_receiveEvent_797169 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_245579 = null;\n      Message __DEC_messageSend_receiveEvent_245579 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_454333 = null;\n      Message __DEC_messageReceive_sendEvent_454333 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_67865 = null;\n      Message __DEC_messageSend_sendEvent_67865 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_699496 = null;\n      MessageEnd __DEC_message_message_699496 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link message from message to interaction\n         JavaSDM.ensure (interaction.equals (message.getInteraction ()\n         ));\n\n         // check link covered from messageSend to line\n         JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n         // check link covered from parentOperand to line\n         JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to parentCombo\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n               // ensure correct type and really bound of object parentCombo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               parentCombo = (CombinedFragment) _TmpObject;\n               // check link operand from parentOperand to parentCombo\n               JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n               ));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link src from line to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                     while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link trg from _edge_coveredBy to messageSend\n                           JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_662424 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_662424 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_662424 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_662424 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_662424.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_748685 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_748685 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_748685 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_748685 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_748685.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_729858 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_729858 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_729858 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_729858 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_729858.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_168580 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_168580 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_168580 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_168580 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_168580.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_236023 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_236023 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_236023 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_236023 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_236023.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_236023 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_236023.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_669726 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_669726 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_669726 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_669726 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_669726.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_669726 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_669726.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_188672 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_188672 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_188672 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_188672 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_188672.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_188672 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_188672.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_943731 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_943731 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_943731 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_943731 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_943731.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_943731 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_943731.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_509923 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_509923 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_509923 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_509923.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_509923 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_509923.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_548047 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_548047 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_548047 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_548047.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_548047 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_548047.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_548047 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_548047.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_654960 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_654960 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_654960 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_654960.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_654960 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_654960.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_654960 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_654960.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_797169\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_797169 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_797169.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_797169 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_797169.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_797169 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_797169 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_797169 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_797169.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_245579\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_245579 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_245579.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_245579 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_245579.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_245579 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_245579 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_245579 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_245579.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_454333\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_454333 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_454333.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_454333 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_454333.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_454333 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_454333 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_454333 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_454333.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_67865\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_67865 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_67865.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_67865 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_67865.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_67865 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_67865 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_67865 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_67865.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_699496\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_699496 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_699496.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_699496 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_699496.next ();\n\n                                       // check object __DEC_message_message_699496 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_699496 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_699496 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_699496.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_699496 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_699496.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_covered is really bound\n                              JavaSDM.ensure ( _edge_covered != null );\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                              JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_covered to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_covered.getSrc ()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_covered to line\n                              JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_228(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_784958 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_870144 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_549586 = null;\n      Interaction __DEC_operand_enclosingInteraction_755307 = null;\n      InteractionOperand __DEC_combo_fragment_539922 = null;\n      InteractionOperand __DEC_messageReceive_fragment_531065 = null;\n      InteractionOperand __DEC_messageSend_fragment_490510 = null;\n      InteractionOperand __DEC_operand_fragment_515849 = null;\n      Constraint __DEC_spec_specification_45429 = null;\n      InteractionOperand __DEC_guard_guard_77890 = null;\n      CombinedFragment __DEC_operand_operand_643337 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_545075 = null;\n      Message __DEC_messageReceive_receiveEvent_545075 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_41254 = null;\n      Message __DEC_messageSend_receiveEvent_41254 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_59367 = null;\n      Message __DEC_messageReceive_sendEvent_59367 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_580637 = null;\n      Message __DEC_messageSend_sendEvent_580637 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_276539 = null;\n      MessageEnd __DEC_message_message_276539 = null;\n      Match match = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link src from _edge_fragment to parentOperand\n         JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link covered from line to parentCombo\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                           // ensure correct type and really bound of object parentCombo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           parentCombo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from parentOperand to parentCombo\n                           JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_784958 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_784958 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_784958 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_784958 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_784958.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_870144 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_870144 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_870144 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_870144 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_870144.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_549586 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_549586 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_549586 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_549586 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_549586.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_755307 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_755307 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_755307 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_755307 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_755307.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_539922 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_539922 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_539922 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_539922 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_539922.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_539922 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_539922.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_531065 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_531065 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_531065 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_531065 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_531065.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_531065 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_531065.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_490510 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_490510 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_490510 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_490510 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_490510.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_490510 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_490510.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_515849 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_515849 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_515849 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_515849 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_515849.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_515849 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_515849.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_45429 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_45429 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_45429 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_45429.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_45429 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_45429.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_77890 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_77890 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_77890 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_77890.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_77890 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_77890.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_77890 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_77890.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_643337 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_643337 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_643337 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_643337.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_643337 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_643337.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_643337 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_643337.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_545075\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_545075 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_545075.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_545075 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_545075.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_545075 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_545075 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_545075 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_545075.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_41254\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_41254 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_41254.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_41254 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_41254.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_41254 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_41254 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_41254 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_41254.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_59367\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_59367 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_59367.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_59367 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_59367.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_59367 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_59367 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_59367 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_59367.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_580637\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_580637 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_580637.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_580637 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_580637.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_580637 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_580637 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_580637 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_580637.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_276539\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_276539 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_276539.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_276539 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_276539.next ();\n\n                                       // check object __DEC_message_message_276539 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_276539 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_276539 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_276539.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_276539 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_276539.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_fragment is really bound\n                              JavaSDM.ensure ( _edge_fragment != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_fragment to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                              ));\n\n                              // check link trg from _edge_fragment to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_229(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_542102 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_282843 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_153548 = null;\n      Interaction __DEC_operand_enclosingInteraction_988353 = null;\n      InteractionOperand __DEC_combo_fragment_420114 = null;\n      InteractionOperand __DEC_messageReceive_fragment_262792 = null;\n      InteractionOperand __DEC_messageSend_fragment_255219 = null;\n      InteractionOperand __DEC_operand_fragment_171782 = null;\n      Constraint __DEC_spec_specification_342248 = null;\n      InteractionOperand __DEC_guard_guard_171394 = null;\n      CombinedFragment __DEC_operand_operand_473117 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_35441 = null;\n      Message __DEC_messageReceive_receiveEvent_35441 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_459947 = null;\n      Message __DEC_messageSend_receiveEvent_459947 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_167035 = null;\n      Message __DEC_messageReceive_sendEvent_167035 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_285864 = null;\n      Message __DEC_messageSend_sendEvent_285864 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_698893 = null;\n      MessageEnd __DEC_message_message_698893 = null;\n      Match match = null;\n      Iterator fujaba__IterMessageSendTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link trg from _edge_enclosingOperand to parentOperand\n         JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link covered from line to parentCombo\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                           // ensure correct type and really bound of object parentCombo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           parentCombo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from parentOperand to parentCombo\n                           JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                           ));\n\n                           // iterate to-many link trg from messageSend to _edge_fragment\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,EMoflonEdge.class,\"trg\")).iterator ();\n\n                           while ( fujaba__IterMessageSendTo_edge_fragment.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_fragment = (EMoflonEdge) fujaba__IterMessageSendTo_edge_fragment.next ();\n\n                                 // check object _edge_fragment is really bound\n                                 JavaSDM.ensure ( _edge_fragment != null );\n                                 // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                 JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                 // check link src from _edge_fragment to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_542102 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_542102 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_542102 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_542102 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_542102.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_282843 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_282843 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_282843 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_282843 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_282843.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_153548 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_153548 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_153548 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_153548 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_153548.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_988353 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_988353 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_988353 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_988353 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_988353.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_420114 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_420114 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_420114 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_420114 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_420114.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_420114 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_420114.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_262792 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_262792 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_262792 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_262792 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_262792.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_262792 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_262792.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_255219 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_255219 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_255219 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_255219 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_255219.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_255219 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_255219.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_171782 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_171782 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_171782 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_171782 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_171782.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_171782 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_171782.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_342248 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_342248 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_342248 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_342248.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_342248 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_342248.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_171394 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_171394 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_171394 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_171394.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_171394 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_171394.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_171394 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_171394.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_473117 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_473117 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_473117 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_473117.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_473117 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_473117.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_473117 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_473117.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_35441\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_35441 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_35441.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_35441 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_35441.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_35441 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_35441 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_35441 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_35441.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_459947\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_459947 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_459947.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_459947 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_459947.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_459947 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_459947 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_459947 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_459947.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_167035\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_167035 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_167035.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_167035 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_167035.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_167035 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_167035 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_167035 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_167035.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_285864\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_285864 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_285864.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_285864 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_285864.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_285864 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_285864 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_285864 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_285864.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_698893\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_698893 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_698893.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_698893 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_698893.next ();\n\n                                             // check object __DEC_message_message_698893 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_698893 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_698893 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_698893.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_698893 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_698893.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_enclosingOperand is really bound\n                                    JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                    JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_enclosingOperand to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_enclosingOperand.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_enclosingOperand to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_230(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_553242 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_127938 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_442855 = null;\n      Interaction __DEC_operand_enclosingInteraction_638562 = null;\n      InteractionOperand __DEC_combo_fragment_858698 = null;\n      InteractionOperand __DEC_messageReceive_fragment_385403 = null;\n      InteractionOperand __DEC_messageSend_fragment_807744 = null;\n      InteractionOperand __DEC_operand_fragment_952717 = null;\n      Constraint __DEC_spec_specification_651726 = null;\n      InteractionOperand __DEC_guard_guard_117167 = null;\n      CombinedFragment __DEC_operand_operand_75914 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_950845 = null;\n      Message __DEC_messageReceive_receiveEvent_950845 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_292341 = null;\n      Message __DEC_messageSend_receiveEvent_292341 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_852404 = null;\n      Message __DEC_messageReceive_sendEvent_852404 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_981299 = null;\n      Message __DEC_messageSend_sendEvent_981299 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_690629 = null;\n      MessageEnd __DEC_message_message_690629 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // check link trg from _edge_fragment to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                           ));\n\n                           // check link covered from messageSend to line\n                           JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_553242 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_553242 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_553242 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_553242 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_553242.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_127938 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_127938 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_127938 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_127938 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_127938.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_442855 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_442855 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_442855 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_442855 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_442855.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_638562 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_638562 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_638562 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_638562 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_638562.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_858698 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_858698 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_858698 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_858698 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_858698.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_858698 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_858698.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_385403 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_385403 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_385403 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_385403 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_385403.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_385403 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_385403.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_807744 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_807744 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_807744 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_807744 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_807744.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_807744 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_807744.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_952717 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_952717 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_952717 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_952717 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_952717.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_952717 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_952717.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_651726 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_651726 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_651726 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_651726.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_651726 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_651726.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_117167 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_117167 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_117167 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_117167.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_117167 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_117167.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_117167 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_117167.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_75914 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_75914 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_75914 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_75914.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_75914 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_75914.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_75914 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_75914.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_950845\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_950845 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_950845.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_950845 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_950845.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_950845 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_950845 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_950845 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_950845.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_292341\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_292341 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_292341.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_292341 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_292341.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_292341 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_292341 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_292341 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_292341.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_852404\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_852404 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_852404.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_852404 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_852404.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_852404 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_852404 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_852404 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_852404.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_981299\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_981299 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_981299.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_981299 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_981299.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_981299 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_981299 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_981299 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_981299.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_690629\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_690629 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_690629.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_690629 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_690629.next ();\n\n                                       // check object __DEC_message_message_690629 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_690629 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_690629 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_690629.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_690629 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_690629.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_fragment is really bound\n                              JavaSDM.ensure ( _edge_fragment != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_fragment to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                              ));\n\n                              // check link trg from _edge_fragment to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_231(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_407489 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_241836 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_743494 = null;\n      Interaction __DEC_operand_enclosingInteraction_327301 = null;\n      InteractionOperand __DEC_combo_fragment_384959 = null;\n      InteractionOperand __DEC_messageReceive_fragment_369210 = null;\n      InteractionOperand __DEC_messageSend_fragment_671137 = null;\n      InteractionOperand __DEC_operand_fragment_270939 = null;\n      Constraint __DEC_spec_specification_442283 = null;\n      InteractionOperand __DEC_guard_guard_749993 = null;\n      CombinedFragment __DEC_operand_operand_762816 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_101490 = null;\n      Message __DEC_messageReceive_receiveEvent_101490 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_342248 = null;\n      Message __DEC_messageSend_receiveEvent_342248 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_242833 = null;\n      Message __DEC_messageReceive_sendEvent_242833 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_79839 = null;\n      Message __DEC_messageSend_sendEvent_79839 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_743992 = null;\n      MessageEnd __DEC_message_message_743992 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link src from parentOperand to _edge_fragment\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n         while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n         {\n            try\n            {\n               _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n               // check object _edge_fragment is really bound\n               JavaSDM.ensure ( _edge_fragment != null );\n               // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n               JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object combo is really bound\n                           JavaSDM.ensure ( combo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = message.getReceiveEvent ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link fragment from messageReceive to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // check link src from _edge_enclosingOperand to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (_edge_enclosingOperand.getSrc ()\n                                 ));\n\n                                 // check link trg from _edge_fragment to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                 ));\n\n                                 // check link covered from messageSend to line\n                                 JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_407489 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_407489 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_407489 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_407489 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_407489.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_241836 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_241836 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_241836 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_241836 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_241836.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_743494 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_743494 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_743494 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_743494 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_743494.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_327301 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_327301 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_327301 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_327301 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_327301.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_384959 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_384959 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_384959 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_384959 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_384959.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_384959 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_384959.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_369210 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_369210 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_369210 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_369210 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_369210.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_369210 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_369210.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_671137 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_671137 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_671137 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_671137 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_671137.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_671137 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_671137.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_270939 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_270939 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_270939 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_270939 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_270939.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_270939 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_270939.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_442283 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_442283 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_442283 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_442283.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_442283 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_442283.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_749993 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_749993 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_749993 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_749993.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_749993 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_749993.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_749993 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_749993.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_762816 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_762816 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_762816 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_762816.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_762816 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_762816.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_762816 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_762816.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_101490\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_101490 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_101490.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_101490 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_101490.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_101490 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_101490 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_101490 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_101490.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_342248\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_342248 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_342248.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_342248 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_342248.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_342248 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_342248 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_342248 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_342248.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_242833\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_242833 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_242833.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_242833 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_242833.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_242833 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_242833 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_242833 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_242833.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_79839\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_79839 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_79839.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_79839 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_79839.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_79839 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_79839 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_79839 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_79839.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_743992\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_743992 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_743992.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_743992 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_743992.next ();\n\n                                             // check object __DEC_message_message_743992 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_743992 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_743992 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_743992.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_743992 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_743992.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_enclosingOperand is really bound\n                                    JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                    JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_enclosingOperand to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_enclosingOperand.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_enclosingOperand to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_232(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_940200 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_327436 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_620400 = null;\n      Interaction __DEC_operand_enclosingInteraction_895957 = null;\n      InteractionOperand __DEC_combo_fragment_808851 = null;\n      InteractionOperand __DEC_messageReceive_fragment_841453 = null;\n      InteractionOperand __DEC_messageSend_fragment_393224 = null;\n      InteractionOperand __DEC_operand_fragment_314934 = null;\n      Constraint __DEC_spec_specification_841895 = null;\n      InteractionOperand __DEC_guard_guard_507981 = null;\n      CombinedFragment __DEC_operand_operand_803715 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_891850 = null;\n      Message __DEC_messageReceive_receiveEvent_891850 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_336537 = null;\n      Message __DEC_messageSend_receiveEvent_336537 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_590399 = null;\n      Message __DEC_messageReceive_sendEvent_590399 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_860306 = null;\n      Message __DEC_messageSend_sendEvent_860306 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_490668 = null;\n      MessageEnd __DEC_message_message_490668 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // iterate to-many link covered from line to parentCombo\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n               // ensure correct type and really bound of object parentCombo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               parentCombo = (CombinedFragment) _TmpObject;\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     parentOperand = messageSend.getEnclosingOperand ();\n\n                     // check object parentOperand is really bound\n                     JavaSDM.ensure ( parentOperand != null );\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // check link trg from _edge_coveredBy to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                     ));\n\n                     // check link covered from parentOperand to line\n                     JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object combo is really bound\n                           JavaSDM.ensure ( combo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_940200 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_940200 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_940200 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_940200 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_940200.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_327436 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_327436 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_327436 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_327436 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_327436.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_620400 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_620400 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_620400 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_620400 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_620400.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_895957 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_895957 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_895957 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_895957 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_895957.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_808851 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_808851 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_808851 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_808851 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_808851.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_808851 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_808851.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_841453 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_841453 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_841453 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_841453 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_841453.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_841453 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_841453.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_393224 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_393224 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_393224 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_393224 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_393224.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_393224 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_393224.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_314934 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_314934 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_314934 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_314934 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_314934.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_314934 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_314934.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_841895 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_841895 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_841895 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_841895.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_841895 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_841895.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_507981 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_507981 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_507981 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_507981.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_507981 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_507981.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_507981 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_507981.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_803715 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_803715 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_803715 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_803715.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_803715 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_803715.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_803715 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_803715.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_891850\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_891850 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_891850.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_891850 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_891850.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_891850 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_891850 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_891850 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_891850.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_336537\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_336537 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_336537.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_336537 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_336537.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_336537 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_336537 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_336537 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_336537.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_590399\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_590399 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_590399.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_590399 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_590399.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_590399 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_590399 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_590399 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_590399.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_860306\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_860306 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_860306.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_860306 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_860306.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_860306 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_860306 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_860306 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_860306.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_490668\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_490668 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_490668.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_490668 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_490668.next ();\n\n                                       // check object __DEC_message_message_490668 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_490668 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_490668 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_490668.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_490668 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_490668.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_233(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_776015 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_305436 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_324102 = null;\n      Interaction __DEC_operand_enclosingInteraction_330258 = null;\n      InteractionOperand __DEC_combo_fragment_32505 = null;\n      InteractionOperand __DEC_messageReceive_fragment_413757 = null;\n      InteractionOperand __DEC_messageSend_fragment_274231 = null;\n      InteractionOperand __DEC_operand_fragment_245305 = null;\n      Constraint __DEC_spec_specification_373154 = null;\n      InteractionOperand __DEC_guard_guard_888500 = null;\n      CombinedFragment __DEC_operand_operand_979884 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_498712 = null;\n      Message __DEC_messageReceive_receiveEvent_498712 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_496735 = null;\n      Message __DEC_messageSend_receiveEvent_496735 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_796955 = null;\n      Message __DEC_messageReceive_sendEvent_796955 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_633254 = null;\n      Message __DEC_messageSend_sendEvent_633254 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_649547 = null;\n      MessageEnd __DEC_message_message_649547 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n               // check object combo is really bound\n               JavaSDM.ensure ( combo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(combo.getOperand().contains(operand));\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     parentOperand = messageSend.getEnclosingOperand ();\n\n                     // check object parentOperand is really bound\n                     JavaSDM.ensure ( parentOperand != null );\n\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // bind object\n                     parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                     // check object parentCombo is really bound\n                     JavaSDM.ensure ( parentCombo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link src from _edge_covered to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (_edge_covered.getSrc ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // check link covered from parentOperand to line\n                     JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                     // iterate to-many link src from line to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                     while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link trg from _edge_coveredBy to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_776015 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_776015 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_776015 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_776015 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_776015.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_305436 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_305436 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_305436 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_305436 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_305436.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_324102 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_324102 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_324102 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_324102 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_324102.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_330258 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_330258 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_330258 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_330258 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_330258.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_32505 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_32505 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_32505 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_32505 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_32505.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_32505 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_32505.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_413757 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_413757 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_413757 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_413757 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_413757.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_413757 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_413757.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_274231 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_274231 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_274231 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_274231 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_274231.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_274231 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_274231.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_245305 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_245305 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_245305 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_245305 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_245305.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_245305 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_245305.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_373154 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_373154 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_373154 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_373154.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_373154 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_373154.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_888500 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_888500 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_888500 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_888500.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_888500 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_888500.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_888500 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_888500.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_979884 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_979884 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_979884 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_979884.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_979884 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_979884.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_979884 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_979884.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_498712\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_498712 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_498712.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_498712 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_498712.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_498712 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_498712 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_498712 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_498712.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_496735\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_496735 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_496735.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_496735 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_496735.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_496735 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_496735 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_496735 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_496735.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_796955\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_796955 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_796955.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_796955 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_796955.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_796955 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_796955 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_796955 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_796955.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_633254\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_633254 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_633254.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_633254 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_633254.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_633254 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_633254 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_633254 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_633254.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_649547\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_649547 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_649547.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_649547 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_649547.next ();\n\n                                       // check object __DEC_message_message_649547 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_649547 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_649547 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_649547.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_649547 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_649547.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_covered is really bound\n                              JavaSDM.ensure ( _edge_covered != null );\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                              JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_covered to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_covered.getSrc ()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_covered to line\n                              JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_234(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_975550 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_435117 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_207946 = null;\n      Interaction __DEC_operand_enclosingInteraction_851928 = null;\n      InteractionOperand __DEC_combo_fragment_467029 = null;\n      InteractionOperand __DEC_messageReceive_fragment_951789 = null;\n      InteractionOperand __DEC_messageSend_fragment_374040 = null;\n      InteractionOperand __DEC_operand_fragment_83087 = null;\n      Constraint __DEC_spec_specification_833837 = null;\n      InteractionOperand __DEC_guard_guard_455411 = null;\n      CombinedFragment __DEC_operand_operand_900562 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_35888 = null;\n      Message __DEC_messageReceive_receiveEvent_35888 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_36082 = null;\n      Message __DEC_messageSend_receiveEvent_36082 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_528916 = null;\n      Message __DEC_messageReceive_sendEvent_528916 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_358723 = null;\n      Message __DEC_messageSend_sendEvent_358723 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_84852 = null;\n      MessageEnd __DEC_message_message_84852 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      CombinedFragment combo = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // check link fragment from combo to parentOperand\n         JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // check link covered from messageSend to line\n                           JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_975550 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_975550 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_975550 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_975550 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_975550.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_435117 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_435117 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_435117 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_435117 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_435117.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_207946 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_207946 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_207946 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_207946 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_207946.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_851928 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_851928 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_851928 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_851928 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_851928.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_467029 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_467029 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_467029 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_467029 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_467029.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_467029 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_467029.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_951789 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_951789 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_951789 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_951789 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_951789.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_951789 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_951789.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_374040 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_374040 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_374040 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_374040 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_374040.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_374040 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_374040.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_83087 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_83087 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_83087 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_83087 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_83087.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_83087 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_83087.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_833837 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_833837 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_833837 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_833837.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_833837 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_833837.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_455411 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_455411 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_455411 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_455411.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_455411 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_455411.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_455411 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_455411.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_900562 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_900562 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_900562 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_900562.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_900562 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_900562.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_900562 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_900562.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_35888\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_35888 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_35888.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_35888 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_35888.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_35888 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_35888 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_35888 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_35888.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_36082\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_36082 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_36082.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_36082 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_36082.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_36082 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_36082 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_36082 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_36082.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_528916\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_528916 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_528916.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_528916 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_528916.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_528916 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_528916 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_528916 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_528916.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_358723\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_358723 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_358723.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_358723 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_358723.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_358723 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_358723 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_358723 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_358723.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_84852\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_84852 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_84852.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_84852 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_84852.next ();\n\n                                       // check object __DEC_message_message_84852 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_84852 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_84852 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_84852.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_84852 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_84852.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_fragment is really bound\n                              JavaSDM.ensure ( _edge_fragment != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_fragment to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                              ));\n\n                              // check link trg from _edge_fragment to combo\n                              JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_235(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_708581 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_197905 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_336190 = null;\n      Interaction __DEC_operand_enclosingInteraction_659571 = null;\n      InteractionOperand __DEC_combo_fragment_883465 = null;\n      InteractionOperand __DEC_messageReceive_fragment_633269 = null;\n      InteractionOperand __DEC_messageSend_fragment_103175 = null;\n      InteractionOperand __DEC_operand_fragment_244586 = null;\n      Constraint __DEC_spec_specification_605556 = null;\n      InteractionOperand __DEC_guard_guard_690715 = null;\n      CombinedFragment __DEC_operand_operand_876226 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_384954 = null;\n      Message __DEC_messageReceive_receiveEvent_384954 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_168735 = null;\n      Message __DEC_messageSend_receiveEvent_168735 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_869536 = null;\n      Message __DEC_messageReceive_sendEvent_869536 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_727497 = null;\n      Message __DEC_messageSend_sendEvent_727497 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_554491 = null;\n      MessageEnd __DEC_message_message_554491 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from combo to parentOperand\n         JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // check link covered from messageSend to line\n                           JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                           // iterate to-many link src from parentOperand to _edge_fragment\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                                 // check object _edge_fragment is really bound\n                                 JavaSDM.ensure ( _edge_fragment != null );\n                                 // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                 JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                 // check link trg from _edge_fragment to combo\n                                 JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_708581 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_708581 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_708581 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_708581 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_708581.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_197905 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_197905 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_197905 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_197905 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_197905.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_336190 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_336190 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_336190 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_336190 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_336190.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_659571 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_659571 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_659571 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_659571 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_659571.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_883465 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_883465 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_883465 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_883465 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_883465.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_883465 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_883465.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_633269 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_633269 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_633269 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_633269 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_633269.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_633269 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_633269.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_103175 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_103175 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_103175 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_103175 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_103175.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_103175 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_103175.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_244586 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_244586 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_244586 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_244586 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_244586.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_244586 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_244586.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_605556 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_605556 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_605556 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_605556.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_605556 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_605556.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_690715 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_690715 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_690715 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_690715.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_690715 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_690715.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_690715 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_690715.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_876226 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_876226 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_876226 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_876226.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_876226 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_876226.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_876226 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_876226.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_384954\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_384954 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_384954.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_384954 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_384954.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_384954 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_384954 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_384954 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_384954.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_168735\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_168735 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_168735.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_168735 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_168735.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_168735 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_168735 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_168735 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_168735.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_869536\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_869536 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_869536.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_869536 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_869536.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_869536 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_869536 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_869536 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_869536.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_727497\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_727497 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_727497.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_727497 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_727497.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_727497 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_727497 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_727497 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_727497.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_554491\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_554491 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_554491.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_554491 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_554491.next ();\n\n                                             // check object __DEC_message_message_554491 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_554491 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_554491 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_554491.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_554491 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_554491.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_enclosingOperand is really bound\n                                    JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                    JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_enclosingOperand to combo\n                                    JavaSDM.ensure (combo.equals (_edge_enclosingOperand.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_enclosingOperand to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to combo\n                                    JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_236(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_707382 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_568535 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_158076 = null;\n      Interaction __DEC_operand_enclosingInteraction_72528 = null;\n      InteractionOperand __DEC_combo_fragment_728411 = null;\n      InteractionOperand __DEC_messageReceive_fragment_696477 = null;\n      InteractionOperand __DEC_messageSend_fragment_844481 = null;\n      InteractionOperand __DEC_operand_fragment_54729 = null;\n      Constraint __DEC_spec_specification_70571 = null;\n      InteractionOperand __DEC_guard_guard_932548 = null;\n      CombinedFragment __DEC_operand_operand_551856 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_329664 = null;\n      Message __DEC_messageReceive_receiveEvent_329664 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_311741 = null;\n      Message __DEC_messageSend_receiveEvent_311741 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_370764 = null;\n      Message __DEC_messageReceive_sendEvent_370764 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_59318 = null;\n      Message __DEC_messageSend_sendEvent_59318 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_53426 = null;\n      MessageEnd __DEC_message_message_53426 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n               // check object combo is really bound\n               JavaSDM.ensure ( combo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(combo.getOperand().contains(operand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     parentOperand = messageSend.getEnclosingOperand ();\n\n                     // check object parentOperand is really bound\n                     JavaSDM.ensure ( parentOperand != null );\n\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // check link covered from parentOperand to line\n                     JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_707382 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_707382 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_707382 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_707382 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_707382.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_568535 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_568535 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_568535 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_568535 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_568535.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_158076 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_158076 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_158076 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_158076 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_158076.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_72528 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_72528 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_72528 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_72528 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_72528.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_728411 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_728411 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_728411 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_728411 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_728411.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_728411 and parentOperand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_728411.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_696477 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_696477 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_696477 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_696477 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_696477.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_696477 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_696477.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_844481 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_844481 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_844481 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_844481 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_844481.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_844481 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_844481.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_54729 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_54729 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_54729 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_54729 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_54729.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_54729 and parentOperand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_54729.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_70571 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_70571 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_70571 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_70571.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_70571 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_70571.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_932548 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_932548 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_932548 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_932548.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_932548 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_932548.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_guard_guard_932548 and parentOperand \n                           JavaSDM.ensure ( !__DEC_guard_guard_932548.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_551856 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_551856 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_551856 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_551856.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_551856 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_551856.equals (combo) );\n\n                           // check isomorphic binding between objects __DEC_operand_operand_551856 and parentCombo \n                           JavaSDM.ensure ( !__DEC_operand_operand_551856.equals (parentCombo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_329664\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_329664 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_329664.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_329664 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_329664.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_329664 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_329664 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_329664 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_329664.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_311741\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_311741 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_311741.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_311741 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_311741.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_311741 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_311741 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_311741 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_311741.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_370764\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_370764 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_370764.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_370764 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_370764.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_370764 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_370764 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_370764 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_370764.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_59318\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_59318 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_59318.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_59318 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_59318.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_59318 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_59318 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_59318 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_59318.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_53426\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_53426 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_53426.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_53426 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_53426.next ();\n\n                                 // check object __DEC_message_message_53426 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_53426 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_53426 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_53426.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_53426 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_53426.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_coveredBy is really bound\n                        JavaSDM.ensure ( _edge_coveredBy != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to parentOperand\n                        JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link guard from parentOperand to guard\n                        JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link operand from operand to parentCombo\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                        .contains (parentCombo)));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_coveredBy to line\n                        JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                        ));\n\n                        // check link trg from _edge_coveredBy to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_237(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_307460 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_604037 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_965390 = null;\n      Interaction __DEC_operand_enclosingInteraction_373829 = null;\n      InteractionOperand __DEC_combo_fragment_677951 = null;\n      InteractionOperand __DEC_messageReceive_fragment_245232 = null;\n      InteractionOperand __DEC_messageSend_fragment_507354 = null;\n      InteractionOperand __DEC_operand_fragment_782811 = null;\n      Constraint __DEC_spec_specification_722207 = null;\n      InteractionOperand __DEC_guard_guard_321244 = null;\n      CombinedFragment __DEC_operand_operand_980134 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_504635 = null;\n      Message __DEC_messageReceive_receiveEvent_504635 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_104487 = null;\n      Message __DEC_messageSend_receiveEvent_104487 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_721489 = null;\n      Message __DEC_messageReceive_sendEvent_721489 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_386313 = null;\n      Message __DEC_messageSend_sendEvent_386313 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_464670 = null;\n      MessageEnd __DEC_message_message_464670 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               parentOperand = messageSend.getEnclosingOperand ();\n\n               // check object parentOperand is really bound\n               JavaSDM.ensure ( parentOperand != null );\n\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // bind object\n               _TmpObject = message.getReceiveEvent ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link fragment from messageReceive to parentOperand\n               JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n               ));\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // check link operand from parentOperand to parentCombo\n               JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link src from line to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                     while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link trg from _edge_coveredBy to parentCombo\n                           JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_307460 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_307460 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_307460 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_307460 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_307460.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_604037 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_604037 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_604037 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_604037 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_604037.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_965390 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_965390 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_965390 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_965390 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_965390.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_373829 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_373829 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_373829 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_373829 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_373829.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_677951 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_677951 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_677951 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_677951 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_677951.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_677951 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_677951.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_245232 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_245232 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_245232 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_245232 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_245232.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_245232 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_245232.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_507354 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_507354 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_507354 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_507354 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_507354.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_507354 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_507354.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_782811 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_782811 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_782811 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_782811 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_782811.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_782811 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_782811.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_722207 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_722207 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_722207 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_722207.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_722207 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_722207.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_321244 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_321244 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_321244 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_321244.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_321244 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_321244.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_321244 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_321244.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_980134 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_980134 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_980134 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_980134.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_980134 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_980134.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_980134 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_980134.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_504635\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_504635 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_504635.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_504635 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_504635.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_504635 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_504635 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_504635 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_504635.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_104487\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_104487 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_104487.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_104487 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_104487.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_104487 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_104487 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_104487 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_104487.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_721489\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_721489 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_721489.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_721489 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_721489.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_721489 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_721489 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_721489 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_721489.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_386313\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_386313 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_386313.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_386313 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_386313.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_386313 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_386313 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_386313 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_386313.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_464670\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_464670 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_464670.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_464670 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_464670.next ();\n\n                                       // check object __DEC_message_message_464670 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_464670 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_464670 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_464670.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_464670 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_464670.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_covered is really bound\n                              JavaSDM.ensure ( _edge_covered != null );\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                              JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_covered to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (_edge_covered.getSrc ()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_covered to line\n                              JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_238(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_348891 = null;\n      NormalStep __DEC_alt_stepAlternative_884334 = null;\n      Flow __DEC_step_steps_811597 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_168673 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_168673 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      AlternativeFlowAlternative alt = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_stepAlternative is really bound\n         JavaSDM.ensure ( _edge_stepAlternative != null );\n         // bind object\n         _TmpObject = _edge_stepAlternative.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_stepAlternative.getTrg ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         _TmpObject = alt.getRef ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check link stepAlternative from alt to step\n         JavaSDM.ensure (step.equals (alt.eContainer()\n         ));\n\n         // check link useCases from useCase to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_348891 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_348891 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_348891 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_348891.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_348891 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_348891.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_884334 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_884334 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_884334 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_884334.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_884334 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_884334.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_811597 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_811597 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_811597 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_811597.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_811597 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_811597.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_811597 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_811597.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_168673\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_168673 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_168673.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_168673 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_168673.next ();\n\n                     // check object __DEC_altFlow_ref_168673 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_168673 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_168673 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_168673.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_stepAlternative is really bound\n            JavaSDM.ensure ( _edge_stepAlternative != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link actors from actor to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_stepAlternative to step\n            JavaSDM.ensure (step.equals (_edge_stepAlternative.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_stepAlternative to alt\n            JavaSDM.ensure (alt.equals (_edge_stepAlternative.getTrg ()\n            ));\n\n            // check link useCases from useCase to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,actor,flow,step,alt,altFlow,useCase,packageDeclaration);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_47(
			EMoflonEdge _edge_stepAlternative);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_646838 = null;\n      NormalStep __DEC_alt_stepAlternative_457400 = null;\n      Flow __DEC_step_steps_721928 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_614502 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_614502 = null;\n      Match match = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      NormalStep step = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_ref is really bound\n         JavaSDM.ensure ( _edge_ref != null );\n         // bind object\n         _TmpObject = _edge_ref.getTrg ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_ref.getSrc ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // check link ref from alt to altFlow\n         JavaSDM.ensure (altFlow.equals (alt.getRef ()\n         ));\n\n         // bind object\n         step = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(step.getStepAlternative().contains(alt));\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // check link useCases from useCase to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_646838 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_646838 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_646838 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_646838.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_646838 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_646838.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_457400 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_457400 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_457400 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_457400.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_457400 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_457400.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_721928 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_721928 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_721928 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_721928.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_721928 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_721928.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_721928 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_721928.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_614502\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_614502 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_614502.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_614502 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_614502.next ();\n\n                     // check object __DEC_altFlow_ref_614502 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_614502 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_614502 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_614502.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_ref is really bound\n            JavaSDM.ensure ( _edge_ref != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link actors from actor to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_ref to alt\n            JavaSDM.ensure (alt.equals (_edge_ref.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_ref to altFlow\n            JavaSDM.ensure (altFlow.equals (_edge_ref.getTrg ()\n            ));\n\n            // check link useCases from useCase to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,actor,flow,step,alt,altFlow,useCase,packageDeclaration);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_48(EMoflonEdge _edge_ref);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_23240 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_314840 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_152349 = null;\n      Interaction __DEC_operand_enclosingInteraction_345783 = null;\n      InteractionOperand __DEC_combo_fragment_866143 = null;\n      InteractionOperand __DEC_messageReceive_fragment_205663 = null;\n      InteractionOperand __DEC_messageSend_fragment_404976 = null;\n      InteractionOperand __DEC_operand_fragment_621506 = null;\n      Constraint __DEC_spec_specification_212130 = null;\n      InteractionOperand __DEC_guard_guard_130353 = null;\n      CombinedFragment __DEC_operand_operand_951346 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_649532 = null;\n      Message __DEC_messageReceive_receiveEvent_649532 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_270517 = null;\n      Message __DEC_messageSend_receiveEvent_270517 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_2831 = null;\n      Message __DEC_messageReceive_sendEvent_2831 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_95128 = null;\n      Message __DEC_messageSend_sendEvent_95128 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_520577 = null;\n      MessageEnd __DEC_message_message_520577 = null;\n      Match match = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_operand is really bound\n         JavaSDM.ensure ( _edge_operand != null );\n         // bind object\n         _TmpObject = _edge_operand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_operand.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // check link operand from operand to combo\n         JavaSDM.ensure (combo.equals (operand.eContainer()\n         ));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from line to parentOperand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                           // ensure correct type and really bound of object parentOperand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           parentOperand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link fragment from messageSend to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                           // check object parentCombo is really bound\n                           JavaSDM.ensure ( parentCombo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_23240 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_23240 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_23240 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_23240 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_23240.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_314840 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_314840 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_314840 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_314840 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_314840.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_152349 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_152349 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_152349 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_152349 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_152349.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_345783 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_345783 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_345783 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_345783 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_345783.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_866143 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_866143 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_866143 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_866143 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_866143.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_866143 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_866143.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_205663 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_205663 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_205663 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_205663 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_205663.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_205663 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_205663.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_404976 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_404976 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_404976 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_404976 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_404976.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_404976 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_404976.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_621506 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_621506 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_621506 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_621506 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_621506.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_621506 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_621506.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_212130 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_212130 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_212130 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_212130.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_212130 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_212130.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_130353 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_130353 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_130353 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_130353.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_130353 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_130353.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_130353 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_130353.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_951346 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_951346 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_951346 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_951346.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_951346 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_951346.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_951346 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_951346.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_649532\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_649532 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_649532.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_649532 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_649532.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_649532 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_649532 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_649532 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_649532.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_270517\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_270517 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_270517.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_270517 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_270517.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_270517 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_270517 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_270517 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_270517.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_2831\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_2831 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_2831.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_2831 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_2831.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_2831 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_2831 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_2831 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_2831.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_95128\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_95128 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_95128.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_95128 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_95128.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_95128 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_95128 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_95128 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_95128.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_520577\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_520577 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_520577.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_520577 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_520577.next ();\n\n                                       // check object __DEC_message_message_520577 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_520577 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_520577 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_520577.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_520577 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_520577.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_operand is really bound\n                              JavaSDM.ensure ( _edge_operand != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_operand to combo\n                              JavaSDM.ensure (combo.equals (_edge_operand.getSrc ()\n                              ));\n\n                              // check link trg from _edge_operand to operand\n                              JavaSDM.ensure (operand.equals (_edge_operand.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_239(EMoflonEdge _edge_operand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_920318 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_295567 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_883264 = null;\n      Interaction __DEC_operand_enclosingInteraction_316161 = null;\n      InteractionOperand __DEC_combo_fragment_40170 = null;\n      InteractionOperand __DEC_messageReceive_fragment_220453 = null;\n      InteractionOperand __DEC_messageSend_fragment_418569 = null;\n      InteractionOperand __DEC_operand_fragment_359428 = null;\n      Constraint __DEC_spec_specification_309112 = null;\n      InteractionOperand __DEC_guard_guard_839132 = null;\n      CombinedFragment __DEC_operand_operand_580456 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_735792 = null;\n      Message __DEC_messageReceive_receiveEvent_735792 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_22897 = null;\n      Message __DEC_messageSend_receiveEvent_22897 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_3046 = null;\n      Message __DEC_messageReceive_sendEvent_3046 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_487006 = null;\n      Message __DEC_messageSend_sendEvent_487006 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_819024 = null;\n      MessageEnd __DEC_message_message_819024 = null;\n      Match match = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // bind object\n               _TmpObject = message.getReceiveEvent ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // iterate to-many link covered from line to parentOperand\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // check link fragment from messageReceive to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link fragment from messageSend to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                     // check object parentCombo is really bound\n                     JavaSDM.ensure ( parentCombo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_920318 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_920318 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_920318 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_920318 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_920318.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_295567 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_295567 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_295567 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_295567 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_295567.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_883264 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_883264 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_883264 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_883264 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_883264.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_316161 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_316161 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_316161 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_316161 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_316161.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_40170 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_40170 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_40170 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_40170 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_40170.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_40170 and parentOperand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_40170.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_220453 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_220453 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_220453 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_220453 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_220453.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_220453 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_220453.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_418569 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_418569 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_418569 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_418569 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_418569.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_418569 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_418569.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_359428 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_359428 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_359428 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_359428 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_359428.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_359428 and parentOperand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_359428.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_309112 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_309112 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_309112 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_309112.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_309112 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_309112.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_839132 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_839132 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_839132 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_839132.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_839132 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_839132.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_guard_guard_839132 and parentOperand \n                           JavaSDM.ensure ( !__DEC_guard_guard_839132.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_580456 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_580456 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_580456 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_580456.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_580456 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_580456.equals (combo) );\n\n                           // check isomorphic binding between objects __DEC_operand_operand_580456 and parentCombo \n                           JavaSDM.ensure ( !__DEC_operand_operand_580456.equals (parentCombo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_735792\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_735792 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_735792.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_735792 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_735792.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_735792 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_735792 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_735792 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_735792.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_22897\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_22897 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_22897.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_22897 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_22897.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_22897 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_22897 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_22897 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_22897.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_3046\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_3046 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_3046.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_3046 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_3046.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_3046 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_3046 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_3046 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_3046.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_487006\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_487006 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_487006.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_487006 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_487006.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_487006 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_487006 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_487006 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_487006.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_819024\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_819024 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_819024.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_819024 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_819024.next ();\n\n                                 // check object __DEC_message_message_819024 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_819024 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_819024 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_819024.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_819024 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_819024.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_coveredBy is really bound\n                        JavaSDM.ensure ( _edge_coveredBy != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to parentOperand\n                        JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link guard from parentOperand to guard\n                        JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link operand from operand to parentCombo\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                        .contains (parentCombo)));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_coveredBy to line\n                        JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                        ));\n\n                        // check link trg from _edge_coveredBy to operand\n                        JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_240(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_997987 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_746248 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_127594 = null;\n      Interaction __DEC_operand_enclosingInteraction_303433 = null;\n      InteractionOperand __DEC_combo_fragment_870091 = null;\n      InteractionOperand __DEC_messageReceive_fragment_386561 = null;\n      InteractionOperand __DEC_messageSend_fragment_929241 = null;\n      InteractionOperand __DEC_operand_fragment_983307 = null;\n      Constraint __DEC_spec_specification_650453 = null;\n      InteractionOperand __DEC_guard_guard_327170 = null;\n      CombinedFragment __DEC_operand_operand_437662 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_5566 = null;\n      Message __DEC_messageReceive_receiveEvent_5566 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_307340 = null;\n      Message __DEC_messageSend_receiveEvent_307340 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_428594 = null;\n      Message __DEC_messageReceive_sendEvent_428594 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_387394 = null;\n      Message __DEC_messageSend_sendEvent_387394 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_110779 = null;\n      MessageEnd __DEC_message_message_110779 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // bind object\n               _TmpObject = message.getReceiveEvent ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // iterate to-many link covered from line to parentOperand\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // check link fragment from messageReceive to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                     ));\n\n                     // check link fragment from messageSend to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                     // check object parentCombo is really bound\n                     JavaSDM.ensure ( parentCombo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link src from line to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                     while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link trg from _edge_coveredBy to operand\n                           JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_997987 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_997987 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_997987 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_997987 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_997987.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_746248 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_746248 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_746248 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_746248 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_746248.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_127594 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_127594 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_127594 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_127594 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_127594.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_303433 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_303433 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_303433 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_303433 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_303433.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_870091 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_870091 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_870091 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_870091 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_870091.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_870091 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_870091.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_386561 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_386561 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_386561 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_386561 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_386561.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_386561 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_386561.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_929241 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_929241 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_929241 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_929241 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_929241.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_929241 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_929241.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_983307 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_983307 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_983307 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_983307 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_983307.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_983307 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_983307.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_650453 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_650453 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_650453 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_650453.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_650453 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_650453.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_327170 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_327170 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_327170 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_327170.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_327170 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_327170.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_327170 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_327170.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_437662 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_437662 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_437662 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_437662.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_437662 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_437662.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_437662 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_437662.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_5566\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_5566 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_5566.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_5566 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_5566.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_5566 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_5566 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_5566 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_5566.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_307340\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_307340 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_307340.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_307340 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_307340.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_307340 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_307340 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_307340 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_307340.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_428594\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_428594 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_428594.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_428594 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_428594.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_428594 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_428594 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_428594 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_428594.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_387394\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_387394 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_387394.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_387394 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_387394.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_387394 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_387394 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_387394 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_387394.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_110779\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_110779 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_110779.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_110779 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_110779.next ();\n\n                                       // check object __DEC_message_message_110779 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_110779 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_110779 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_110779.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_110779 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_110779.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_covered is really bound\n                              JavaSDM.ensure ( _edge_covered != null );\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                              JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_covered to operand\n                              JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_covered to line\n                              JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to operand\n                              JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_241(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_655639 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_862701 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_882551 = null;\n      Interaction __DEC_operand_enclosingInteraction_46937 = null;\n      InteractionOperand __DEC_combo_fragment_651691 = null;\n      InteractionOperand __DEC_messageReceive_fragment_881669 = null;\n      InteractionOperand __DEC_messageSend_fragment_252818 = null;\n      InteractionOperand __DEC_operand_fragment_629460 = null;\n      Constraint __DEC_spec_specification_256277 = null;\n      InteractionOperand __DEC_guard_guard_690082 = null;\n      CombinedFragment __DEC_operand_operand_110142 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_361383 = null;\n      Message __DEC_messageReceive_receiveEvent_361383 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_155626 = null;\n      Message __DEC_messageSend_receiveEvent_155626 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_190903 = null;\n      Message __DEC_messageReceive_sendEvent_190903 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_69645 = null;\n      Message __DEC_messageSend_sendEvent_69645 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_500969 = null;\n      MessageEnd __DEC_message_message_500969 = null;\n      Match match = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_guard is really bound\n         JavaSDM.ensure ( _edge_guard != null );\n         // bind object\n         _TmpObject = _edge_guard.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link trg from _edge_guard to guard\n         JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link covered from line to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link covered from line to parentOperand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                           // ensure correct type and really bound of object parentOperand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           parentOperand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link fragment from messageSend to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                           // check object parentCombo is really bound\n                           JavaSDM.ensure ( parentCombo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_655639 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_655639 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_655639 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_655639 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_655639.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_862701 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_862701 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_862701 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_862701 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_862701.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_882551 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_882551 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_882551 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_882551 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_882551.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_46937 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_46937 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_46937 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_46937 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_46937.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_651691 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_651691 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_651691 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_651691 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_651691.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_651691 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_651691.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_881669 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_881669 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_881669 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_881669 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_881669.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_881669 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_881669.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_252818 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_252818 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_252818 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_252818 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_252818.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_252818 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_252818.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_629460 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_629460 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_629460 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_629460 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_629460.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_629460 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_629460.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_256277 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_256277 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_256277 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_256277.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_256277 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_256277.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_690082 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_690082 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_690082 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_690082.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_690082 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_690082.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_690082 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_690082.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_110142 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_110142 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_110142 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_110142.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_110142 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_110142.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_110142 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_110142.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_361383\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_361383 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_361383.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_361383 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_361383.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_361383 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_361383 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_361383 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_361383.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_155626\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_155626 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_155626.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_155626 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_155626.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_155626 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_155626 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_155626 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_155626.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_190903\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_190903 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_190903.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_190903 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_190903.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_190903 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_190903 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_190903 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_190903.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_69645\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_69645 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_69645.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_69645 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_69645.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_69645 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_69645 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_69645 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_69645.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_500969\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_500969 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_500969.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_500969 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_500969.next ();\n\n                                       // check object __DEC_message_message_500969 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_500969 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_500969 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_500969.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_500969 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_500969.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_guard is really bound\n                              JavaSDM.ensure ( _edge_guard != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_guard to operand\n                              JavaSDM.ensure (operand.equals (_edge_guard.getSrc ()\n                              ));\n\n                              // check link trg from _edge_guard to guard\n                              JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_242(EMoflonEdge _edge_guard);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_32880 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_8987 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_517394 = null;\n      Interaction __DEC_operand_enclosingInteraction_785077 = null;\n      InteractionOperand __DEC_combo_fragment_303286 = null;\n      InteractionOperand __DEC_messageReceive_fragment_798594 = null;\n      InteractionOperand __DEC_messageSend_fragment_726906 = null;\n      InteractionOperand __DEC_operand_fragment_940097 = null;\n      Constraint __DEC_spec_specification_864459 = null;\n      InteractionOperand __DEC_guard_guard_810606 = null;\n      CombinedFragment __DEC_operand_operand_541328 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_770540 = null;\n      Message __DEC_messageReceive_receiveEvent_770540 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_902890 = null;\n      Message __DEC_messageSend_receiveEvent_902890 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_775894 = null;\n      Message __DEC_messageReceive_sendEvent_775894 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_116378 = null;\n      Message __DEC_messageSend_sendEvent_116378 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_496022 = null;\n      MessageEnd __DEC_message_message_496022 = null;\n      Match match = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      InteractionConstraint guard = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_specification is really bound\n         JavaSDM.ensure ( _edge_specification != null );\n         // bind object\n         _TmpObject = _edge_specification.getSrc ();\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n\n         // bind object\n         operand = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(guard.equals(operand.getGuard()));\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = _edge_specification.getTrg ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link specification from spec to guard\n         JavaSDM.ensure (guard.equals (spec.eContainer()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // iterate to-many link covered from line to parentCombo\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                     // ensure correct type and really bound of object parentCombo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     parentCombo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // iterate to-many link covered from line to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // iterate to-many link covered from line to parentOperand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToParentOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                                 // ensure correct type and really bound of object parentOperand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 parentOperand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // check link fragment from combo to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                 ));\n\n                                 // check link fragment from messageReceive to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                 ));\n\n                                 // check link fragment from messageSend to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                 ));\n\n                                 // check link operand from parentOperand to parentCombo\n                                 JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_32880 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_32880 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_32880 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_32880 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_32880.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_8987 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_8987 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_8987 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_8987 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_8987.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_517394 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_517394 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_517394 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_517394 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_517394.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_785077 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_785077 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_785077 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_785077 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_785077.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_303286 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_303286 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_303286 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_303286 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_303286.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_303286 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_303286.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_798594 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_798594 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_798594 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_798594 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_798594.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_798594 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_798594.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_726906 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_726906 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_726906 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_726906 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_726906.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_726906 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_726906.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_940097 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_940097 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_940097 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_940097 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_940097.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_940097 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_940097.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_864459 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_864459 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_864459 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_864459.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_864459 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_864459.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_810606 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_810606 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_810606 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_810606.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_810606 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_810606.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_810606 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_810606.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_541328 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_541328 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_541328 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_541328.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_541328 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_541328.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_541328 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_541328.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_770540\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_770540 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_770540.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_770540 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_770540.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_770540 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_770540 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_770540 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_770540.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_902890\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_902890 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_902890.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_902890 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_902890.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_902890 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_902890 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_902890 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_902890.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_775894\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_775894 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_775894.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_775894 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_775894.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_775894 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_775894 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_775894 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_775894.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_116378\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_116378 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_116378.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_116378 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_116378.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_116378 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_116378 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_116378 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_116378.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_496022\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_496022 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_496022.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_496022 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_496022.next ();\n\n                                             // check object __DEC_message_message_496022 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_496022 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_496022 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_496022.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_496022 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_496022.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_specification is really bound\n                                    JavaSDM.ensure ( _edge_specification != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_specification to guard\n                                    JavaSDM.ensure (guard.equals (_edge_specification.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_specification to spec\n                                    JavaSDM.ensure (spec.equals (_edge_specification.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_243(
			EMoflonEdge _edge_specification);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_137464 = null;\n      NormalStep __DEC_alt_stepAlternative_425163 = null;\n      Flow __DEC_step_steps_410824 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_296808 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_296808 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_steps is really bound\n         JavaSDM.ensure ( _edge_steps != null );\n         // bind object\n         _TmpObject = _edge_steps.getSrc ();\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_steps.getTrg ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // check link steps from step to flow\n         JavaSDM.ensure (flow.equals (step.eContainer()\n         ));\n\n         // check link useCases from useCase to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_137464 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_137464 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_137464 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_137464.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_137464 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_137464.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_425163 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_425163 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_425163 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_425163.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_425163 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_425163.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_410824 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_410824 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_410824 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_410824.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_410824 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_410824.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_410824 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_410824.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_296808\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_296808 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_296808.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_296808 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_296808.next ();\n\n                           // check object __DEC_altFlow_ref_296808 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_296808 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_296808 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_296808.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_steps is really bound\n                  JavaSDM.ensure ( _edge_steps != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object packageDeclaration is really bound\n                  JavaSDM.ensure ( packageDeclaration != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link actors from actor to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_steps to flow\n                  JavaSDM.ensure (flow.equals (_edge_steps.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_steps to step\n                  JavaSDM.ensure (step.equals (_edge_steps.getTrg ()\n                  ));\n\n                  // check link useCases from useCase to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,actor,flow,step,alt,altFlow,useCase,packageDeclaration);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_49(EMoflonEdge _edge_steps);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_281282 = null;\n      NormalStep __DEC_alt_stepAlternative_821262 = null;\n      Flow __DEC_step_steps_197827 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_409019 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_409019 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      PackageDeclaration packageDeclaration = null;\n      Actor actor = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_actor is really bound\n         JavaSDM.ensure ( _edge_actor != null );\n         // bind object\n         _TmpObject = _edge_actor.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_actor.getTrg ();\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n\n         // check link actor from step to actor\n         JavaSDM.ensure (actor.equals (step.getActor ()\n         ));\n\n         // bind object\n         packageDeclaration = actor.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) actor.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getActors().contains(actor));\n\n         // check link useCases from useCase to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_281282 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_281282 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_281282 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_281282.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_281282 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_281282.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_821262 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_821262 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_821262 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_821262.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_821262 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_821262.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_197827 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_197827 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_197827 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_197827.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_197827 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_197827.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_197827 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_197827.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_409019\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_409019 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_409019.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_409019 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_409019.next ();\n\n                           // check object __DEC_altFlow_ref_409019 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_409019 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_409019 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_409019.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_actor is really bound\n                  JavaSDM.ensure ( _edge_actor != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object packageDeclaration is really bound\n                  JavaSDM.ensure ( packageDeclaration != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link actors from actor to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_actor to step\n                  JavaSDM.ensure (step.equals (_edge_actor.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_actor to actor\n                  JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n                  ));\n\n                  // check link useCases from useCase to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,actor,flow,step,alt,altFlow,useCase,packageDeclaration);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_50(EMoflonEdge _edge_actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_380664 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_963936 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_77264 = null;\n      Interaction __DEC_operand_enclosingInteraction_36348 = null;\n      InteractionOperand __DEC_combo_fragment_682717 = null;\n      InteractionOperand __DEC_messageReceive_fragment_116137 = null;\n      InteractionOperand __DEC_messageSend_fragment_584571 = null;\n      InteractionOperand __DEC_operand_fragment_707976 = null;\n      Constraint __DEC_spec_specification_535116 = null;\n      InteractionOperand __DEC_guard_guard_175086 = null;\n      CombinedFragment __DEC_operand_operand_536055 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_140373 = null;\n      Message __DEC_messageReceive_receiveEvent_140373 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_825132 = null;\n      Message __DEC_messageSend_receiveEvent_825132 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_717715 = null;\n      Message __DEC_messageReceive_sendEvent_717715 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_620429 = null;\n      Message __DEC_messageSend_sendEvent_620429 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_778955 = null;\n      MessageEnd __DEC_message_message_778955 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sendEvent is really bound\n         JavaSDM.ensure ( _edge_sendEvent != null );\n         // bind object\n         _TmpObject = _edge_sendEvent.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link src from _edge_sendEvent to message\n         JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to parentCombo\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                     // ensure correct type and really bound of object parentCombo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     parentCombo = (CombinedFragment) _TmpObject;\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object combo is really bound\n                           JavaSDM.ensure ( combo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_380664 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_380664 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_380664 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_380664 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_380664.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_963936 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_963936 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_963936 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_963936 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_963936.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_77264 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_77264 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_77264 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_77264 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_77264.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_36348 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_36348 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_36348 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_36348 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_36348.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_682717 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_682717 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_682717 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_682717 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_682717.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_682717 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_682717.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_116137 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_116137 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_116137 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_116137 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_116137.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_116137 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_116137.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_584571 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_584571 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_584571 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_584571 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_584571.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_584571 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_584571.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_707976 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_707976 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_707976 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_707976 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_707976.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_707976 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_707976.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_535116 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_535116 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_535116 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_535116.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_535116 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_535116.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_175086 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_175086 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_175086 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_175086.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_175086 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_175086.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_175086 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_175086.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_536055 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_536055 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_536055 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_536055.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_536055 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_536055.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_536055 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_536055.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_140373\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_140373 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_140373.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_140373 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_140373.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_140373 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_140373 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_140373 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_140373.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_825132\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_825132 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_825132.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_825132 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_825132.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_825132 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_825132 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_825132 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_825132.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_717715\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_717715 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_717715.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_717715 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_717715.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_717715 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_717715 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_717715 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_717715.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_620429\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_620429 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_620429.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_620429 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_620429.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_620429 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_620429 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_620429 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_620429.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_778955\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_778955 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_778955.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_778955 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_778955.next ();\n\n                                       // check object __DEC_message_message_778955 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_778955 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_778955 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_778955.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_778955 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_778955.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_sendEvent is really bound\n                              JavaSDM.ensure ( _edge_sendEvent != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_sendEvent to message\n                              JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n                              ));\n\n                              // check link trg from _edge_sendEvent to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_sendEvent.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_244(
			EMoflonEdge _edge_sendEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_866744 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_714710 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_542415 = null;\n      Interaction __DEC_operand_enclosingInteraction_710085 = null;\n      InteractionOperand __DEC_combo_fragment_468977 = null;\n      InteractionOperand __DEC_messageReceive_fragment_931835 = null;\n      InteractionOperand __DEC_messageSend_fragment_857007 = null;\n      InteractionOperand __DEC_operand_fragment_237812 = null;\n      Constraint __DEC_spec_specification_802616 = null;\n      InteractionOperand __DEC_guard_guard_716438 = null;\n      CombinedFragment __DEC_operand_operand_656365 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_88869 = null;\n      Message __DEC_messageReceive_receiveEvent_88869 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_574806 = null;\n      Message __DEC_messageSend_receiveEvent_574806 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_320075 = null;\n      Message __DEC_messageReceive_sendEvent_320075 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_579210 = null;\n      Message __DEC_messageSend_sendEvent_579210 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_503297 = null;\n      MessageEnd __DEC_message_message_503297 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_receiveEvent is really bound\n         JavaSDM.ensure ( _edge_receiveEvent != null );\n         // bind object\n         _TmpObject = _edge_receiveEvent.getSrc ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link trg from _edge_receiveEvent to messageReceive\n         JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link lifeline from line to interaction\n               JavaSDM.ensure (interaction.equals (line.getInteraction ()\n               ));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to parentCombo\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                     // ensure correct type and really bound of object parentCombo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     parentCombo = (CombinedFragment) _TmpObject;\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object combo is really bound\n                           JavaSDM.ensure ( combo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_866744 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_866744 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_866744 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_866744 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_866744.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_714710 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_714710 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_714710 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_714710 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_714710.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_542415 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_542415 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_542415 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_542415 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_542415.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_710085 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_710085 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_710085 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_710085 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_710085.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_468977 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_468977 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_468977 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_468977 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_468977.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_468977 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_468977.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_931835 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_931835 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_931835 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_931835 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_931835.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_931835 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_931835.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_857007 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_857007 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_857007 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_857007 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_857007.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_857007 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_857007.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_237812 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_237812 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_237812 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_237812 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_237812.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_237812 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_237812.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_802616 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_802616 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_802616 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_802616.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_802616 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_802616.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_716438 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_716438 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_716438 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_716438.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_716438 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_716438.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_716438 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_716438.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_656365 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_656365 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_656365 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_656365.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_656365 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_656365.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_656365 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_656365.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_88869\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_88869 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_88869.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_88869 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_88869.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_88869 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_88869 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_88869 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_88869.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_574806\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_574806 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_574806.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_574806 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_574806.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_574806 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_574806 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_574806 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_574806.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_320075\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_320075 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_320075.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_320075 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_320075.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_320075 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_320075 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_320075 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_320075.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_579210\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_579210 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_579210.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_579210 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_579210.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_579210 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_579210 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_579210 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_579210.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_503297\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_503297 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_503297.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_503297 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_503297.next ();\n\n                                       // check object __DEC_message_message_503297 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_503297 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_503297 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_503297.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_503297 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_503297.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_receiveEvent is really bound\n                              JavaSDM.ensure ( _edge_receiveEvent != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_receiveEvent to message\n                              JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n                              ));\n\n                              // check link trg from _edge_receiveEvent to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_245(
			EMoflonEdge _edge_receiveEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_374541 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_89067 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_489311 = null;\n      Interaction __DEC_operand_enclosingInteraction_340920 = null;\n      InteractionOperand __DEC_combo_fragment_672106 = null;\n      InteractionOperand __DEC_messageReceive_fragment_949913 = null;\n      InteractionOperand __DEC_messageSend_fragment_933497 = null;\n      InteractionOperand __DEC_operand_fragment_357669 = null;\n      Constraint __DEC_spec_specification_61073 = null;\n      InteractionOperand __DEC_guard_guard_248254 = null;\n      CombinedFragment __DEC_operand_operand_62831 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_48069 = null;\n      Message __DEC_messageReceive_receiveEvent_48069 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_319546 = null;\n      Message __DEC_messageSend_receiveEvent_319546 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_639803 = null;\n      Message __DEC_messageReceive_sendEvent_639803 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_820080 = null;\n      Message __DEC_messageSend_sendEvent_820080 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_209938 = null;\n      MessageEnd __DEC_message_message_209938 = null;\n      Match match = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_interaction is really bound\n         JavaSDM.ensure ( _edge_interaction != null );\n         // bind object\n         _TmpObject = _edge_interaction.getTrg ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link lifeline from interaction to line\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n         while ( fujaba__IterInteractionToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link covered from line to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           parentOperand = messageSend.getEnclosingOperand ();\n\n                           // check object parentOperand is really bound\n                           JavaSDM.ensure ( parentOperand != null );\n\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // check link fragment from combo to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                           ));\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // bind object\n                           parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                           // check object parentCombo is really bound\n                           JavaSDM.ensure ( parentCombo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link src from _edge_interaction to message\n                           JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                           ));\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // check link covered from parentOperand to line\n                           JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_374541 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_374541 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_374541 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_374541 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_374541.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_89067 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_89067 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_89067 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_89067 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_89067.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_489311 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_489311 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_489311 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_489311 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_489311.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_340920 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_340920 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_340920 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_340920 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_340920.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_672106 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_672106 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_672106 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_672106 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_672106.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_672106 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_672106.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_949913 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_949913 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_949913 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_949913 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_949913.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_949913 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_949913.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_933497 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_933497 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_933497 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_933497 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_933497.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_933497 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_933497.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_357669 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_357669 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_357669 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_357669 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_357669.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_357669 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_357669.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_61073 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_61073 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_61073 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_61073.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_61073 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_61073.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_248254 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_248254 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_248254 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_248254.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_248254 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_248254.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_248254 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_248254.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_62831 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_62831 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_62831 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_62831.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_62831 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_62831.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_62831 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_62831.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_48069\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_48069 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_48069.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_48069 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_48069.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_48069 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_48069 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_48069 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_48069.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_319546\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_319546 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_319546.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_319546 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_319546.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_319546 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_319546 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_319546 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_319546.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_639803\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_639803 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_639803.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_639803 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_639803.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_639803 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_639803 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_639803 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_639803.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_820080\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_820080 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_820080.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_820080 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_820080.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_820080 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_820080 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_820080 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_820080.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_209938\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_209938 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_209938.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_209938 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_209938.next ();\n\n                                       // check object __DEC_message_message_209938 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_209938 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_209938 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_209938.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_209938 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_209938.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_interaction is really bound\n                              JavaSDM.ensure ( _edge_interaction != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_interaction to message\n                              JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                              ));\n\n                              // check link trg from _edge_interaction to interaction\n                              JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                              ));\n\n                              // check link covered from messageSend to line\n                              JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from parentOperand to line\n                              JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_246(
			EMoflonEdge _edge_interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_409594 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_88336 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_219625 = null;\n      Interaction __DEC_operand_enclosingInteraction_255763 = null;\n      InteractionOperand __DEC_combo_fragment_147907 = null;\n      InteractionOperand __DEC_messageReceive_fragment_451240 = null;\n      InteractionOperand __DEC_messageSend_fragment_404238 = null;\n      InteractionOperand __DEC_operand_fragment_590703 = null;\n      Constraint __DEC_spec_specification_312040 = null;\n      InteractionOperand __DEC_guard_guard_568663 = null;\n      CombinedFragment __DEC_operand_operand_156656 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_554290 = null;\n      Message __DEC_messageReceive_receiveEvent_554290 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_68787 = null;\n      Message __DEC_messageSend_receiveEvent_68787 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_72978 = null;\n      Message __DEC_messageReceive_sendEvent_72978 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_179920 = null;\n      Message __DEC_messageSend_sendEvent_179920 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_772739 = null;\n      MessageEnd __DEC_message_message_772739 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionTo_edge_interaction = null;\n      EMoflonEdge _edge_interaction = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link trg from interaction to _edge_interaction\n         fujaba__Success = false;\n\n         fujaba__IterInteractionTo_edge_interaction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,EMoflonEdge.class,\"trg\")).iterator ();\n\n         while ( fujaba__IterInteractionTo_edge_interaction.hasNext () )\n         {\n            try\n            {\n               _edge_interaction = (EMoflonEdge) fujaba__IterInteractionTo_edge_interaction.next ();\n\n               // check object _edge_interaction is really bound\n               JavaSDM.ensure ( _edge_interaction != null );\n               // check isomorphic binding between objects _edge_message and _edge_interaction \n               JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n               // iterate to-many link lifeline from interaction to line\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n               while ( fujaba__IterInteractionToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // iterate to-many link covered from line to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageSend = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           parentOperand = messageSend.getEnclosingOperand ();\n\n                           // check object parentOperand is really bound\n                           JavaSDM.ensure ( parentOperand != null );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to parentOperand\n                           JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // bind object\n                           parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                           // check object parentCombo is really bound\n                           JavaSDM.ensure ( parentCombo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                           // check link src from _edge_interaction to message\n                           JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                           ));\n\n                           // check link trg from _edge_message to message\n                           JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                           ));\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // check link covered from parentOperand to line\n                           JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // bind object\n                                 combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object combo is really bound\n                                 JavaSDM.ensure ( combo != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects parentCombo and combo \n                                 JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                 // check link fragment from combo to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_409594 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_409594 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_409594 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_409594 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_409594.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_88336 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_88336 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_88336 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_88336 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_88336.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_219625 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_219625 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_219625 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_219625 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_219625.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_255763 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_255763 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_255763 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_255763 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_255763.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_147907 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_147907 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_147907 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_147907 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_147907.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_147907 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_147907.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_451240 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_451240 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_451240 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_451240 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_451240.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_451240 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_451240.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_404238 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_404238 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_404238 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_404238 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_404238.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_404238 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_404238.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_590703 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_590703 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_590703 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_590703 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_590703.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_590703 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_590703.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_312040 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_312040 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_312040 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_312040.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_312040 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_312040.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_568663 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_568663 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_568663 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_568663.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_568663 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_568663.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_568663 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_568663.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_156656 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_156656 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_156656 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_156656.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_156656 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_156656.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_156656 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_156656.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_554290\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_554290 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_554290.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_554290 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_554290.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_554290 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_554290 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_554290 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_554290.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_68787\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_68787 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_68787.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_68787 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_68787.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_68787 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_68787 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_68787 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_68787.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_72978\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_72978 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_72978.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_72978 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_72978.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_72978 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_72978 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_72978 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_72978.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_179920\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_179920 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_179920.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_179920 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_179920.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_179920 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_179920 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_179920 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_179920.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_772739\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_772739 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_772739.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_772739 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_772739.next ();\n\n                                             // check object __DEC_message_message_772739 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_772739 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_772739 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_772739.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_772739 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_772739.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_interaction is really bound\n                                    JavaSDM.ensure ( _edge_interaction != null );\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_message and _edge_interaction \n                                    JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_interaction to message\n                                    JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_message to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_interaction to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_247(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_964496 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_598034 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_443774 = null;\n      Interaction __DEC_operand_enclosingInteraction_412482 = null;\n      InteractionOperand __DEC_combo_fragment_386711 = null;\n      InteractionOperand __DEC_messageReceive_fragment_224003 = null;\n      InteractionOperand __DEC_messageSend_fragment_804975 = null;\n      InteractionOperand __DEC_operand_fragment_615392 = null;\n      Constraint __DEC_spec_specification_977382 = null;\n      InteractionOperand __DEC_guard_guard_871929 = null;\n      CombinedFragment __DEC_operand_operand_207269 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_697237 = null;\n      Message __DEC_messageReceive_receiveEvent_697237 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_240824 = null;\n      Message __DEC_messageSend_receiveEvent_240824 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_238107 = null;\n      Message __DEC_messageReceive_sendEvent_238107 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_761079 = null;\n      Message __DEC_messageSend_sendEvent_761079 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_852764 = null;\n      MessageEnd __DEC_message_message_852764 = null;\n      Match match = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterMessageSendToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link covered from messageSend to line\n         fujaba__Success = false;\n\n         fujaba__IterMessageSendToLine = new ArrayList(messageSend.getCovered()).iterator ();\n\n         while ( fujaba__IterMessageSendToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterMessageSendToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // check link covered from parentOperand to line\n               JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_enclosingInteraction_964496 = combo.getEnclosingInteraction ();\n\n                           // check object __DEC_combo_enclosingInteraction_964496 is really bound\n                           JavaSDM.ensure ( __DEC_combo_enclosingInteraction_964496 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_enclosingInteraction_964496 and interaction \n                           JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_964496.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_enclosingInteraction_598034 = messageReceive.getEnclosingInteraction ();\n\n                           // check object __DEC_messageReceive_enclosingInteraction_598034 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_598034 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_598034 and interaction \n                           JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_598034.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_enclosingInteraction_443774 = messageSend.getEnclosingInteraction ();\n\n                           // check object __DEC_messageSend_enclosingInteraction_443774 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_443774 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_443774 and interaction \n                           JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_443774.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_412482 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_412482 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_412482 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_412482 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_412482.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_386711 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_386711 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_386711 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_386711 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_386711.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_386711 and parentOperand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_386711.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_224003 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_224003 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_224003 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_224003 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_224003.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_224003 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_224003.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_804975 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_804975 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_804975 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_804975 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_804975.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_804975 and parentOperand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_804975.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_615392 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_615392 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_615392 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_615392 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_615392.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_615392 and parentOperand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_615392.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_977382 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_977382 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_977382 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_977382.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_977382 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_977382.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_871929 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_871929 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_871929 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_871929.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_871929 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_871929.equals (operand) );\n\n                           // check isomorphic binding between objects __DEC_guard_guard_871929 and parentOperand \n                           JavaSDM.ensure ( !__DEC_guard_guard_871929.equals (parentOperand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_207269 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_207269 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_207269 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_207269.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_207269 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_207269.equals (combo) );\n\n                           // check isomorphic binding between objects __DEC_operand_operand_207269 and parentCombo \n                           JavaSDM.ensure ( !__DEC_operand_operand_207269.equals (parentCombo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_697237\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_697237 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_697237.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_697237 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_697237.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_697237 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_697237 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_697237 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_697237.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_240824\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_240824 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_240824.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_240824 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_240824.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_240824 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_240824 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_240824 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_240824.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_238107\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_238107 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_238107.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_238107 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_238107.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_238107 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_238107 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_238107 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_238107.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_761079\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_761079 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_761079.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_761079 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_761079.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_761079 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_761079 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_761079 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_761079.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_852764\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_852764 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_852764.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_852764 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_852764.next ();\n\n                                 // check object __DEC_message_message_852764 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_852764 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_852764 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_852764.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_852764 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_852764.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_message is really bound\n                        JavaSDM.ensure ( _edge_message != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object parentCombo is really bound\n                        JavaSDM.ensure ( parentCombo != null );\n                        // check object parentOperand is really bound\n                        JavaSDM.ensure ( parentOperand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects parentCombo and combo \n                        JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check isomorphic binding between objects parentOperand and operand \n                        JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                        // check link fragment from combo to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageReceive to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from messageSend to parentOperand\n                        JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                        ));\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to parentOperand\n                        JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link guard from parentOperand to guard\n                        JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                        )));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link operand from parentOperand to parentCombo\n                        JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                        ));\n\n                        // check link operand from operand to parentCombo\n                        JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                        .contains (parentCombo)));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_message to messageSend\n                        JavaSDM.ensure (messageSend.equals (_edge_message.getSrc ()\n                        ));\n\n                        // check link trg from _edge_message to message\n                        JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                        ));\n\n                        // check link covered from messageSend to line\n                        JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // check link covered from parentCombo to line\n                        JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                        // check link covered from parentOperand to line\n                        JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_248(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_919114 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_848078 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_839623 = null;\n      Interaction __DEC_operand_enclosingInteraction_224764 = null;\n      InteractionOperand __DEC_combo_fragment_123108 = null;\n      InteractionOperand __DEC_messageReceive_fragment_691233 = null;\n      InteractionOperand __DEC_messageSend_fragment_182136 = null;\n      InteractionOperand __DEC_operand_fragment_868680 = null;\n      Constraint __DEC_spec_specification_177994 = null;\n      InteractionOperand __DEC_guard_guard_830631 = null;\n      CombinedFragment __DEC_operand_operand_751146 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_912137 = null;\n      Message __DEC_messageReceive_receiveEvent_912137 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_277526 = null;\n      Message __DEC_messageSend_receiveEvent_277526 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_722726 = null;\n      Message __DEC_messageReceive_sendEvent_722726 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_668263 = null;\n      Message __DEC_messageSend_sendEvent_668263 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_84355 = null;\n      MessageEnd __DEC_message_message_84355 = null;\n      Match match = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterLineToParentCombo = null;\n      CombinedFragment parentCombo = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Interaction interaction = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getTrg ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link src from _edge_message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n         ));\n\n         // iterate to-many link lifeline from interaction to line\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n         while ( fujaba__IterInteractionToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link covered from messageSend to line\n               JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                     // check object combo is really bound\n                     JavaSDM.ensure ( combo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(combo.getOperand().contains(operand));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link covered from line to parentCombo\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToParentCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToParentCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToParentCombo.next ();\n\n                           // ensure correct type and really bound of object parentCombo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           parentCombo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // iterate to-many link covered from line to parentOperand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToParentOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                                 // ensure correct type and really bound of object parentOperand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 parentOperand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // check link fragment from combo to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                 ));\n\n                                 // check link fragment from messageReceive to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                 ));\n\n                                 // check link fragment from messageSend to parentOperand\n                                 JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                 ));\n\n                                 // check link operand from parentOperand to parentCombo\n                                 JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_919114 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_919114 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_919114 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_919114 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_919114.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_848078 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_848078 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_848078 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_848078 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_848078.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_839623 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_839623 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_839623 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_839623 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_839623.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_224764 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_224764 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_224764 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_224764 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_224764.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_123108 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_123108 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_123108 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_123108 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_123108.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_123108 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_123108.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_691233 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_691233 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_691233 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_691233 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_691233.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_691233 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_691233.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_182136 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_182136 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_182136 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_182136 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_182136.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_182136 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_182136.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_868680 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_868680 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_868680 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_868680 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_868680.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_868680 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_868680.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_177994 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_177994 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_177994 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_177994.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_177994 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_177994.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_830631 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_830631 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_830631 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_830631.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_830631 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_830631.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_830631 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_830631.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_751146 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_751146 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_751146 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_751146.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_751146 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_751146.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_751146 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_751146.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_912137\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_912137 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_912137.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_912137 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_912137.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_912137 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_912137 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_912137 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_912137.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_277526\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_277526 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_277526.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_277526 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_277526.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_277526 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_277526 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_277526 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_277526.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_722726\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_722726 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_722726.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_722726 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_722726.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_722726 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_722726 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_722726 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_722726.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_668263\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_668263 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_668263.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_668263 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_668263.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_668263 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_668263 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_668263 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_668263.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_84355\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_84355 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_84355.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_84355 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_84355.next ();\n\n                                             // check object __DEC_message_message_84355 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_84355 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_84355 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_84355.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_84355 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_84355.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from messageSend to line\n                                    JavaSDM.ensure (messageSend.getCovered ().contains (line));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from parentOperand to line\n                                    JavaSDM.ensure (parentOperand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,line,messageSend,parentOperand,messageReceive,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_249(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // AltSysStepNFToComboRule
