/**
 */
package UseCaseToModalSequenceDiagramIntegration.Rules;

import ModalSequenceDiagram.CombinedFragment;
import ModalSequenceDiagram.Constraint;
import ModalSequenceDiagram.Interaction;
import ModalSequenceDiagram.InteractionConstraint;
import ModalSequenceDiagram.InteractionOperand;
import ModalSequenceDiagram.Lifeline;
import ModalSequenceDiagram.LiteralString;
import ModalSequenceDiagram.Message;
import ModalSequenceDiagram.MessageEnd;
import ModalSequenceDiagram.MessageOccurrenceSpecification;
import ModalSequenceDiagram.ModalSequenceDiagramFactory;
import ModalSequenceDiagram.Model;

import TGGLanguage.csp.*;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NamedFlow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import UseCaseToModalSequenceDiagramIntegration.ActorToLifeline;
import UseCaseToModalSequenceDiagramIntegration.FlowToInteractionFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToMessage;
import UseCaseToModalSequenceDiagramIntegration.PackageDeclarationToPackage;
import UseCaseToModalSequenceDiagramIntegration.ParallelStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.StepAlternativeToInteractionOperand;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToInteraction;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToModalSequenceDiagramIntegrationFactory;
import UseCaseToModalSequenceDiagramIntegration.UseCasesModelToModel;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Alt Step NF To Combo Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see UseCaseToModalSequenceDiagramIntegration.Rules.RulesPackage#getAltStepNFToComboRule()
 * @model
 * @generated
 */
public interface AltStepNFToComboRule extends AbstractRule, AltStepToComboRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __step_actor_actor\n            __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __flow_steps_step\n            __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_stepAlternative_alt\n            __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __alt_ref_altFlow\n            __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __step_stepAlternative_alt\n            __step_stepAlternative_alt.setName (\"stepAlternative\");\n            // assign attribute __alt_ref_altFlow\n            __alt_ref_altFlow.setName (\"ref\");\n            // assign attribute __flow_steps_step\n            __flow_steps_step.setName (\"steps\");\n            // assign attribute __step_actor_actor\n            __step_actor_actor.setName (\"actor\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,alt,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_actor_actor,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__flow_steps_step,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,altFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_stepAlternative_alt,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,step,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__alt_ref_altFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            __flow_steps_step.setSrc( flow);\n\n\n            // create link\n            __flow_steps_step.setTrg( step);\n\n\n            // create link\n            __step_actor_actor.setSrc( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setSrc( step);\n\n\n            // create link\n            __alt_ref_altFlow.setSrc( alt);\n\n\n            // create link\n            __step_stepAlternative_alt.setTrg( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setTrg( altFlow);\n\n\n            // create link\n            __step_actor_actor.setTrg( actor);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __useCase_flows_flow\n            __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __useCase_flows_flow\n            __useCase_flows_flow.setName (\"flows\");\n            // assign attribute __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor.setName (\"actors\");\n            // assign attribute __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,packageDeclaration,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,actor,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_useCases_useCase,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__useCase_flows_flow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,flow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,useCase,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_actors_actor,\"contextEdges\");\n\n            // create link\n            __useCase_flows_flow.setTrg( flow);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n            // create link\n            __useCase_flows_flow.setSrc( useCase);\n\n\n            // create link\n            __packageDeclaration_actors_actor.setTrg( actor);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n            // create link\n            __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, NamedFlow flow, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, Actor actor, PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      PackageDeclaration packageDeclaration = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      CombinedFragment combo = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      InteractionOperand operand = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      NormalStepToMessage stepToMessage = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      InteractionConstraint guard = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      LiteralString spec = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge messageSend__enclosingOperand__parentOperand = null;\n      EMoflonEdge message__sendEvent__messageSend = null;\n      EMoflonEdge messageReceive__message__message = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge interaction__message__message = null;\n      EMoflonEdge parentOperand__fragment__messageSend = null;\n      EMoflonEdge guard__specification__spec = null;\n      EMoflonEdge line__coveredBy__parentOperand = null;\n      EMoflonEdge line__coveredBy__operand = null;\n      EMoflonEdge combo__enclosingOperand__parentOperand = null;\n      EMoflonEdge operand__guard__guard = null;\n      EMoflonEdge messageSend__message__message = null;\n      EMoflonEdge message__receiveEvent__messageReceive = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge parentOperand__fragment__messageReceive = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge parentOperand__covered__line = null;\n      EMoflonEdge message__interaction__interaction = null;\n      EMoflonEdge parentOperand__fragment__combo = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge combo__operand__operand = null;\n      EMoflonEdge operand__covered__line = null;\n      EMoflonEdge line__coveredBy__parentCombo = null;\n      EMoflonEdge messageReceive__enclosingOperand__parentOperand = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge parentCombo__covered__line = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object combo\n         combo = ModalSequenceDiagramFactory.eINSTANCE.createCombinedFragment();\n\n         // create object messageSend\n         messageSend = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object messageReceive\n         messageReceive = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object message\n         message = ModalSequenceDiagramFactory.eINSTANCE.createMessage();\n\n         // create object operand\n         operand = ModalSequenceDiagramFactory.eINSTANCE.createInteractionOperand();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object guard\n         guard = ModalSequenceDiagramFactory.eINSTANCE.createInteractionConstraint();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // create object spec\n         spec = ModalSequenceDiagramFactory.eINSTANCE.createLiteralString();\n\n         // assign attribute combo\n         combo.setInteractionOperator ((ModalSequenceDiagram.InteractionOperatorKind)csp.getValue(\"combo\",\"interactionOperator\"));\n         // assign attribute guard\n         guard.setName ((java.lang.String)csp.getValue(\"guard\",\"name\"));\n         // assign attribute spec\n         spec.setValue ((java.lang.String)csp.getValue(\"spec\",\"value\"));\n         // assign attribute message\n         message.setName ((java.lang.String)csp.getValue(\"message\",\"name\"));\n\n         // create link\n         combo.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         messageSend.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         messageReceive.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         line.getCoveredBy().add(parentOperand);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageSend,message,\"message\");\n\n         // create link\n         message.setSendEvent( messageSend);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageReceive,message,\"message\");\n\n         // create link\n         message.setReceiveEvent( messageReceive);\n\n\n         // create link\n         operand.getCovered().add(line);\n\n\n         // create link\n         parentCombo.getCovered().add(line);\n\n\n         // create link\n         \tcombo.getOperand().add(operand); // add link\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         \toperand.setGuard(guard); // add link to one\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         \tguard.setSpecification(spec); // add link to one\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         interaction.getMessage().add(message);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlowToOperand and actorToLine \n         JavaSDM.ensure ( !altFlowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToParentOperand and actorToLine \n         JavaSDM.ensure ( !flowToParentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects packageDeclaration and actorToLine \n         JavaSDM.ensure ( !packageDeclaration.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentCombo and actorToLine \n         JavaSDM.ensure ( !parentCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentOperand and actorToLine \n         JavaSDM.ensure ( !parentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects packageDeclaration and alt \n         JavaSDM.ensure ( !packageDeclaration.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlow \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and alternative1ToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects message and flowToParentOperand \n         JavaSDM.ensure ( !message.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToParentOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToParentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects packageDeclaration and guard \n         JavaSDM.ensure ( !packageDeclaration.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects packageDeclaration and message \n         JavaSDM.ensure ( !packageDeclaration.equals (message) );\n\n         // check isomorphic binding between objects parentCombo and message \n         JavaSDM.ensure ( !parentCombo.equals (message) );\n\n         // check isomorphic binding between objects parentOperand and message \n         JavaSDM.ensure ( !parentOperand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and packageDeclaration \n         JavaSDM.ensure ( !parentCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and packageDeclaration \n         JavaSDM.ensure ( !parentOperand.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects spec and packageDeclaration \n         JavaSDM.ensure ( !spec.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToCombo and packageDeclaration \n         JavaSDM.ensure ( !stepToCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and packageDeclaration \n         JavaSDM.ensure ( !stepToMessage.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToMessage and parentCombo \n         JavaSDM.ensure ( !stepToMessage.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and parentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object messageSend__enclosingOperand__parentOperand\n         messageSend__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__sendEvent__messageSend\n         message__sendEvent__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__message__message\n         messageReceive__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_stepAlternative_alt\n         __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __flow_steps_step\n         __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__message__message\n         interaction__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__messageSend\n         parentOperand__fragment__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object guard__specification__spec\n         guard__specification__spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentOperand\n         line__coveredBy__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__operand\n         line__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__enclosingOperand__parentOperand\n         combo__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__guard__guard\n         operand__guard__guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__message__message\n         messageSend__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __alt_ref_altFlow\n         __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_actor_actor\n         __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__covered__line\n         parentOperand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__interaction__interaction\n         message__interaction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__combo\n         parentOperand__fragment__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__operand__operand\n         combo__operand__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__line\n         operand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentCombo\n         line__coveredBy__parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentCombo__covered__line\n         parentCombo__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltStepNFToComboRule\");\n         // assign attribute parentOperand__fragment__messageSend\n         parentOperand__fragment__messageSend.setName (\"fragment\");\n         // assign attribute messageSend__enclosingOperand__parentOperand\n         messageSend__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive.setName (\"fragment\");\n         // assign attribute messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__parentOperand\n         line__coveredBy__parentOperand.setName (\"coveredBy\");\n         // assign attribute parentOperand__covered__line\n         parentOperand__covered__line.setName (\"covered\");\n         // assign attribute parentOperand__fragment__combo\n         parentOperand__fragment__combo.setName (\"fragment\");\n         // assign attribute combo__enclosingOperand__parentOperand\n         combo__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__parentCombo\n         line__coveredBy__parentCombo.setName (\"coveredBy\");\n         // assign attribute parentCombo__covered__line\n         parentCombo__covered__line.setName (\"covered\");\n         // assign attribute __step_stepAlternative_alt\n         __step_stepAlternative_alt.setName (\"stepAlternative\");\n         // assign attribute __alt_ref_altFlow\n         __alt_ref_altFlow.setName (\"ref\");\n         // assign attribute combo__operand__operand\n         combo__operand__operand.setName (\"operand\");\n         // assign attribute line__coveredBy__operand\n         line__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__line\n         operand__covered__line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute operand__guard__guard\n         operand__guard__guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute guard__specification__spec\n         guard__specification__spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute __flow_steps_step\n         __flow_steps_step.setName (\"steps\");\n         // assign attribute __step_actor_actor\n         __step_actor_actor.setName (\"actor\");\n         // assign attribute message__sendEvent__messageSend\n         message__sendEvent__messageSend.setName (\"sendEvent\");\n         // assign attribute message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive.setName (\"receiveEvent\");\n         // assign attribute message__interaction__interaction\n         message__interaction__interaction.setName (\"interaction\");\n         // assign attribute interaction__message__message\n         interaction__message__message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute messageSend__message__message\n         messageSend__message__message.setName (\"message\");\n         // assign attribute messageReceive__message__message\n         messageReceive__message__message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__sendEvent__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_stepAlternative_alt,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__flow_steps_step,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard__specification__spec,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__guard__guard,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__receiveEvent__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__alt_ref_altFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_actor_actor,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__interaction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__operand__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentCombo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentCombo__covered__line,\"createdEdges\");\n\n         // create link\n         __flow_steps_step.setSrc( flow);\n\n\n         // create link\n         line__coveredBy__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         messageSend__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__combo.setSrc( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         combo__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageSend.setSrc( parentOperand);\n\n\n         // create link\n         parentOperand__covered__line.setSrc( parentOperand);\n\n\n         // create link\n         messageSend__message__message.setSrc( messageSend);\n\n\n         // create link\n         message__sendEvent__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__enclosingOperand__parentOperand.setSrc( messageSend);\n\n\n         // create link\n         parentOperand__fragment__messageSend.setTrg( messageSend);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         messageReceive__message__message.setSrc( messageReceive);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         parentOperand__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__parentOperand.setSrc( line);\n\n\n         // create link\n         parentCombo__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__operand.setSrc( line);\n\n\n         // create link\n         line__coveredBy__parentCombo.setSrc( line);\n\n\n         // create link\n         operand__covered__line.setTrg( line);\n\n\n         // create link\n         combo__operand__operand.setSrc( combo);\n\n\n         // create link\n         combo__enclosingOperand__parentOperand.setSrc( combo);\n\n\n         // create link\n         parentOperand__fragment__combo.setTrg( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         line__coveredBy__parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         parentCombo__covered__line.setSrc( parentCombo);\n\n\n         // create link\n         __step_actor_actor.setSrc( step);\n\n\n         // create link\n         __flow_steps_step.setTrg( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         __step_stepAlternative_alt.setSrc( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         __alt_ref_altFlow.setSrc( alt);\n\n\n         // create link\n         __step_stepAlternative_alt.setTrg( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         line__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         operand__guard__guard.setSrc( operand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         combo__operand__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         operand__covered__line.setSrc( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         guard__specification__spec.setSrc( guard);\n\n\n         // create link\n         operand__guard__guard.setTrg( guard);\n\n\n         // create link\n         guard__specification__spec.setTrg( spec);\n\n\n         // create link\n         __alt_ref_altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         message__sendEvent__messageSend.setSrc( message);\n\n\n         // create link\n         interaction__message__message.setTrg( message);\n\n\n         // create link\n         messageSend__message__message.setTrg( message);\n\n\n         // create link\n         messageReceive__message__message.setTrg( message);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setSrc( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setSrc( message);\n\n\n         // create link\n         message__interaction__interaction.setTrg( interaction);\n\n\n         // create link\n         interaction__message__message.setSrc( interaction);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         __step_actor_actor.setTrg( actor);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,flow,parentOperand,flowToParentOperand,messageSend,messageReceive,line,combo,parentCombo,step,alt,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,interaction,stepToMessage,actor,actorToLine,packageDeclaration);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Actor actor = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      PackageDeclaration packageDeclaration = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      CSP csp = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterUseCaseToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterFlowToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Lifeline line = null;\n      Iterator fujaba__IterActorToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (match.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (match.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (match.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link source from actor to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterActorToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(actor,ActorToLifeline.class,\"source\")).iterator ();\n\n         while ( fujaba__IterActorToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterActorToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               line = actorToLine.getTarget ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n\n               // iterate to-many link source from flow to flowToParentOperand\n               fujaba__Success = false;\n\n               fujaba__IterFlowToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(flow,FlowToInteractionFragment.class,\"source\")).iterator ();\n\n               while ( fujaba__IterFlowToFlowToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     flowToParentOperand = (FlowToInteractionFragment) fujaba__IterFlowToFlowToParentOperand.next ();\n\n                     // check object flowToParentOperand is really bound\n                     JavaSDM.ensure ( flowToParentOperand != null );\n                     // bind object\n                     _TmpObject = flowToParentOperand.getTarget ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n\n                     // iterate to-many link source from useCase to useCaseToInteraction\n                     fujaba__Success = false;\n\n                     fujaba__IterUseCaseToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(useCase,UseCaseToInteraction.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterUseCaseToUseCaseToInteraction.hasNext () )\n                     {\n                        try\n                        {\n                           useCaseToInteraction = (UseCaseToInteraction) fujaba__IterUseCaseToUseCaseToInteraction.next ();\n\n                           // check object useCaseToInteraction is really bound\n                           JavaSDM.ensure ( useCaseToInteraction != null );\n                           // bind object\n                           interaction = useCaseToInteraction.getTarget ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // story node \'find context\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object actor is really bound\n                              JavaSDM.ensure ( actor != null );\n                              // check object actorToLine is really bound\n                              JavaSDM.ensure ( actorToLine != null );\n                              // check object alt is really bound\n                              JavaSDM.ensure ( alt != null );\n                              // check object altFlow is really bound\n                              JavaSDM.ensure ( altFlow != null );\n                              // check object flow is really bound\n                              JavaSDM.ensure ( flow != null );\n                              // check object flowToParentOperand is really bound\n                              JavaSDM.ensure ( flowToParentOperand != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object packageDeclaration is really bound\n                              JavaSDM.ensure ( packageDeclaration != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object step is really bound\n                              JavaSDM.ensure ( step != null );\n                              // check object useCase is really bound\n                              JavaSDM.ensure ( useCase != null );\n                              // check object useCaseToInteraction is really bound\n                              JavaSDM.ensure ( useCaseToInteraction != null );\n                              // check isomorphic binding between objects flow and altFlow \n                              JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                              // check link actor from step to actor\n                              JavaSDM.ensure (actor.equals (step.getActor ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link ref from alt to altFlow\n                              JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                              ));\n\n                              // check link actors from actor to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                              ));\n\n                              // check link flows from flow to useCase\n                              JavaSDM.ensure (useCase.equals (flow.eContainer()\n                              ));\n\n                              // bind object\n                              parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n\n                              // check if contained via correct reference\n                              JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                              // check link source from actorToLine to actor\n                              JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                              ));\n\n                              // check link source from flowToParentOperand to flow\n                              JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                              ));\n\n                              // check link source from useCaseToInteraction to useCase\n                              JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                              ));\n\n                              // check link stepAlternative from alt to step\n                              JavaSDM.ensure (step.equals (alt.eContainer()\n                              ));\n\n                              // check link steps from step to flow\n                              JavaSDM.ensure (flow.equals (step.eContainer()\n                              ));\n\n                              // check link target from actorToLine to line\n                              JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                              ));\n\n                              // check link target from flowToParentOperand to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                              ));\n\n                              // check link target from useCaseToInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                              ));\n\n                              // check link useCases from useCase to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                              ));\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __flow_steps_step\n                              __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_target_line\n                              __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __step_actor_actor\n                              __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __step_stepAlternative_alt\n                              __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __alt_ref_altFlow\n                              __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_source_actor\n                              __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow.setName (\"source\");\n                              // assign attribute __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand.setName (\"target\");\n                              // assign attribute __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand.setName (\"operand\");\n                              // assign attribute __step_stepAlternative_alt\n                              __step_stepAlternative_alt.setName (\"stepAlternative\");\n                              // assign attribute __alt_ref_altFlow\n                              __alt_ref_altFlow.setName (\"ref\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __flow_steps_step\n                              __flow_steps_step.setName (\"steps\");\n                              // assign attribute __step_actor_actor\n                              __step_actor_actor.setName (\"actor\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n                              // assign attribute __actorToLine_source_actor\n                              __actorToLine_source_actor.setName (\"source\");\n                              // assign attribute __actorToLine_target_line\n                              __actorToLine_target_line.setName (\"target\");\n                              // assign attribute __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor.setName (\"actors\");\n                              // assign attribute __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              __flow_steps_step.setSrc( flow);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              __actorToLine_target_line.setTrg( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                              // create link\n                              __flow_steps_step.setTrg( step);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(step);\n\n\n                              // create link\n                              __step_actor_actor.setSrc( step);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setSrc( step);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(alt);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setTrg( alt);\n\n\n                              // create link\n                              __alt_ref_altFlow.setSrc( alt);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(altFlow);\n\n\n                              // create link\n                              __alt_ref_altFlow.setTrg( altFlow);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __step_actor_actor.setTrg( actor);\n\n\n                              // create link\n                              __actorToLine_source_actor.setTrg( actor);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                              // create link\n                              __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                              // create link\n                              __actorToLine_target_line.setSrc( actorToLine);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__alt_ref_altFlow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_stepAlternative_alt,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_actor_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,flow,parentOperand,flowToParentOperand,line,parentCombo,step,alt,altFlow,useCase,useCaseToInteraction,interaction,actor,actorToLine,packageDeclaration));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"AltStepNFToComboRule\");\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n\n                                    // create link\n                                    ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"flow\", flow);\nmatch.registerObject(\"step\", step);\nmatch.registerObject(\"alt\", alt);\nmatch.registerObject(\"altFlow\", altFlow);\nmatch.registerObject(\"useCase\", useCase);\nmatch.registerObject(\"actor\", actor);\nmatch.registerObject(\"packageDeclaration\", packageDeclaration);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase, Actor actor,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase, Actor actor,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", true, csp);\r\nvar_altFlow_name.setValue(altFlow.getName());\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", true, csp);\r\nvar_alt_condition.setValue(alt.getCondition());\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", true, csp);\r\nvar_step_name.setValue(step.getName());\r\nvar_step_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", csp);\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", csp);\r\nvar_spec_value.setType(\"\");\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", csp);\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", csp);\r\nvar_message_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();EqInterOperKind eqInterOperKind = new EqInterOperKind();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eqInterOperKind);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"altFlow\",altFlow);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			NamedFlow flow, InteractionOperand parentOperand,
			FlowToInteractionFragment flowToParentOperand, Lifeline line,
			CombinedFragment parentCombo, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, UseCaseToInteraction useCaseToInteraction,
			Interaction interaction, Actor actor, ActorToLifeline actorToLine,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"actorToLine\", actorToLine);\nruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject flow,
			EObject parentOperand, EObject flowToParentOperand,
			EObject messageSend, EObject messageReceive, EObject line,
			EObject combo, EObject parentCombo, EObject step, EObject alt,
			EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message, EObject interaction,
			EObject stepToMessage, EObject actor, EObject actorToLine,
			EObject packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"step\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getNormalStep()) && match.getObject(\"alt\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlowAlternative()) && match.getObject(\"altFlow\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __parentCombo_covered_line\n            __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __guard_specification_spec\n            __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_message_message\n            __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_line\n            __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_message_message\n            __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_message_message\n            __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_operand\n            __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_interaction_interaction\n            __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_combo\n            __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_enclosingOperand_parentOperand\n            __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_sendEvent_messageSend\n            __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_enclosingOperand_parentOperand\n            __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_guard_guard\n            __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_messageSend\n            __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_operand_operand\n            __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_covered_line\n            __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __parentOperand_fragment_messageSend\n            __parentOperand_fragment_messageSend.setName (\"fragment\");\n            // assign attribute __messageSend_enclosingOperand_parentOperand\n            __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive.setName (\"fragment\");\n            // assign attribute __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand.setName (\"coveredBy\");\n            // assign attribute __parentOperand_covered_line\n            __parentOperand_covered_line.setName (\"covered\");\n            // assign attribute __parentOperand_fragment_combo\n            __parentOperand_fragment_combo.setName (\"fragment\");\n            // assign attribute __combo_enclosingOperand_parentOperand\n            __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo.setName (\"coveredBy\");\n            // assign attribute __parentCombo_covered_line\n            __parentCombo_covered_line.setName (\"covered\");\n            // assign attribute __combo_operand_operand\n            __combo_operand_operand.setName (\"operand\");\n            // assign attribute __line_coveredBy_operand\n            __line_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_line\n            __operand_covered_line.setName (\"covered\");\n            // assign attribute __operand_guard_guard\n            __operand_guard_guard.setName (\"guard\");\n            // assign attribute __guard_specification_spec\n            __guard_specification_spec.setName (\"specification\");\n            // assign attribute __message_sendEvent_messageSend\n            __message_sendEvent_messageSend.setName (\"sendEvent\");\n            // assign attribute __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n            // assign attribute __message_interaction_interaction\n            __message_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_message_message\n            __interaction_message_message.setName (\"message\");\n            // assign attribute __messageSend_message_message\n            __messageSend_message_message.setName (\"message\");\n            // assign attribute __messageReceive_message_message\n            __messageReceive_message_message.setName (\"message\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__guard_specification_spec,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,message,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_interaction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_sendEvent_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,combo,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageReceive,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_guard_guard,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,guard,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_operand_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_receiveEvent_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,spec,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageSend,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentCombo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,operand,\"toBeTranslatedNodes\");\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n            // create link\n            __parentOperand_covered_line.setSrc( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n            // create link\n            __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n            // create link\n            __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n            // create link\n            __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageSend_message_message.setSrc( messageSend);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_message_message.setSrc( messageReceive);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n            // create link\n            __line_coveredBy_operand.setSrc( line);\n\n\n            // create link\n            __parentCombo_covered_line.setTrg( line);\n\n\n            // create link\n            __parentOperand_covered_line.setTrg( line);\n\n\n            // create link\n            __operand_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_parentCombo.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setSrc( line);\n\n\n            // create link\n            __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n            // create link\n            __combo_operand_operand.setSrc( combo);\n\n\n            // create link\n            __parentOperand_fragment_combo.setTrg( combo);\n\n\n            // create link\n            __parentCombo_covered_line.setSrc( parentCombo);\n\n\n            // create link\n            __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n            // create link\n            __operand_guard_guard.setSrc( operand);\n\n\n            // create link\n            __line_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __operand_covered_line.setSrc( operand);\n\n\n            // create link\n            __combo_operand_operand.setTrg( operand);\n\n\n            // create link\n            __operand_guard_guard.setTrg( guard);\n\n\n            // create link\n            __guard_specification_spec.setSrc( guard);\n\n\n            // create link\n            __guard_specification_spec.setTrg( spec);\n\n\n            // create link\n            __message_interaction_interaction.setSrc( message);\n\n\n            // create link\n            __messageSend_message_message.setTrg( message);\n\n\n            // create link\n            __message_sendEvent_messageSend.setSrc( message);\n\n\n            // create link\n            __messageReceive_message_message.setTrg( message);\n\n\n            // create link\n            __interaction_message_message.setTrg( message);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setSrc( message);\n\n\n            // create link\n            __message_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __interaction_message_message.setSrc( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __line_interaction_interaction\n            __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_lifeline_line\n            __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand.setName (\"operand\");\n            // assign attribute __line_interaction_interaction\n            __line_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_lifeline_line\n            __interaction_lifeline_line.setName (\"lifeline\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,interaction,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_interaction_interaction,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,line,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_operand_parentOperand,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_lifeline_line,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentCombo,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentOperand,\"contextNodes\");\n\n            // create link\n            __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __interaction_lifeline_line.setTrg( line);\n\n\n            // create link\n            __line_interaction_interaction.setSrc( line);\n\n\n            // create link\n            __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n            // create link\n            __interaction_lifeline_line.setSrc( interaction);\n\n\n            // create link\n            __line_interaction_interaction.setTrg( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match, InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      CombinedFragment combo = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      PackageDeclaration packageDeclaration = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      NormalStep step = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      AlternativeFlowAlternative alt = null;\n      NormalStepToMessage stepToMessage = null;\n      AlternativeFlow altFlow = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge step__stepAlternative__alt = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge flow__steps__step = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge step__actor__actor = null;\n      EMoflonEdge alt__ref__altFlow = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge __messageReceive_message_message = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object step\n         step = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object alt\n         alt = UseCaseDSLFactory.eINSTANCE.createAlternativeFlowAlternative();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object altFlow\n         altFlow = UseCaseDSLFactory.eINSTANCE.createAlternativeFlow();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // assign attribute step\n         step.setName ((java.lang.String)csp.getValue(\"step\",\"name\"));\n         // assign attribute alt\n         alt.setCondition ((java.lang.String)csp.getValue(\"alt\",\"condition\"));\n         // assign attribute altFlow\n         altFlow.setName ((java.lang.String)csp.getValue(\"altFlow\",\"name\"));\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         \tflow.getSteps().add(step); // add link\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         \tstep.getStepAlternative().add(alt); // add link\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(step,actor,\"actor\");\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(alt,altFlow,\"ref\");\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlowToOperand and actorToLine \n         JavaSDM.ensure ( !altFlowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToParentOperand and actorToLine \n         JavaSDM.ensure ( !flowToParentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects packageDeclaration and actorToLine \n         JavaSDM.ensure ( !packageDeclaration.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentCombo and actorToLine \n         JavaSDM.ensure ( !parentCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentOperand and actorToLine \n         JavaSDM.ensure ( !parentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects packageDeclaration and alt \n         JavaSDM.ensure ( !packageDeclaration.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlow \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and alternative1ToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects message and flowToParentOperand \n         JavaSDM.ensure ( !message.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToParentOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToParentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects packageDeclaration and guard \n         JavaSDM.ensure ( !packageDeclaration.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects packageDeclaration and message \n         JavaSDM.ensure ( !packageDeclaration.equals (message) );\n\n         // check isomorphic binding between objects parentCombo and message \n         JavaSDM.ensure ( !parentCombo.equals (message) );\n\n         // check isomorphic binding between objects parentOperand and message \n         JavaSDM.ensure ( !parentOperand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentCombo and packageDeclaration \n         JavaSDM.ensure ( !parentCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and packageDeclaration \n         JavaSDM.ensure ( !parentOperand.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects spec and packageDeclaration \n         JavaSDM.ensure ( !spec.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToCombo and packageDeclaration \n         JavaSDM.ensure ( !stepToCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and packageDeclaration \n         JavaSDM.ensure ( !stepToMessage.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToMessage and parentCombo \n         JavaSDM.ensure ( !stepToMessage.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and parentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object __message_sendEvent_messageSend\n         __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_guard_guard\n         __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__stepAlternative__alt\n         step__stepAlternative__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_operand\n         __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_message_message\n         __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object flow__steps__step\n         flow__steps__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_enclosingOperand_parentOperand\n         __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_interaction_interaction\n         __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_covered_line\n         __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_combo\n         __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_enclosingOperand_parentOperand\n         __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentCombo_covered_line\n         __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __guard_specification_spec\n         __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_line\n         __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_operand_operand\n         __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__actor__actor\n         step__actor__actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alt__ref__altFlow\n         alt__ref__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_messageSend\n         __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_message_message\n         __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_message_message\n         __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltStepNFToComboRule\");\n         // assign attribute __parentOperand_fragment_messageSend\n         __parentOperand_fragment_messageSend.setName (\"fragment\");\n         // assign attribute __messageSend_enclosingOperand_parentOperand\n         __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive.setName (\"fragment\");\n         // assign attribute __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand.setName (\"coveredBy\");\n         // assign attribute __parentOperand_covered_line\n         __parentOperand_covered_line.setName (\"covered\");\n         // assign attribute __parentOperand_fragment_combo\n         __parentOperand_fragment_combo.setName (\"fragment\");\n         // assign attribute __combo_enclosingOperand_parentOperand\n         __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo.setName (\"coveredBy\");\n         // assign attribute __parentCombo_covered_line\n         __parentCombo_covered_line.setName (\"covered\");\n         // assign attribute step__stepAlternative__alt\n         step__stepAlternative__alt.setName (\"stepAlternative\");\n         // assign attribute alt__ref__altFlow\n         alt__ref__altFlow.setName (\"ref\");\n         // assign attribute __combo_operand_operand\n         __combo_operand_operand.setName (\"operand\");\n         // assign attribute __line_coveredBy_operand\n         __line_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_line\n         __operand_covered_line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute __operand_guard_guard\n         __operand_guard_guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute __guard_specification_spec\n         __guard_specification_spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute flow__steps__step\n         flow__steps__step.setName (\"steps\");\n         // assign attribute step__actor__actor\n         step__actor__actor.setName (\"actor\");\n         // assign attribute __message_sendEvent_messageSend\n         __message_sendEvent_messageSend.setName (\"sendEvent\");\n         // assign attribute __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n         // assign attribute __message_interaction_interaction\n         __message_interaction_interaction.setName (\"interaction\");\n         // assign attribute __interaction_message_message\n         __interaction_message_message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute __messageSend_message_message\n         __messageSend_message_message.setName (\"message\");\n         // assign attribute __messageReceive_message_message\n         __messageReceive_message_message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_sendEvent_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_guard_guard,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__stepAlternative__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentCombo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,flow__steps__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_receiveEvent_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_interaction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentCombo_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__guard_specification_spec,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_operand_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__actor__actor,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt__ref__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_message_message,\"translatedEdges\");\n\n         // create link\n         flow__steps__step.setSrc( flow);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n         // create link\n         __parentOperand_covered_line.setSrc( parentOperand);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n         // create link\n         __messageSend_message_message.setSrc( messageSend);\n\n\n         // create link\n         __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __messageReceive_message_message.setSrc( messageReceive);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         __parentCombo_covered_line.setTrg( line);\n\n\n         // create link\n         __parentOperand_covered_line.setTrg( line);\n\n\n         // create link\n         __operand_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_operand.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setSrc( line);\n\n\n         // create link\n         __parentOperand_fragment_combo.setTrg( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n         // create link\n         __combo_operand_operand.setSrc( combo);\n\n\n         // create link\n         __parentCombo_covered_line.setSrc( parentCombo);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         step__actor__actor.setSrc( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         flow__steps__step.setTrg( step);\n\n\n         // create link\n         step__stepAlternative__alt.setSrc( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         step__stepAlternative__alt.setTrg( alt);\n\n\n         // create link\n         alt__ref__altFlow.setSrc( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         __line_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         __operand_covered_line.setSrc( operand);\n\n\n         // create link\n         __operand_guard_guard.setSrc( operand);\n\n\n         // create link\n         __combo_operand_operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         __guard_specification_spec.setSrc( guard);\n\n\n         // create link\n         __operand_guard_guard.setTrg( guard);\n\n\n         // create link\n         __guard_specification_spec.setTrg( spec);\n\n\n         // create link\n         alt__ref__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         __message_sendEvent_messageSend.setSrc( message);\n\n\n         // create link\n         __messageSend_message_message.setTrg( message);\n\n\n         // create link\n         __message_interaction_interaction.setSrc( message);\n\n\n         // create link\n         __interaction_message_message.setTrg( message);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setSrc( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         __messageReceive_message_message.setTrg( message);\n\n\n         // create link\n         __message_interaction_interaction.setTrg( interaction);\n\n\n         // create link\n         __interaction_message_message.setSrc( interaction);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         step__actor__actor.setTrg( actor);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,flow,parentOperand,flowToParentOperand,messageSend,messageReceive,line,combo,parentCombo,step,alt,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,interaction,stepToMessage,actor,actorToLine,packageDeclaration);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      CSP csp = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterInteractionToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      NamedFlow flow = null;\n      Iterator fujaba__IterParentOperandToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Actor actor = null;\n      Iterator fujaba__IterLineToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (match.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (match.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (match.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (match.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link target from line to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterLineToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,ActorToLifeline.class,\"target\")).iterator ();\n\n         while ( fujaba__IterLineToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterLineToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               actor = actorToLine.getSource ();\n\n               // check object actor is really bound\n               JavaSDM.ensure ( actor != null );\n\n               // iterate to-many link target from parentOperand to flowToParentOperand\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,FlowToInteractionFragment.class,\"target\")).iterator ();\n\n               while ( fujaba__IterParentOperandToFlowToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     flowToParentOperand = (FlowToInteractionFragment) fujaba__IterParentOperandToFlowToParentOperand.next ();\n\n                     // check object flowToParentOperand is really bound\n                     JavaSDM.ensure ( flowToParentOperand != null );\n                     // bind object\n                     _TmpObject = flowToParentOperand.getSource ();\n\n                     // ensure correct type and really bound of object flow\n                     JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n                     flow = (NamedFlow) _TmpObject;\n\n                     // iterate to-many link target from interaction to useCaseToInteraction\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,UseCaseToInteraction.class,\"target\")).iterator ();\n\n                     while ( fujaba__IterInteractionToUseCaseToInteraction.hasNext () )\n                     {\n                        try\n                        {\n                           useCaseToInteraction = (UseCaseToInteraction) fujaba__IterInteractionToUseCaseToInteraction.next ();\n\n                           // check object useCaseToInteraction is really bound\n                           JavaSDM.ensure ( useCaseToInteraction != null );\n                           // bind object\n                           useCase = useCaseToInteraction.getSource ();\n\n                           // check object useCase is really bound\n                           JavaSDM.ensure ( useCase != null );\n\n                           // story node \'find context\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object actor is really bound\n                              JavaSDM.ensure ( actor != null );\n                              // check object actorToLine is really bound\n                              JavaSDM.ensure ( actorToLine != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object flow is really bound\n                              JavaSDM.ensure ( flow != null );\n                              // check object flowToParentOperand is really bound\n                              JavaSDM.ensure ( flowToParentOperand != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check object useCase is really bound\n                              JavaSDM.ensure ( useCase != null );\n                              // check object useCaseToInteraction is really bound\n                              JavaSDM.ensure ( useCaseToInteraction != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link flows from flow to useCase\n                              JavaSDM.ensure (useCase.equals (flow.eContainer()\n                              ));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link source from actorToLine to actor\n                              JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                              ));\n\n                              // check link source from flowToParentOperand to flow\n                              JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                              ));\n\n                              // check link source from useCaseToInteraction to useCase\n                              JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link target from actorToLine to line\n                              JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                              ));\n\n                              // check link target from flowToParentOperand to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                              ));\n\n                              // check link target from useCaseToInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                              ));\n\n                              // bind object\n                              packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n                              // check object packageDeclaration is really bound\n                              JavaSDM.ensure ( packageDeclaration != null );\n\n                              // check if contained via correct reference\n                              JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n                              // check link actors from actor to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_fragment_messageReceive\n                              __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_enclosingOperand_parentOperand\n                              __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __combo_enclosingOperand_parentOperand\n                              __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_fragment_combo\n                              __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_fragment_messageSend\n                              __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_enclosingOperand_parentOperand\n                              __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_covered_line\n                              __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_parentOperand\n                              __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_message_message\n                              __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_message_message\n                              __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_parentCombo\n                              __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_covered_line\n                              __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_target_line\n                              __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_covered_line\n                              __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_operand\n                              __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __combo_operand_operand\n                              __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_guard_guard\n                              __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __guard_specification_spec\n                              __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_interaction_interaction\n                              __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_message_message\n                              __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_source_actor\n                              __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __parentOperand_fragment_messageSend\n                              __parentOperand_fragment_messageSend.setName (\"fragment\");\n                              // assign attribute __messageSend_enclosingOperand_parentOperand\n                              __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                              // assign attribute __parentOperand_fragment_messageReceive\n                              __parentOperand_fragment_messageReceive.setName (\"fragment\");\n                              // assign attribute __messageReceive_enclosingOperand_parentOperand\n                              __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                              // assign attribute __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow.setName (\"source\");\n                              // assign attribute __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand.setName (\"target\");\n                              // assign attribute __line_coveredBy_parentOperand\n                              __line_coveredBy_parentOperand.setName (\"coveredBy\");\n                              // assign attribute __parentOperand_covered_line\n                              __parentOperand_covered_line.setName (\"covered\");\n                              // assign attribute __parentOperand_fragment_combo\n                              __parentOperand_fragment_combo.setName (\"fragment\");\n                              // assign attribute __combo_enclosingOperand_parentOperand\n                              __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                              // assign attribute __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand.setName (\"operand\");\n                              // assign attribute __line_coveredBy_parentCombo\n                              __line_coveredBy_parentCombo.setName (\"coveredBy\");\n                              // assign attribute __parentCombo_covered_line\n                              __parentCombo_covered_line.setName (\"covered\");\n                              // assign attribute __combo_operand_operand\n                              __combo_operand_operand.setName (\"operand\");\n                              // assign attribute __line_coveredBy_operand\n                              __line_coveredBy_operand.setName (\"coveredBy\");\n                              // assign attribute __operand_covered_line\n                              __operand_covered_line.setName (\"covered\");\n                              // assign attribute __operand_guard_guard\n                              __operand_guard_guard.setName (\"guard\");\n                              // assign attribute __guard_specification_spec\n                              __guard_specification_spec.setName (\"specification\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend.setName (\"sendEvent\");\n                              // assign attribute __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n                              // assign attribute __message_interaction_interaction\n                              __message_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_message_message\n                              __interaction_message_message.setName (\"message\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n                              // assign attribute __messageSend_message_message\n                              __messageSend_message_message.setName (\"message\");\n                              // assign attribute __messageReceive_message_message\n                              __messageReceive_message_message.setName (\"message\");\n                              // assign attribute __actorToLine_source_actor\n                              __actorToLine_source_actor.setName (\"source\");\n                              // assign attribute __actorToLine_target_line\n                              __actorToLine_target_line.setName (\"target\");\n                              // assign attribute __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor.setName (\"actors\");\n                              // assign attribute __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n                              // create link\n                              __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                              // create link\n                              __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n                              // create link\n                              __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n                              // create link\n                              __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentOperand_covered_line.setSrc( parentOperand);\n\n\n                              // create link\n                              __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageSend);\n\n\n                              // create link\n                              __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n                              // create link\n                              __messageSend_message_message.setSrc( messageSend);\n\n\n                              // create link\n                              __messageReceive_message_message.setSrc( messageReceive);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageReceive);\n\n\n                              // create link\n                              __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n                              // create link\n                              __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              __line_coveredBy_parentCombo.setSrc( line);\n\n\n                              // create link\n                              __parentCombo_covered_line.setTrg( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __actorToLine_target_line.setTrg( line);\n\n\n                              // create link\n                              __parentOperand_covered_line.setTrg( line);\n\n\n                              // create link\n                              __line_coveredBy_parentOperand.setSrc( line);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              __operand_covered_line.setTrg( line);\n\n\n                              // create link\n                              __line_coveredBy_operand.setSrc( line);\n\n\n                              // create link\n                              __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(combo);\n\n\n                              // create link\n                              __combo_operand_operand.setSrc( combo);\n\n\n                              // create link\n                              __parentOperand_fragment_combo.setTrg( combo);\n\n\n                              // create link\n                              __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n                              // create link\n                              __parentCombo_covered_line.setSrc( parentCombo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                              // create link\n                              __line_coveredBy_operand.setTrg( operand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(operand);\n\n\n                              // create link\n                              __combo_operand_operand.setTrg( operand);\n\n\n                              // create link\n                              __operand_covered_line.setSrc( operand);\n\n\n                              // create link\n                              __operand_guard_guard.setSrc( operand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(guard);\n\n\n                              // create link\n                              __guard_specification_spec.setSrc( guard);\n\n\n                              // create link\n                              __operand_guard_guard.setTrg( guard);\n\n\n                              // create link\n                              __guard_specification_spec.setTrg( spec);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(spec);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __message_interaction_interaction.setSrc( message);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setSrc( message);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setSrc( message);\n\n\n                              // create link\n                              __messageReceive_message_message.setTrg( message);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(message);\n\n\n                              // create link\n                              __interaction_message_message.setTrg( message);\n\n\n                              // create link\n                              __messageSend_message_message.setTrg( message);\n\n\n                              // create link\n                              __interaction_message_message.setSrc( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              __message_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __actorToLine_source_actor.setTrg( actor);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                              // create link\n                              __actorToLine_target_line.setSrc( actorToLine);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                              // create link\n                              __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__guard_specification_spec,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_enclosingOperand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_combo,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_guard_guard,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_operand_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_receiveEvent_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_enclosingOperand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_sendEvent_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_enclosingOperand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentCombo,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,flow,parentOperand,flowToParentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,useCase,useCaseToInteraction,message,interaction,actor,actorToLine,packageDeclaration));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"AltStepNFToComboRule\");\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n\n                                    // create link\n                                    ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"parentOperand\", parentOperand);\nmatch.registerObject(\"messageSend\", messageSend);\nmatch.registerObject(\"messageReceive\", messageReceive);\nmatch.registerObject(\"line\", line);\nmatch.registerObject(\"combo\", combo);\nmatch.registerObject(\"parentCombo\", parentCombo);\nmatch.registerObject(\"operand\", operand);\nmatch.registerObject(\"guard\", guard);\nmatch.registerObject(\"spec\", spec);\nmatch.registerObject(\"message\", message);\nmatch.registerObject(\"interaction\", interaction);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", true, csp);\r\nvar_combo_interactionOperator.setValue(combo.getInteractionOperator());\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqInterOperKind eqInterOperKind = new EqInterOperKind();\r\n\r\ncsp.getConstraints().add(eqInterOperKind);\r\n\r\n// Solve CSP\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", true, csp);\r\nvar_guard_name.setValue(guard.getName());\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", true, csp);\r\nvar_spec_value.setValue(spec.getValue());\r\nvar_spec_value.setType(\"\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", true, csp);\r\nvar_message_name.setValue(message.getName());\r\nvar_message_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", csp);\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", csp);\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", csp);\r\nvar_step_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"messageSend\",messageSend);\r\nisApplicableMatch.registerObject(\"messageReceive\",messageReceive);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"combo\",combo);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"operand\",operand);\r\nisApplicableMatch.registerObject(\"guard\",guard);\r\nisApplicableMatch.registerObject(\"spec\",spec);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"message\",message);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			NamedFlow flow, InteractionOperand parentOperand,
			FlowToInteractionFragment flowToParentOperand,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction, Message message,
			Interaction interaction, Actor actor, ActorToLifeline actorToLine,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"actorToLine\", actorToLine);\nruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult, EObject flow,
			EObject parentOperand, EObject flowToParentOperand,
			EObject messageSend, EObject messageReceive, EObject line,
			EObject combo, EObject parentCombo, EObject step, EObject alt,
			EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message, EObject interaction,
			EObject stepToMessage, EObject actor, EObject actorToLine,
			EObject packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"messageSend\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"messageReceive\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"combo\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getCombinedFragment()) && match.getObject(\"operand\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionOperand()) && match.getObject(\"guard\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionConstraint()) && match.getObject(\"spec\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getLiteralString()) && match.getObject(\"message\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessage());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_191541 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_994245 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_504797 = null;\n      Interaction __DEC_operand_enclosingInteraction_621096 = null;\n      InteractionOperand __DEC_combo_fragment_800489 = null;\n      InteractionOperand __DEC_messageReceive_fragment_349415 = null;\n      InteractionOperand __DEC_messageSend_fragment_528686 = null;\n      InteractionOperand __DEC_operand_fragment_810326 = null;\n      Constraint __DEC_spec_specification_53480 = null;\n      InteractionOperand __DEC_guard_guard_937967 = null;\n      CombinedFragment __DEC_operand_operand_228821 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_513368 = null;\n      Message __DEC_messageReceive_receiveEvent_513368 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_90572 = null;\n      Message __DEC_messageSend_receiveEvent_90572 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_736056 = null;\n      Message __DEC_messageReceive_sendEvent_736056 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_659122 = null;\n      Message __DEC_messageSend_sendEvent_659122 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_680725 = null;\n      MessageEnd __DEC_message_message_680725 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link fragment from messageSend to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n         ));\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_191541 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_191541 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_191541 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_191541 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_191541.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_994245 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_994245 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_994245 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_994245 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_994245.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_504797 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_504797 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_504797 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_504797 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_504797.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_621096 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_621096 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_621096 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_621096 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_621096.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_800489 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_800489 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_800489 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_800489 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_800489.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_800489 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_800489.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_349415 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_349415 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_349415 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_349415 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_349415.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_349415 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_349415.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_528686 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_528686 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_528686 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_528686 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_528686.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_528686 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_528686.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_810326 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_810326 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_810326 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_810326 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_810326.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_810326 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_810326.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_53480 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_53480 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_53480 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_53480.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_53480 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_53480.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_937967 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_937967 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_937967 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_937967.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_937967 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_937967.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_937967 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_937967.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_228821 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_228821 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_228821 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_228821.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_228821 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_228821.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_228821 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_228821.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_513368\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_513368 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_513368.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_513368 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_513368.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_513368 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_513368 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_513368 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_513368.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_90572\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_90572 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_90572.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_90572 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_90572.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_90572 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_90572 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_90572 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_90572.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_736056\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_736056 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_736056.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_736056 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_736056.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_736056 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_736056 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_736056 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_736056.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_659122\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_659122 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_659122.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_659122 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_659122.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_659122 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_659122 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_659122 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_659122.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_680725\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_680725 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_680725.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_680725 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_680725.next ();\n\n                                             // check object __DEC_message_message_680725 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_680725 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_680725 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_680725.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_680725 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_680725.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_53(EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_911403 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_739183 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_243162 = null;\n      Interaction __DEC_operand_enclosingInteraction_997072 = null;\n      InteractionOperand __DEC_combo_fragment_573354 = null;\n      InteractionOperand __DEC_messageReceive_fragment_241708 = null;\n      InteractionOperand __DEC_messageSend_fragment_436816 = null;\n      InteractionOperand __DEC_operand_fragment_383440 = null;\n      Constraint __DEC_spec_specification_611613 = null;\n      InteractionOperand __DEC_guard_guard_592701 = null;\n      CombinedFragment __DEC_operand_operand_940335 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_753416 = null;\n      Message __DEC_messageReceive_receiveEvent_753416 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_22966 = null;\n      Message __DEC_messageSend_receiveEvent_22966 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_549889 = null;\n      Message __DEC_messageReceive_sendEvent_549889 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_446966 = null;\n      Message __DEC_messageSend_sendEvent_446966 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_359947 = null;\n      MessageEnd __DEC_message_message_359947 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from messageSend to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // iterate to-many link src from parentOperand to _edge_fragment\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                                       // check object _edge_fragment is really bound\n                                       JavaSDM.ensure ( _edge_fragment != null );\n                                       // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                       JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                       // check link trg from _edge_fragment to messageSend\n                                       JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_911403 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_911403 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_911403 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_911403 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_911403.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_739183 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_739183 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_739183 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_739183 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_739183.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_243162 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_243162 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_243162 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_243162 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_243162.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_997072 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_997072 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_997072 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_997072 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_997072.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_573354 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_573354 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_573354 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_573354 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_573354.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_573354 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_573354.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_241708 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_241708 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_241708 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_241708 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_241708.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_241708 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_241708.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_436816 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_436816 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_436816 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_436816 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_436816.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_436816 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_436816.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_383440 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_383440 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_383440 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_383440 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_383440.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_383440 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_383440.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_611613 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_611613 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_611613 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_611613.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_611613 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_611613.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_592701 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_592701 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_592701 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_592701.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_592701 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_592701.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_592701 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_592701.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_940335 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_940335 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_940335 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_940335.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_940335 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_940335.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_940335 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_940335.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_753416\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_753416 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_753416.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_753416 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_753416.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_753416 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_753416 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_753416 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_753416.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_22966\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_22966 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_22966.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_22966 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_22966.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_22966 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_22966 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_22966 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_22966.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_549889\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_549889 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_549889.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_549889 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_549889.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_549889 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_549889 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_549889 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_549889.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_446966\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_446966 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_446966.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_446966 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_446966.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_446966 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_446966 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_446966 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_446966.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_359947\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_359947 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_359947.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_359947 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_359947.next ();\n\n                                                   // check object __DEC_message_message_359947 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_359947 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_359947 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_359947.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_359947 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_359947.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_enclosingOperand is really bound\n                                          JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                          // check object _edge_fragment is really bound\n                                          JavaSDM.ensure ( _edge_fragment != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                          JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_enclosingOperand to messageSend\n                                          JavaSDM.ensure (messageSend.equals (_edge_enclosingOperand.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_fragment to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_enclosingOperand to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_fragment to messageSend\n                                          JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_54(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_938789 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_784180 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_147339 = null;\n      Interaction __DEC_operand_enclosingInteraction_582819 = null;\n      InteractionOperand __DEC_combo_fragment_216918 = null;\n      InteractionOperand __DEC_messageReceive_fragment_899858 = null;\n      InteractionOperand __DEC_messageSend_fragment_998288 = null;\n      InteractionOperand __DEC_operand_fragment_530766 = null;\n      Constraint __DEC_spec_specification_846702 = null;\n      InteractionOperand __DEC_guard_guard_834987 = null;\n      CombinedFragment __DEC_operand_operand_881384 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_950493 = null;\n      Message __DEC_messageReceive_receiveEvent_950493 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_919415 = null;\n      Message __DEC_messageSend_receiveEvent_919415 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_287350 = null;\n      Message __DEC_messageReceive_sendEvent_287350 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_104249 = null;\n      Message __DEC_messageSend_sendEvent_104249 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_72107 = null;\n      MessageEnd __DEC_message_message_72107 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to combo\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_938789 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_938789 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_938789 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_938789 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_938789.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_784180 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_784180 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_784180 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_784180 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_784180.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_147339 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_147339 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_147339 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_147339 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_147339.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_582819 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_582819 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_582819 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_582819 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_582819.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_216918 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_216918 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_216918 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_216918 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_216918.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_216918 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_216918.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_899858 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_899858 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_899858 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_899858 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_899858.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_899858 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_899858.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_998288 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_998288 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_998288 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_998288 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_998288.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_998288 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_998288.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_530766 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_530766 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_530766 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_530766 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_530766.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_530766 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_530766.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_846702 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_846702 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_846702 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_846702.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_846702 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_846702.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_834987 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_834987 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_834987 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_834987.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_834987 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_834987.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_834987 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_834987.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_881384 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_881384 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_881384 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_881384.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_881384 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_881384.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_881384 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_881384.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_950493\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_950493 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_950493.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_950493 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_950493.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_950493 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_950493 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_950493 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_950493.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_919415\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_919415 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_919415.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_919415 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_919415.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_919415 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_919415 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_919415 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_919415.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_287350\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_287350 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_287350.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_287350 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_287350.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_287350 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_287350 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_287350 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_287350.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_104249\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_104249 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_104249.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_104249 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_104249.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_104249 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_104249 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_104249 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_104249.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_72107\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_72107 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_72107.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_72107 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_72107.next ();\n\n                                             // check object __DEC_message_message_72107 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_72107 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_72107 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_72107.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_72107 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_72107.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_55(EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_600614 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_119019 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_751676 = null;\n      Interaction __DEC_operand_enclosingInteraction_892504 = null;\n      InteractionOperand __DEC_combo_fragment_304027 = null;\n      InteractionOperand __DEC_messageReceive_fragment_466913 = null;\n      InteractionOperand __DEC_messageSend_fragment_454699 = null;\n      InteractionOperand __DEC_operand_fragment_748471 = null;\n      Constraint __DEC_spec_specification_467103 = null;\n      InteractionOperand __DEC_guard_guard_561 = null;\n      CombinedFragment __DEC_operand_operand_36966 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_337675 = null;\n      Message __DEC_messageReceive_receiveEvent_337675 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_490969 = null;\n      Message __DEC_messageSend_receiveEvent_490969 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_152608 = null;\n      Message __DEC_messageReceive_sendEvent_152608 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_832262 = null;\n      Message __DEC_messageSend_sendEvent_832262 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_937809 = null;\n      MessageEnd __DEC_message_message_937809 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      InteractionOperand parentOperand = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to combo\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // iterate to-many link src from parentOperand to _edge_fragment\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                                       // check object _edge_fragment is really bound\n                                       JavaSDM.ensure ( _edge_fragment != null );\n                                       // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                       JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                       // check link trg from _edge_fragment to messageReceive\n                                       JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_600614 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_600614 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_600614 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_600614 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_600614.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_119019 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_119019 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_119019 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_119019 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_119019.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_751676 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_751676 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_751676 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_751676 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_751676.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_892504 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_892504 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_892504 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_892504 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_892504.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_304027 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_304027 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_304027 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_304027 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_304027.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_304027 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_304027.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_466913 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_466913 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_466913 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_466913 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_466913.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_466913 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_466913.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_454699 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_454699 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_454699 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_454699 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_454699.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_454699 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_454699.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_748471 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_748471 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_748471 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_748471 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_748471.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_748471 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_748471.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_467103 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_467103 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_467103 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_467103.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_467103 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_467103.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_561 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_561 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_561 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_561.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_561 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_561.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_561 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_561.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_36966 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_36966 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_36966 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_36966.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_36966 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_36966.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_36966 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_36966.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_337675\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_337675 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_337675.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_337675 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_337675.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_337675 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_337675 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_337675 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_337675.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_490969\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_490969 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_490969.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_490969 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_490969.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_490969 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_490969 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_490969 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_490969.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_152608\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_152608 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_152608.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_152608 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_152608.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_152608 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_152608 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_152608 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_152608.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_832262\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_832262 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_832262.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_832262 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_832262.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_832262 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_832262 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_832262 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_832262.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_937809\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_937809 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_937809.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_937809 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_937809.next ();\n\n                                                   // check object __DEC_message_message_937809 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_937809 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_937809 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_937809.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_937809 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_937809.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_enclosingOperand is really bound\n                                          JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                          // check object _edge_fragment is really bound\n                                          JavaSDM.ensure ( _edge_fragment != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                          JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_enclosingOperand to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (_edge_enclosingOperand.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_fragment to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_enclosingOperand to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_fragment to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_56(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_376425 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_423292 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_70076 = null;\n      Interaction __DEC_operand_enclosingInteraction_912853 = null;\n      InteractionOperand __DEC_combo_fragment_964528 = null;\n      InteractionOperand __DEC_messageReceive_fragment_775537 = null;\n      InteractionOperand __DEC_messageSend_fragment_694106 = null;\n      InteractionOperand __DEC_operand_fragment_622121 = null;\n      Constraint __DEC_spec_specification_139081 = null;\n      InteractionOperand __DEC_guard_guard_22128 = null;\n      CombinedFragment __DEC_operand_operand_291121 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_128179 = null;\n      Message __DEC_messageReceive_receiveEvent_128179 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_306238 = null;\n      Message __DEC_messageSend_receiveEvent_306238 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_846274 = null;\n      Message __DEC_messageReceive_sendEvent_846274 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_390071 = null;\n      Message __DEC_messageSend_sendEvent_390071 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_163630 = null;\n      MessageEnd __DEC_message_message_163630 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // check link covered from line to parentOperand\n         JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // check isomorphic binding between objects parentOperand and operand \n               JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link fragment from parentOperand to combo\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_376425 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_376425 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_376425 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_376425 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_376425.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_423292 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_423292 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_423292 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_423292 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_423292.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_70076 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_70076 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_70076 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_70076 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_70076.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_912853 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_912853 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_912853 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_912853 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_912853.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_964528 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_964528 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_964528 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_964528 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_964528.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_964528 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_964528.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_775537 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_775537 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_775537 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_775537 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_775537.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_775537 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_775537.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_694106 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_694106 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_694106 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_694106 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_694106.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_694106 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_694106.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_622121 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_622121 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_622121 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_622121 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_622121.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_622121 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_622121.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_139081 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_139081 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_139081 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_139081.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_139081 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_139081.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_22128 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_22128 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_22128 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_22128.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_22128 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_22128.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_22128 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_22128.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_291121 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_291121 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_291121 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_291121.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_291121 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_291121.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_291121 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_291121.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_128179\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_128179 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_128179.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_128179 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_128179.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_128179 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_128179 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_128179 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_128179.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_306238\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_306238 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_306238.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_306238 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_306238.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_306238 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_306238 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_306238 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_306238.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_846274\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_846274 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_846274.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_846274 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_846274.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_846274 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_846274 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_846274 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_846274.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_390071\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_390071 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_390071.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_390071 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_390071.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_390071 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_390071 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_390071 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_390071.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_163630\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_163630 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_163630.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_163630 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_163630.next ();\n\n                                             // check object __DEC_message_message_163630 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_163630 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_163630 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_163630.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_163630 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_163630.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_57(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_770359 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_939848 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_693621 = null;\n      Interaction __DEC_operand_enclosingInteraction_870968 = null;\n      InteractionOperand __DEC_combo_fragment_564311 = null;\n      InteractionOperand __DEC_messageReceive_fragment_223001 = null;\n      InteractionOperand __DEC_messageSend_fragment_218580 = null;\n      InteractionOperand __DEC_operand_fragment_450165 = null;\n      Constraint __DEC_spec_specification_607024 = null;\n      InteractionOperand __DEC_guard_guard_90847 = null;\n      CombinedFragment __DEC_operand_operand_394622 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_955106 = null;\n      Message __DEC_messageReceive_receiveEvent_955106 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_474953 = null;\n      Message __DEC_messageSend_receiveEvent_474953 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_927627 = null;\n      Message __DEC_messageReceive_sendEvent_927627 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_537887 = null;\n      Message __DEC_messageSend_sendEvent_537887 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_690213 = null;\n      MessageEnd __DEC_message_message_690213 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link fragment from parentOperand to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link fragment from parentOperand to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // bind object\n                           parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                           // check object parentCombo is really bound\n                           JavaSDM.ensure ( parentCombo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // bind object\n                           _TmpObject = _edge_covered.getTrg ();\n\n                           // ensure correct type and really bound of object line\n                           JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n                           line = (Lifeline) _TmpObject;\n\n                           // bind object\n                           interaction = line.getInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // check link covered from line to parentOperand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // iterate to-many link trg from parentOperand to _edge_coveredBy\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                 while ( fujaba__IterParentOperandTo_edge_coveredBy.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_coveredBy = (EMoflonEdge) fujaba__IterParentOperandTo_edge_coveredBy.next ();\n\n                                       // check object _edge_coveredBy is really bound\n                                       JavaSDM.ensure ( _edge_coveredBy != null );\n                                       // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                       JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                       // check link src from _edge_coveredBy to line\n                                       JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_770359 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_770359 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_770359 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_770359 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_770359.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_939848 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_939848 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_939848 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_939848 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_939848.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_693621 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_693621 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_693621 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_693621 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_693621.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_870968 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_870968 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_870968 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_870968 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_870968.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_564311 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_564311 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_564311 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_564311 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_564311.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_564311 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_564311.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_223001 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_223001 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_223001 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_223001 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_223001.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_223001 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_223001.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_218580 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_218580 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_218580 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_218580 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_218580.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_218580 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_218580.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_450165 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_450165 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_450165 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_450165 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_450165.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_450165 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_450165.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_607024 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_607024 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_607024 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_607024.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_607024 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_607024.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_90847 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_90847 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_90847 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_90847.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_90847 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_90847.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_90847 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_90847.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_394622 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_394622 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_394622 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_394622.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_394622 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_394622.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_394622 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_394622.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_955106\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_955106 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_955106.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_955106 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_955106.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_955106 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_955106 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_955106 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_955106.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_474953\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_474953 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_474953.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_474953 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_474953.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_474953 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_474953 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_474953 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_474953.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_927627\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_927627 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_927627.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_927627 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_927627.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_927627 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_927627 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_927627 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_927627.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_537887\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_537887 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_537887.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_537887 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_537887.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_537887 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_537887 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_537887 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_537887.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_690213\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_690213 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_690213.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_690213 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_690213.next ();\n\n                                                   // check object __DEC_message_message_690213 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_690213 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_690213 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_690213.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_690213 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_690213.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_covered is really bound\n                                          JavaSDM.ensure ( _edge_covered != null );\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                          JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_covered to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_covered.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to line\n                                          JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_covered to line\n                                          JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_58(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_941500 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_497373 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_461776 = null;\n      Interaction __DEC_operand_enclosingInteraction_323193 = null;\n      InteractionOperand __DEC_combo_fragment_90530 = null;\n      InteractionOperand __DEC_messageReceive_fragment_141440 = null;\n      InteractionOperand __DEC_messageSend_fragment_826319 = null;\n      InteractionOperand __DEC_operand_fragment_343479 = null;\n      Constraint __DEC_spec_specification_456139 = null;\n      InteractionOperand __DEC_guard_guard_616989 = null;\n      CombinedFragment __DEC_operand_operand_628967 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_346878 = null;\n      Message __DEC_messageReceive_receiveEvent_346878 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_524981 = null;\n      Message __DEC_messageSend_receiveEvent_524981 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_629886 = null;\n      Message __DEC_messageReceive_sendEvent_629886 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_384621 = null;\n      Message __DEC_messageSend_sendEvent_384621 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_639895 = null;\n      MessageEnd __DEC_message_message_639895 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment combo = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link fragment from parentOperand to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link fragment from parentOperand to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // bind object\n                     parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                     // check object parentCombo is really bound\n                     JavaSDM.ensure ( parentCombo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                     // bind object\n                     _TmpObject = _edge_fragment.getTrg ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link fragment from combo to parentOperand\n                     JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                     ));\n\n                     // iterate to-many link covered from parentOperand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n                     while ( fujaba__IterParentOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // bind object\n                           interaction = line.getInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_941500 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_941500 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_941500 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_941500 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_941500.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_497373 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_497373 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_497373 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_497373 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_497373.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_461776 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_461776 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_461776 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_461776 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_461776.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_323193 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_323193 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_323193 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_323193 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_323193.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_90530 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_90530 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_90530 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_90530 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_90530.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_90530 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_90530.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_141440 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_141440 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_141440 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_141440 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_141440.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_141440 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_141440.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_826319 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_826319 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_826319 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_826319 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_826319.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_826319 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_826319.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_343479 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_343479 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_343479 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_343479 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_343479.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_343479 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_343479.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_456139 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_456139 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_456139 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_456139.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_456139 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_456139.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_616989 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_616989 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_616989 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_616989.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_616989 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_616989.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_616989 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_616989.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_628967 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_628967 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_628967 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_628967.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_628967 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_628967.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_628967 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_628967.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_346878\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_346878 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_346878.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_346878 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_346878.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_346878 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_346878 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_346878 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_346878.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_524981\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_524981 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_524981.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_524981 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_524981.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_524981 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_524981 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_524981 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_524981.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_629886\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_629886 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_629886.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_629886 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_629886.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_629886 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_629886 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_629886 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_629886.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_384621\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_384621 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_384621.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_384621 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_384621.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_384621 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_384621 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_384621 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_384621.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_639895\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_639895 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_639895.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_639895 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_639895.next ();\n\n                                             // check object __DEC_message_message_639895 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_639895 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_639895 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_639895.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_639895 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_639895.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to combo\n                                    JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_59(EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_953094 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_900955 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_243656 = null;\n      Interaction __DEC_operand_enclosingInteraction_965880 = null;\n      InteractionOperand __DEC_combo_fragment_890622 = null;\n      InteractionOperand __DEC_messageReceive_fragment_83047 = null;\n      InteractionOperand __DEC_messageSend_fragment_876505 = null;\n      InteractionOperand __DEC_operand_fragment_395086 = null;\n      Constraint __DEC_spec_specification_320251 = null;\n      InteractionOperand __DEC_guard_guard_315192 = null;\n      CombinedFragment __DEC_operand_operand_923172 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_997473 = null;\n      Message __DEC_messageReceive_receiveEvent_997473 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_687416 = null;\n      Message __DEC_messageSend_receiveEvent_687416 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_686505 = null;\n      Message __DEC_messageReceive_sendEvent_686505 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_99029 = null;\n      Message __DEC_messageSend_sendEvent_99029 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_51720 = null;\n      MessageEnd __DEC_message_message_51720 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from combo to parentOperand\n         JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link fragment from parentOperand to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // bind object\n                     parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                     // check object parentCombo is really bound\n                     JavaSDM.ensure ( parentCombo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // iterate to-many link covered from parentOperand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n                     while ( fujaba__IterParentOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // bind object\n                           interaction = line.getInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // iterate to-many link src from parentOperand to _edge_fragment\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                                       // check object _edge_fragment is really bound\n                                       JavaSDM.ensure ( _edge_fragment != null );\n                                       // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                       JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                       // check link trg from _edge_fragment to combo\n                                       JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_953094 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_953094 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_953094 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_953094 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_953094.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_900955 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_900955 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_900955 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_900955 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_900955.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_243656 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_243656 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_243656 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_243656 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_243656.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_965880 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_965880 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_965880 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_965880 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_965880.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_890622 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_890622 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_890622 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_890622 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_890622.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_890622 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_890622.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_83047 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_83047 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_83047 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_83047 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_83047.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_83047 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_83047.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_876505 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_876505 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_876505 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_876505 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_876505.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_876505 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_876505.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_395086 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_395086 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_395086 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_395086 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_395086.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_395086 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_395086.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_320251 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_320251 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_320251 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_320251.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_320251 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_320251.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_315192 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_315192 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_315192 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_315192.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_315192 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_315192.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_315192 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_315192.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_923172 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_923172 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_923172 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_923172.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_923172 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_923172.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_923172 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_923172.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_997473\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_997473 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_997473.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_997473 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_997473.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_997473 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_997473 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_997473 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_997473.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_687416\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_687416 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_687416.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_687416 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_687416.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_687416 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_687416 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_687416 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_687416.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_686505\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_686505 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_686505.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_686505 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_686505.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_686505 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_686505 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_686505 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_686505.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_99029\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_99029 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_99029.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_99029 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_99029.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_99029 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_99029 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_99029 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_99029.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_51720\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_51720 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_51720.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_51720 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_51720.next ();\n\n                                                   // check object __DEC_message_message_51720 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_51720 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_51720 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_51720.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_51720 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_51720.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_enclosingOperand is really bound\n                                          JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                          // check object _edge_fragment is really bound\n                                          JavaSDM.ensure ( _edge_fragment != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                          JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_enclosingOperand to combo\n                                          JavaSDM.ensure (combo.equals (_edge_enclosingOperand.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_fragment to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_enclosingOperand to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_fragment to combo\n                                          JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_60(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_763177 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_914650 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_430413 = null;\n      Interaction __DEC_operand_enclosingInteraction_23431 = null;\n      InteractionOperand __DEC_combo_fragment_879335 = null;\n      InteractionOperand __DEC_messageReceive_fragment_317970 = null;\n      InteractionOperand __DEC_messageSend_fragment_217113 = null;\n      InteractionOperand __DEC_operand_fragment_474633 = null;\n      Constraint __DEC_spec_specification_562537 = null;\n      InteractionOperand __DEC_guard_guard_847082 = null;\n      CombinedFragment __DEC_operand_operand_509317 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_264102 = null;\n      Message __DEC_messageReceive_receiveEvent_264102 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_907429 = null;\n      Message __DEC_messageSend_receiveEvent_907429 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_593887 = null;\n      Message __DEC_messageReceive_sendEvent_593887 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_103258 = null;\n      Message __DEC_messageSend_sendEvent_103258 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_612402 = null;\n      MessageEnd __DEC_message_message_612402 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link covered from line to parentOperand\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // iterate to-many link fragment from parentOperand to messageSend\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                       // ensure correct type and really bound of object messageSend\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // bind object\n                                       message = messageSend.getMessage ();\n\n                                       // check object message is really bound\n                                       JavaSDM.ensure ( message != null );\n\n                                       // check link message from message to interaction\n                                       JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                       ));\n\n                                       // check link message from messageReceive to message\n                                       JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                       ));\n\n                                       // check link receiveEvent from message to messageReceive\n                                       JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                       ));\n\n                                       // check link sendEvent from message to messageSend\n                                       JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_763177 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_763177 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_763177 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_763177 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_763177.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_914650 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_914650 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_914650 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_914650 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_914650.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_430413 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_430413 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_430413 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_430413 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_430413.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_23431 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_23431 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_23431 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_23431 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_23431.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_879335 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_879335 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_879335 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_879335 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_879335.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_879335 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_879335.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_317970 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_317970 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_317970 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_317970 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_317970.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_317970 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_317970.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_217113 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_217113 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_217113 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_217113 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_217113.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_217113 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_217113.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_474633 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_474633 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_474633 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_474633 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_474633.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_474633 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_474633.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_562537 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_562537 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_562537 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_562537.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_562537 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_562537.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_847082 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_847082 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_847082 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_847082.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_847082 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_847082.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_847082 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_847082.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_509317 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_509317 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_509317 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_509317.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_509317 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_509317.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_509317 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_509317.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_264102\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_264102 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_264102.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_264102 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_264102.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_264102 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_264102 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_264102 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_264102.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_907429\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_907429 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_907429.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_907429 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_907429.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_907429 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_907429 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_907429 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_907429.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_593887\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_593887 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_593887.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_593887 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_593887.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_593887 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_593887 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_593887 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_593887.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_103258\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_103258 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_103258.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_103258 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_103258.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_103258 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_103258 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_103258 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_103258.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_612402\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_612402 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_612402.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_612402 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_612402.next ();\n\n                                                   // check object __DEC_message_message_612402 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_612402 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_612402 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_612402.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_612402 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_612402.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to line\n                                          JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_61(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_170918 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_799073 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_5117 = null;\n      Interaction __DEC_operand_enclosingInteraction_736971 = null;\n      InteractionOperand __DEC_combo_fragment_814146 = null;\n      InteractionOperand __DEC_messageReceive_fragment_208258 = null;\n      InteractionOperand __DEC_messageSend_fragment_287652 = null;\n      InteractionOperand __DEC_operand_fragment_650498 = null;\n      Constraint __DEC_spec_specification_390851 = null;\n      InteractionOperand __DEC_guard_guard_192237 = null;\n      CombinedFragment __DEC_operand_operand_349690 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_969177 = null;\n      Message __DEC_messageReceive_receiveEvent_969177 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_986043 = null;\n      Message __DEC_messageSend_receiveEvent_986043 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_689986 = null;\n      Message __DEC_messageReceive_sendEvent_689986 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_48960 = null;\n      Message __DEC_messageSend_sendEvent_48960 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_617327 = null;\n      MessageEnd __DEC_message_message_617327 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link covered from line to parentOperand\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // bind object\n                                 message = messageReceive.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // iterate to-many link fragment from parentOperand to messageSend\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                       // ensure correct type and really bound of object messageSend\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // check link message from messageSend to message\n                                       JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                       ));\n\n                                       // check link sendEvent from message to messageSend\n                                       JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                       ));\n\n                                       // iterate to-many link src from line to _edge_coveredBy\n                                       fujaba__Success = false;\n\n                                       fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                                       while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                                             // check object _edge_coveredBy is really bound\n                                             JavaSDM.ensure ( _edge_coveredBy != null );\n                                             // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                             JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                             // check link trg from _edge_coveredBy to parentCombo\n                                             JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_enclosingInteraction_170918 = combo.getEnclosingInteraction ();\n\n                                                   // check object __DEC_combo_enclosingInteraction_170918 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_enclosingInteraction_170918 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_enclosingInteraction_170918 and interaction \n                                                   JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_170918.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_799073 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_799073 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_799073 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_799073 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_799073.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_5117 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_5117 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_5117 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_5117 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_5117.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_736971 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_736971 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_736971 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_736971 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_736971.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_814146 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_814146 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_814146 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_814146 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_814146.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_814146 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_814146.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_208258 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_208258 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_208258 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_208258 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_208258.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_208258 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_208258.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_287652 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_287652 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_287652 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_287652 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_287652.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_287652 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_287652.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_650498 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_650498 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_650498 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_650498 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_650498.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_650498 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_650498.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_390851 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_390851 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_390851 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_390851.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_390851 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_390851.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_192237 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_192237 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_192237 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_192237.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_192237 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_192237.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_192237 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_192237.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_349690 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_349690 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_349690 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_349690.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_349690 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_349690.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_349690 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_349690.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_969177\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_969177 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_969177.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageReceive_receiveEvent_969177 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_969177.next ();\n\n                                                         // check object __DEC_messageReceive_receiveEvent_969177 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_969177 != null );\n                                                         // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_969177 and message \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_969177.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_986043\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_986043 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_986043.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageSend_receiveEvent_986043 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_986043.next ();\n\n                                                         // check object __DEC_messageSend_receiveEvent_986043 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_receiveEvent_986043 != null );\n                                                         // check isomorphic binding between objects __DEC_messageSend_receiveEvent_986043 and message \n                                                         JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_986043.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_689986\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_689986 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_689986.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageReceive_sendEvent_689986 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_689986.next ();\n\n                                                         // check object __DEC_messageReceive_sendEvent_689986 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_sendEvent_689986 != null );\n                                                         // check isomorphic binding between objects __DEC_messageReceive_sendEvent_689986 and message \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_689986.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_48960\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_48960 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_48960.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageSend_sendEvent_48960 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_48960.next ();\n\n                                                         // check object __DEC_messageSend_sendEvent_48960 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_sendEvent_48960 != null );\n                                                         // check isomorphic binding between objects __DEC_messageSend_sendEvent_48960 and message \n                                                         JavaSDM.ensure ( !__DEC_messageSend_sendEvent_48960.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link message from message to __DEC_message_message_617327\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageTo__DEC_message_message_617327 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_617327.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_message_message_617327 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_617327.next ();\n\n                                                         // check object __DEC_message_message_617327 is really bound\n                                                         JavaSDM.ensure ( __DEC_message_message_617327 != null );\n                                                         // check isomorphic binding between objects __DEC_message_message_617327 and messageReceive \n                                                         JavaSDM.ensure ( !__DEC_message_message_617327.equals (messageReceive) );\n\n                                                         // check isomorphic binding between objects __DEC_message_message_617327 and messageSend \n                                                         JavaSDM.ensure ( !__DEC_message_message_617327.equals (messageSend) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_covered is really bound\n                                                JavaSDM.ensure ( _edge_covered != null );\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object message is really bound\n                                                JavaSDM.ensure ( message != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link message from message to interaction\n                                                JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                                ));\n\n                                                // check link message from messageReceive to message\n                                                JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                                ));\n\n                                                // check link message from messageSend to message\n                                                JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                                ));\n\n                                                // check link receiveEvent from message to messageReceive\n                                                JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                                ));\n\n                                                // check link receiveEvent from message to messageSend\n                                                JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                                )));\n\n                                                // check link sendEvent from message to messageSend\n                                                JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                                ));\n\n                                                // check link sendEvent from message to messageReceive\n                                                JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                                )));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (combo.equals (operand.eContainer()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_covered to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (_edge_covered.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to line\n                                                JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_covered to line\n                                                JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link covered from operand to line\n                                                JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                                // check link covered from parentCombo to line\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                                // check link covered from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_62(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_549349 = null;\n      NormalStep __DEC_alt_stepAlternative_10627 = null;\n      Flow __DEC_step_steps_476701 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_881719 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_881719 = null;\n      Match match = null;\n      PackageDeclaration packageDeclaration = null;\n      AlternativeFlow altFlow = null;\n      AlternativeFlowAlternative alt = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_stepAlternative is really bound\n         JavaSDM.ensure ( _edge_stepAlternative != null );\n         // bind object\n         _TmpObject = _edge_stepAlternative.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_stepAlternative.getTrg ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         _TmpObject = alt.getRef ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check link stepAlternative from alt to step\n         JavaSDM.ensure (step.equals (alt.eContainer()\n         ));\n\n         // bind object\n         packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n         // check link actors from actor to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_549349 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_549349 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_549349 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_549349.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_549349 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_549349.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_10627 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_10627 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_10627 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_10627.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_10627 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_10627.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_476701 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_476701 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_476701 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_476701.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_476701 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_476701.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_476701 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_476701.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_881719\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_881719 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_881719.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_881719 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_881719.next ();\n\n                     // check object __DEC_altFlow_ref_881719 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_881719 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_881719 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_881719.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_stepAlternative is really bound\n            JavaSDM.ensure ( _edge_stepAlternative != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link actors from actor to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_stepAlternative to step\n            JavaSDM.ensure (step.equals (_edge_stepAlternative.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_stepAlternative to alt\n            JavaSDM.ensure (alt.equals (_edge_stepAlternative.getTrg ()\n            ));\n\n            // check link useCases from useCase to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_14(
			EMoflonEdge _edge_stepAlternative);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_219627 = null;\n      NormalStep __DEC_alt_stepAlternative_410407 = null;\n      Flow __DEC_step_steps_75515 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_326537 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_326537 = null;\n      Match match = null;\n      PackageDeclaration packageDeclaration = null;\n      AlternativeFlow altFlow = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n      AlternativeFlowAlternative alt = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_ref is really bound\n         JavaSDM.ensure ( _edge_ref != null );\n         // bind object\n         _TmpObject = _edge_ref.getSrc ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         step = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(step.getStepAlternative().contains(alt));\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_ref.getTrg ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check link ref from alt to altFlow\n         JavaSDM.ensure (altFlow.equals (alt.getRef ()\n         ));\n\n         // bind object\n         packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n         // check link actors from actor to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_219627 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_219627 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_219627 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_219627.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_219627 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_219627.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_410407 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_410407 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_410407 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_410407.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_410407 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_410407.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_75515 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_75515 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_75515 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_75515.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_75515 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_75515.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_75515 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_75515.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_326537\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_326537 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_326537.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_326537 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_326537.next ();\n\n                     // check object __DEC_altFlow_ref_326537 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_326537 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_326537 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_326537.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_ref is really bound\n            JavaSDM.ensure ( _edge_ref != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link actors from actor to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_ref to alt\n            JavaSDM.ensure (alt.equals (_edge_ref.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_ref to altFlow\n            JavaSDM.ensure (altFlow.equals (_edge_ref.getTrg ()\n            ));\n\n            // check link useCases from useCase to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_15(EMoflonEdge _edge_ref);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_90670 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_976419 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_370967 = null;\n      Interaction __DEC_operand_enclosingInteraction_634230 = null;\n      InteractionOperand __DEC_combo_fragment_31536 = null;\n      InteractionOperand __DEC_messageReceive_fragment_112961 = null;\n      InteractionOperand __DEC_messageSend_fragment_916462 = null;\n      InteractionOperand __DEC_operand_fragment_165822 = null;\n      Constraint __DEC_spec_specification_827954 = null;\n      InteractionOperand __DEC_guard_guard_905083 = null;\n      CombinedFragment __DEC_operand_operand_95859 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_62130 = null;\n      Message __DEC_messageReceive_receiveEvent_62130 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_488381 = null;\n      Message __DEC_messageSend_receiveEvent_488381 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_957043 = null;\n      Message __DEC_messageReceive_sendEvent_957043 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_890639 = null;\n      Message __DEC_messageSend_sendEvent_890639 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_101667 = null;\n      MessageEnd __DEC_message_message_101667 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_operand is really bound\n         JavaSDM.ensure ( _edge_operand != null );\n         // bind object\n         _TmpObject = _edge_operand.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_operand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         parentOperand = combo.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check link operand from operand to combo\n         JavaSDM.ensure (combo.equals (operand.eContainer()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from operand to line\n               JavaSDM.ensure (operand.getCovered ().contains (line));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link fragment from parentOperand to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageReceive.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link message from messageSend to message\n                           JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_90670 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_90670 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_90670 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_90670 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_90670.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_976419 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_976419 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_976419 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_976419 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_976419.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_370967 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_370967 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_370967 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_370967 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_370967.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_634230 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_634230 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_634230 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_634230 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_634230.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_31536 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_31536 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_31536 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_31536 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_31536.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_31536 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_31536.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_112961 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_112961 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_112961 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_112961 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_112961.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_112961 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_112961.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_916462 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_916462 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_916462 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_916462 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_916462.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_916462 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_916462.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_165822 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_165822 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_165822 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_165822 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_165822.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_165822 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_165822.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_827954 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_827954 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_827954 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_827954.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_827954 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_827954.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_905083 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_905083 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_905083 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_905083.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_905083 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_905083.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_905083 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_905083.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_95859 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_95859 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_95859 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_95859.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_95859 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_95859.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_95859 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_95859.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_62130\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_62130 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_62130.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_62130 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_62130.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_62130 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_62130 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_62130 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_62130.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_488381\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_488381 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_488381.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_488381 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_488381.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_488381 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_488381 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_488381 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_488381.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_957043\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_957043 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_957043.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_957043 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_957043.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_957043 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_957043 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_957043 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_957043.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_890639\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_890639 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_890639.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_890639 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_890639.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_890639 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_890639 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_890639 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_890639.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_101667\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_101667 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_101667.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_101667 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_101667.next ();\n\n                                       // check object __DEC_message_message_101667 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_101667 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_101667 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_101667.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_101667 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_101667.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_operand is really bound\n                              JavaSDM.ensure ( _edge_operand != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_operand to combo\n                              JavaSDM.ensure (combo.equals (_edge_operand.getSrc ()\n                              ));\n\n                              // check link trg from _edge_operand to operand\n                              JavaSDM.ensure (operand.equals (_edge_operand.getTrg ()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_63(EMoflonEdge _edge_operand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_787580 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_837721 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_209556 = null;\n      Interaction __DEC_operand_enclosingInteraction_482497 = null;\n      InteractionOperand __DEC_combo_fragment_838266 = null;\n      InteractionOperand __DEC_messageReceive_fragment_826728 = null;\n      InteractionOperand __DEC_messageSend_fragment_853623 = null;\n      InteractionOperand __DEC_operand_fragment_526113 = null;\n      Constraint __DEC_spec_specification_455175 = null;\n      InteractionOperand __DEC_guard_guard_796436 = null;\n      CombinedFragment __DEC_operand_operand_894218 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_760584 = null;\n      Message __DEC_messageReceive_receiveEvent_760584 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_211852 = null;\n      Message __DEC_messageSend_receiveEvent_211852 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_521894 = null;\n      Message __DEC_messageReceive_sendEvent_521894 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_394653 = null;\n      Message __DEC_messageSend_sendEvent_394653 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_28905 = null;\n      MessageEnd __DEC_message_message_28905 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to parentOperand\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n               // ensure correct type and really bound of object parentOperand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               parentOperand = (InteractionOperand) _TmpObject;\n               // check isomorphic binding between objects parentOperand and operand \n               JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link fragment from parentOperand to combo\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageReceive.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_787580 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_787580 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_787580 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_787580 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_787580.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_837721 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_837721 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_837721 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_837721 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_837721.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_209556 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_209556 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_209556 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_209556 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_209556.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_482497 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_482497 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_482497 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_482497 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_482497.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_838266 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_838266 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_838266 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_838266 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_838266.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_838266 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_838266.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_826728 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_826728 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_826728 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_826728 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_826728.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_826728 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_826728.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_853623 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_853623 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_853623 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_853623 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_853623.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_853623 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_853623.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_526113 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_526113 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_526113 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_526113 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_526113.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_526113 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_526113.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_455175 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_455175 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_455175 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_455175.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_455175 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_455175.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_796436 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_796436 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_796436 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_796436.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_796436 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_796436.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_796436 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_796436.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_894218 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_894218 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_894218 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_894218.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_894218 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_894218.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_894218 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_894218.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_760584\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_760584 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_760584.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_760584 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_760584.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_760584 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_760584 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_760584 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_760584.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_211852\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_211852 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_211852.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_211852 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_211852.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_211852 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_211852 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_211852 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_211852.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_521894\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_521894 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_521894.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_521894 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_521894.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_521894 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_521894 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_521894 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_521894.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_394653\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_394653 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_394653.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_394653 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_394653.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_394653 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_394653 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_394653 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_394653.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_28905\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_28905 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_28905.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_28905 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_28905.next ();\n\n                                             // check object __DEC_message_message_28905 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_28905 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_28905 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_28905.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_28905 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_28905.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to operand\n                                    JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_64(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_497737 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_563729 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_728928 = null;\n      Interaction __DEC_operand_enclosingInteraction_985432 = null;\n      InteractionOperand __DEC_combo_fragment_448836 = null;\n      InteractionOperand __DEC_messageReceive_fragment_365796 = null;\n      InteractionOperand __DEC_messageSend_fragment_265343 = null;\n      InteractionOperand __DEC_operand_fragment_574041 = null;\n      Constraint __DEC_spec_specification_571744 = null;\n      InteractionOperand __DEC_guard_guard_208026 = null;\n      CombinedFragment __DEC_operand_operand_73182 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_984312 = null;\n      Message __DEC_messageReceive_receiveEvent_984312 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_265241 = null;\n      Message __DEC_messageSend_receiveEvent_265241 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_77045 = null;\n      Message __DEC_messageReceive_sendEvent_77045 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_258437 = null;\n      Message __DEC_messageSend_sendEvent_258437 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_728771 = null;\n      MessageEnd __DEC_message_message_728771 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to parentOperand\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n               // ensure correct type and really bound of object parentOperand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               parentOperand = (InteractionOperand) _TmpObject;\n               // check isomorphic binding between objects parentOperand and operand \n               JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link fragment from parentOperand to combo\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageReceive.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // iterate to-many link src from line to _edge_coveredBy\n                                 fujaba__Success = false;\n\n                                 fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                                       // check object _edge_coveredBy is really bound\n                                       JavaSDM.ensure ( _edge_coveredBy != null );\n                                       // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                       JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                       // check link trg from _edge_coveredBy to operand\n                                       JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_497737 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_497737 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_497737 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_497737 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_497737.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_563729 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_563729 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_563729 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_563729 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_563729.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_728928 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_728928 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_728928 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_728928 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_728928.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_985432 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_985432 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_985432 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_985432 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_985432.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_448836 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_448836 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_448836 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_448836 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_448836.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_448836 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_448836.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_365796 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_365796 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_365796 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_365796 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_365796.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_365796 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_365796.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_265343 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_265343 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_265343 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_265343 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_265343.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_265343 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_265343.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_574041 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_574041 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_574041 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_574041 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_574041.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_574041 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_574041.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_571744 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_571744 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_571744 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_571744.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_571744 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_571744.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_208026 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_208026 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_208026 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_208026.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_208026 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_208026.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_208026 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_208026.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_73182 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_73182 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_73182 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_73182.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_73182 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_73182.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_73182 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_73182.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_984312\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_984312 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_984312.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_984312 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_984312.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_984312 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_984312 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_984312 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_984312.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_265241\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_265241 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_265241.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_265241 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_265241.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_265241 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_265241 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_265241 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_265241.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_77045\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_77045 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_77045.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_77045 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_77045.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_77045 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_77045 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_77045 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_77045.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_258437\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_258437 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_258437.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_258437 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_258437.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_258437 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_258437 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_258437 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_258437.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_728771\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_728771 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_728771.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_728771 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_728771.next ();\n\n                                                   // check object __DEC_message_message_728771 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_728771 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_728771 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_728771.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_728771 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_728771.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_covered is really bound\n                                          JavaSDM.ensure ( _edge_covered != null );\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                          JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_covered to operand\n                                          JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to line\n                                          JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_covered to line\n                                          JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to operand\n                                          JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_65(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_440034 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_47394 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_819262 = null;\n      Interaction __DEC_operand_enclosingInteraction_386951 = null;\n      InteractionOperand __DEC_combo_fragment_655014 = null;\n      InteractionOperand __DEC_messageReceive_fragment_318162 = null;\n      InteractionOperand __DEC_messageSend_fragment_35725 = null;\n      InteractionOperand __DEC_operand_fragment_850835 = null;\n      Constraint __DEC_spec_specification_906675 = null;\n      InteractionOperand __DEC_guard_guard_955945 = null;\n      CombinedFragment __DEC_operand_operand_238472 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_969430 = null;\n      Message __DEC_messageReceive_receiveEvent_969430 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_916917 = null;\n      Message __DEC_messageSend_receiveEvent_916917 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_125830 = null;\n      Message __DEC_messageReceive_sendEvent_125830 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_287371 = null;\n      Message __DEC_messageSend_sendEvent_287371 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_291699 = null;\n      MessageEnd __DEC_message_message_291699 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_guard is really bound\n         JavaSDM.ensure ( _edge_guard != null );\n         // bind object\n         _TmpObject = _edge_guard.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         parentOperand = combo.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link trg from _edge_guard to guard\n         JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // check link covered from line to parentOperand\n               JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n               // iterate to-many link fragment from parentOperand to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_440034 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_440034 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_440034 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_440034 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_440034.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_47394 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_47394 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_47394 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_47394 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_47394.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_819262 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_819262 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_819262 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_819262 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_819262.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_386951 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_386951 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_386951 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_386951 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_386951.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_655014 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_655014 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_655014 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_655014 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_655014.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_655014 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_655014.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_318162 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_318162 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_318162 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_318162 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_318162.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_318162 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_318162.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_35725 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_35725 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_35725 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_35725 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_35725.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_35725 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_35725.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_850835 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_850835 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_850835 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_850835 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_850835.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_850835 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_850835.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_906675 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_906675 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_906675 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_906675.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_906675 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_906675.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_955945 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_955945 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_955945 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_955945.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_955945 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_955945.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_955945 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_955945.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_238472 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_238472 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_238472 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_238472.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_238472 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_238472.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_238472 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_238472.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_969430\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_969430 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_969430.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_969430 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_969430.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_969430 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_969430 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_969430 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_969430.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_916917\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_916917 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_916917.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_916917 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_916917.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_916917 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_916917 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_916917 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_916917.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_125830\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_125830 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_125830.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_125830 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_125830.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_125830 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_125830 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_125830 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_125830.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_287371\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_287371 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_287371.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_287371 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_287371.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_287371 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_287371 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_287371 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_287371.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_291699\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_291699 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_291699.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_291699 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_291699.next ();\n\n                                       // check object __DEC_message_message_291699 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_291699 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_291699 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_291699.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_291699 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_291699.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_guard is really bound\n                              JavaSDM.ensure ( _edge_guard != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_guard to operand\n                              JavaSDM.ensure (operand.equals (_edge_guard.getSrc ()\n                              ));\n\n                              // check link trg from _edge_guard to guard\n                              JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_66(EMoflonEdge _edge_guard);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_809299 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_531050 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_348772 = null;\n      Interaction __DEC_operand_enclosingInteraction_56633 = null;\n      InteractionOperand __DEC_combo_fragment_801714 = null;\n      InteractionOperand __DEC_messageReceive_fragment_141449 = null;\n      InteractionOperand __DEC_messageSend_fragment_638367 = null;\n      InteractionOperand __DEC_operand_fragment_807791 = null;\n      Constraint __DEC_spec_specification_986960 = null;\n      InteractionOperand __DEC_guard_guard_44335 = null;\n      CombinedFragment __DEC_operand_operand_617580 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_961390 = null;\n      Message __DEC_messageReceive_receiveEvent_961390 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_384967 = null;\n      Message __DEC_messageSend_receiveEvent_384967 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_782320 = null;\n      Message __DEC_messageReceive_sendEvent_782320 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_117768 = null;\n      Message __DEC_messageSend_sendEvent_117768 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_835483 = null;\n      MessageEnd __DEC_message_message_835483 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      InteractionConstraint guard = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_specification is really bound\n         JavaSDM.ensure ( _edge_specification != null );\n         // bind object\n         _TmpObject = _edge_specification.getSrc ();\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n\n         // bind object\n         operand = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(guard.equals(operand.getGuard()));\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         parentOperand = combo.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // bind object\n         _TmpObject = _edge_specification.getTrg ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link specification from spec to guard\n         JavaSDM.ensure (guard.equals (spec.eContainer()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // check link covered from line to parentOperand\n               JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n               // iterate to-many link fragment from parentOperand to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_809299 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_809299 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_809299 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_809299 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_809299.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_531050 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_531050 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_531050 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_531050 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_531050.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_348772 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_348772 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_348772 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_348772 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_348772.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_56633 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_56633 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_56633 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_56633 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_56633.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_801714 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_801714 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_801714 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_801714 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_801714.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_801714 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_801714.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_141449 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_141449 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_141449 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_141449 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_141449.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_141449 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_141449.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_638367 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_638367 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_638367 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_638367 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_638367.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_638367 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_638367.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_807791 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_807791 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_807791 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_807791 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_807791.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_807791 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_807791.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_986960 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_986960 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_986960 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_986960.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_986960 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_986960.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_44335 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_44335 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_44335 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_44335.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_44335 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_44335.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_44335 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_44335.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_617580 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_617580 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_617580 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_617580.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_617580 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_617580.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_617580 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_617580.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_961390\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_961390 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_961390.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_961390 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_961390.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_961390 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_961390 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_961390 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_961390.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_384967\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_384967 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_384967.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_384967 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_384967.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_384967 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_384967 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_384967 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_384967.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_782320\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_782320 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_782320.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_782320 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_782320.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_782320 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_782320 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_782320 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_782320.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_117768\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_117768 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_117768.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_117768 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_117768.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_117768 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_117768 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_117768 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_117768.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_835483\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_835483 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_835483.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_835483 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_835483.next ();\n\n                                       // check object __DEC_message_message_835483 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_835483 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_835483 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_835483.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_835483 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_835483.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_specification is really bound\n                              JavaSDM.ensure ( _edge_specification != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_specification to guard\n                              JavaSDM.ensure (guard.equals (_edge_specification.getSrc ()\n                              ));\n\n                              // check link trg from _edge_specification to spec\n                              JavaSDM.ensure (spec.equals (_edge_specification.getTrg ()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_67(
			EMoflonEdge _edge_specification);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_751956 = null;\n      NormalStep __DEC_alt_stepAlternative_884273 = null;\n      Flow __DEC_step_steps_732830 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_302113 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_302113 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      Actor actor = null;\n      NormalStep step = null;\n      NamedFlow flow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_steps is really bound\n         JavaSDM.ensure ( _edge_steps != null );\n         // bind object\n         _TmpObject = _edge_steps.getSrc ();\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_steps.getTrg ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // check link steps from step to flow\n         JavaSDM.ensure (flow.equals (step.eContainer()\n         ));\n\n         // bind object\n         packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n         // check link actors from actor to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_751956 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_751956 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_751956 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_751956.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_751956 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_751956.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_884273 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_884273 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_884273 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_884273.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_884273 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_884273.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_732830 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_732830 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_732830 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_732830.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_732830 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_732830.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_732830 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_732830.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_302113\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_302113 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_302113.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_302113 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_302113.next ();\n\n                           // check object __DEC_altFlow_ref_302113 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_302113 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_302113 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_302113.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_steps is really bound\n                  JavaSDM.ensure ( _edge_steps != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object packageDeclaration is really bound\n                  JavaSDM.ensure ( packageDeclaration != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link actors from actor to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_steps to flow\n                  JavaSDM.ensure (flow.equals (_edge_steps.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_steps to step\n                  JavaSDM.ensure (step.equals (_edge_steps.getTrg ()\n                  ));\n\n                  // check link useCases from useCase to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_16(EMoflonEdge _edge_steps);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_130057 = null;\n      NormalStep __DEC_alt_stepAlternative_319154 = null;\n      Flow __DEC_step_steps_19391 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_546992 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_546992 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_actor is really bound\n         JavaSDM.ensure ( _edge_actor != null );\n         // bind object\n         _TmpObject = _edge_actor.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // check link trg from _edge_actor to actor\n         JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n         ));\n\n         // bind object\n         packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n         // check link actors from actor to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_130057 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_130057 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_130057 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_130057.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_130057 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_130057.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_319154 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_319154 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_319154 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_319154.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_319154 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_319154.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_19391 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_19391 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_19391 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_19391.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_19391 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_19391.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_19391 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_19391.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_546992\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_546992 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_546992.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_546992 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_546992.next ();\n\n                           // check object __DEC_altFlow_ref_546992 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_546992 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_546992 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_546992.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_actor is really bound\n                  JavaSDM.ensure ( _edge_actor != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object packageDeclaration is really bound\n                  JavaSDM.ensure ( packageDeclaration != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link actors from actor to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_actor to step\n                  JavaSDM.ensure (step.equals (_edge_actor.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_actor to actor\n                  JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n                  ));\n\n                  // check link useCases from useCase to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_17(EMoflonEdge _edge_actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_767831 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_512966 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_727953 = null;\n      Interaction __DEC_operand_enclosingInteraction_642093 = null;\n      InteractionOperand __DEC_combo_fragment_225687 = null;\n      InteractionOperand __DEC_messageReceive_fragment_214708 = null;\n      InteractionOperand __DEC_messageSend_fragment_230009 = null;\n      InteractionOperand __DEC_operand_fragment_194719 = null;\n      Constraint __DEC_spec_specification_354547 = null;\n      InteractionOperand __DEC_guard_guard_389511 = null;\n      CombinedFragment __DEC_operand_operand_705397 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_909170 = null;\n      Message __DEC_messageReceive_receiveEvent_909170 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_677672 = null;\n      Message __DEC_messageSend_receiveEvent_677672 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_213768 = null;\n      Message __DEC_messageReceive_sendEvent_213768 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_567999 = null;\n      Message __DEC_messageSend_sendEvent_567999 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_57866 = null;\n      MessageEnd __DEC_message_message_57866 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sendEvent is really bound\n         JavaSDM.ensure ( _edge_sendEvent != null );\n         // bind object\n         _TmpObject = _edge_sendEvent.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link src from _edge_sendEvent to message\n         JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n         ));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_767831 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_767831 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_767831 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_767831 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_767831.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_512966 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_512966 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_512966 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_512966 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_512966.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_727953 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_727953 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_727953 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_727953 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_727953.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_642093 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_642093 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_642093 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_642093 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_642093.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_225687 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_225687 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_225687 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_225687 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_225687.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_225687 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_225687.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_214708 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_214708 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_214708 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_214708 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_214708.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_214708 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_214708.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_230009 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_230009 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_230009 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_230009 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_230009.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_230009 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_230009.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_194719 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_194719 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_194719 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_194719 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_194719.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_194719 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_194719.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_354547 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_354547 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_354547 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_354547.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_354547 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_354547.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_389511 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_389511 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_389511 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_389511.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_389511 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_389511.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_389511 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_389511.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_705397 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_705397 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_705397 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_705397.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_705397 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_705397.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_705397 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_705397.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_909170\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_909170 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_909170.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_909170 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_909170.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_909170 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_909170 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_909170 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_909170.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_677672\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_677672 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_677672.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_677672 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_677672.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_677672 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_677672 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_677672 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_677672.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_213768\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_213768 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_213768.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_213768 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_213768.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_213768 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_213768 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_213768 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_213768.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_567999\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_567999 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_567999.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_567999 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_567999.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_567999 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_567999 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_567999 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_567999.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_57866\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_57866 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_57866.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_57866 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_57866.next ();\n\n                                             // check object __DEC_message_message_57866 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_57866 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_57866 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_57866.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_57866 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_57866.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_sendEvent is really bound\n                                    JavaSDM.ensure ( _edge_sendEvent != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_sendEvent to message\n                                    JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_sendEvent to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_sendEvent.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_68(
			EMoflonEdge _edge_sendEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_627102 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_694967 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_577114 = null;\n      Interaction __DEC_operand_enclosingInteraction_188706 = null;\n      InteractionOperand __DEC_combo_fragment_677526 = null;\n      InteractionOperand __DEC_messageReceive_fragment_832580 = null;\n      InteractionOperand __DEC_messageSend_fragment_549993 = null;\n      InteractionOperand __DEC_operand_fragment_640495 = null;\n      Constraint __DEC_spec_specification_628841 = null;\n      InteractionOperand __DEC_guard_guard_159786 = null;\n      CombinedFragment __DEC_operand_operand_481347 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_596265 = null;\n      Message __DEC_messageReceive_receiveEvent_596265 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_214038 = null;\n      Message __DEC_messageSend_receiveEvent_214038 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_687568 = null;\n      Message __DEC_messageReceive_sendEvent_687568 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_248612 = null;\n      Message __DEC_messageSend_sendEvent_248612 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_135763 = null;\n      MessageEnd __DEC_message_message_135763 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      InteractionOperand parentOperand = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_receiveEvent is really bound\n         JavaSDM.ensure ( _edge_receiveEvent != null );\n         // bind object\n         _TmpObject = _edge_receiveEvent.getTrg ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         parentOperand = messageReceive.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // check link src from _edge_receiveEvent to message\n         JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to combo\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_627102 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_627102 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_627102 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_627102 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_627102.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_694967 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_694967 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_694967 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_694967 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_694967.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_577114 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_577114 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_577114 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_577114 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_577114.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_188706 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_188706 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_188706 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_188706 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_188706.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_677526 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_677526 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_677526 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_677526 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_677526.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_677526 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_677526.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_832580 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_832580 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_832580 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_832580 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_832580.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_832580 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_832580.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_549993 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_549993 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_549993 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_549993 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_549993.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_549993 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_549993.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_640495 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_640495 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_640495 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_640495 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_640495.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_640495 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_640495.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_628841 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_628841 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_628841 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_628841.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_628841 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_628841.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_159786 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_159786 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_159786 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_159786.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_159786 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_159786.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_159786 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_159786.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_481347 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_481347 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_481347 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_481347.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_481347 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_481347.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_481347 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_481347.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_596265\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_596265 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_596265.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_596265 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_596265.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_596265 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_596265 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_596265 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_596265.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_214038\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_214038 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_214038.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_214038 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_214038.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_214038 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_214038 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_214038 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_214038.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_687568\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_687568 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_687568.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_687568 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_687568.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_687568 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_687568 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_687568 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_687568.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_248612\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_248612 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_248612.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_248612 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_248612.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_248612 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_248612 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_248612 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_248612.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_135763\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_135763 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_135763.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_135763 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_135763.next ();\n\n                                             // check object __DEC_message_message_135763 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_135763 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_135763 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_135763.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_135763 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_135763.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_receiveEvent is really bound\n                                    JavaSDM.ensure ( _edge_receiveEvent != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_receiveEvent to message\n                                    JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_receiveEvent to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_69(
			EMoflonEdge _edge_receiveEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_898161 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_959264 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_670519 = null;\n      Interaction __DEC_operand_enclosingInteraction_110351 = null;\n      InteractionOperand __DEC_combo_fragment_948811 = null;\n      InteractionOperand __DEC_messageReceive_fragment_788391 = null;\n      InteractionOperand __DEC_messageSend_fragment_619816 = null;\n      InteractionOperand __DEC_operand_fragment_574885 = null;\n      Constraint __DEC_spec_specification_787379 = null;\n      InteractionOperand __DEC_guard_guard_237546 = null;\n      CombinedFragment __DEC_operand_operand_278196 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_831077 = null;\n      Message __DEC_messageReceive_receiveEvent_831077 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_860745 = null;\n      Message __DEC_messageSend_receiveEvent_860745 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_778242 = null;\n      Message __DEC_messageReceive_sendEvent_778242 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_822808 = null;\n      Message __DEC_messageSend_sendEvent_822808 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_114524 = null;\n      MessageEnd __DEC_message_message_114524 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_interaction is really bound\n         JavaSDM.ensure ( _edge_interaction != null );\n         // bind object\n         _TmpObject = _edge_interaction.getSrc ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // bind object\n         parentOperand = messageReceive.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link fragment from messageSend to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link trg from _edge_interaction to interaction\n         JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to combo\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check link lifeline from line to interaction\n                     JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_898161 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_898161 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_898161 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_898161 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_898161.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_959264 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_959264 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_959264 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_959264 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_959264.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_670519 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_670519 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_670519 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_670519 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_670519.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_110351 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_110351 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_110351 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_110351 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_110351.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_948811 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_948811 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_948811 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_948811 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_948811.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_948811 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_948811.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_788391 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_788391 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_788391 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_788391 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_788391.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_788391 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_788391.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_619816 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_619816 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_619816 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_619816 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_619816.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_619816 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_619816.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_574885 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_574885 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_574885 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_574885 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_574885.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_574885 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_574885.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_787379 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_787379 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_787379 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_787379.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_787379 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_787379.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_237546 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_237546 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_237546 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_237546.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_237546 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_237546.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_237546 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_237546.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_278196 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_278196 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_278196 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_278196.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_278196 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_278196.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_278196 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_278196.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_831077\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_831077 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_831077.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_831077 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_831077.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_831077 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_831077 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_831077 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_831077.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_860745\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_860745 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_860745.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_860745 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_860745.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_860745 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_860745 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_860745 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_860745.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_778242\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_778242 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_778242.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_778242 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_778242.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_778242 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_778242 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_778242 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_778242.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_822808\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_822808 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_822808.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_822808 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_822808.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_822808 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_822808 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_822808 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_822808.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_114524\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_114524 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_114524.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_114524 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_114524.next ();\n\n                                       // check object __DEC_message_message_114524 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_114524 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_114524 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_114524.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_114524 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_114524.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_interaction is really bound\n                              JavaSDM.ensure ( _edge_interaction != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_interaction to message\n                              JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                              ));\n\n                              // check link trg from _edge_interaction to interaction\n                              JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_70(
			EMoflonEdge _edge_interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_691858 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_702309 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_479966 = null;\n      Interaction __DEC_operand_enclosingInteraction_976334 = null;\n      InteractionOperand __DEC_combo_fragment_40451 = null;\n      InteractionOperand __DEC_messageReceive_fragment_954418 = null;\n      InteractionOperand __DEC_messageSend_fragment_768330 = null;\n      InteractionOperand __DEC_operand_fragment_181949 = null;\n      Constraint __DEC_spec_specification_994895 = null;\n      InteractionOperand __DEC_guard_guard_616296 = null;\n      CombinedFragment __DEC_operand_operand_529780 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316543 = null;\n      Message __DEC_messageReceive_receiveEvent_316543 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_408581 = null;\n      Message __DEC_messageSend_receiveEvent_408581 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_294682 = null;\n      Message __DEC_messageReceive_sendEvent_294682 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_219342 = null;\n      Message __DEC_messageSend_sendEvent_219342 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_584497 = null;\n      MessageEnd __DEC_message_message_584497 = null;\n      Match match = null;\n      Iterator fujaba__IterMessageTo_edge_interaction = null;\n      EMoflonEdge _edge_interaction = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getTrg ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // bind object\n         parentOperand = messageReceive.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link fragment from messageSend to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link src from _edge_message to interaction\n         JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n         ));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link lifeline from line to interaction\n               JavaSDM.ensure (interaction.equals (line.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link src from message to _edge_interaction\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo_edge_interaction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterMessageTo_edge_interaction.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_interaction = (EMoflonEdge) fujaba__IterMessageTo_edge_interaction.next ();\n\n                                 // check object _edge_interaction is really bound\n                                 JavaSDM.ensure ( _edge_interaction != null );\n                                 // check isomorphic binding between objects _edge_message and _edge_interaction \n                                 JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                 // check link trg from _edge_interaction to interaction\n                                 JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_691858 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_691858 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_691858 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_691858 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_691858.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_702309 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_702309 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_702309 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_702309 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_702309.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_479966 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_479966 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_479966 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_479966 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_479966.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_976334 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_976334 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_976334 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_976334 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_976334.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_40451 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_40451 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_40451 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_40451 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_40451.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_40451 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_40451.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_954418 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_954418 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_954418 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_954418 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_954418.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_954418 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_954418.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_768330 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_768330 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_768330 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_768330 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_768330.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_768330 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_768330.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_181949 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_181949 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_181949 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_181949 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_181949.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_181949 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_181949.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_994895 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_994895 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_994895 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_994895.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_994895 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_994895.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_616296 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_616296 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_616296 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_616296.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_616296 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_616296.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_616296 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_616296.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_529780 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_529780 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_529780 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_529780.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_529780 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_529780.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_529780 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_529780.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_316543\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316543 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316543.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_316543 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316543.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_316543 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_316543 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_316543 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_316543.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_408581\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_408581 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_408581.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_408581 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_408581.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_408581 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_408581 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_408581 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_408581.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_294682\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_294682 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_294682.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_294682 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_294682.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_294682 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_294682 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_294682 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_294682.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_219342\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_219342 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_219342.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_219342 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_219342.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_219342 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_219342 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_219342 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_219342.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_584497\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_584497 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_584497.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_584497 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_584497.next ();\n\n                                             // check object __DEC_message_message_584497 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_584497 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_584497 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_584497.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_584497 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_584497.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_interaction is really bound\n                                    JavaSDM.ensure ( _edge_interaction != null );\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_message and _edge_interaction \n                                    JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_interaction to message\n                                    JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_message to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_interaction to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_71(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_914835 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_861941 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_694109 = null;\n      Interaction __DEC_operand_enclosingInteraction_441028 = null;\n      InteractionOperand __DEC_combo_fragment_502671 = null;\n      InteractionOperand __DEC_messageReceive_fragment_928274 = null;\n      InteractionOperand __DEC_messageSend_fragment_116894 = null;\n      InteractionOperand __DEC_operand_fragment_279058 = null;\n      Constraint __DEC_spec_specification_374352 = null;\n      InteractionOperand __DEC_guard_guard_682161 = null;\n      CombinedFragment __DEC_operand_operand_774711 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_837239 = null;\n      Message __DEC_messageReceive_receiveEvent_837239 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_737546 = null;\n      Message __DEC_messageSend_receiveEvent_737546 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_334899 = null;\n      Message __DEC_messageReceive_sendEvent_334899 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_747965 = null;\n      Message __DEC_messageSend_sendEvent_747965 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_663177 = null;\n      MessageEnd __DEC_message_message_663177 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_914835 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_914835 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_914835 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_914835 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_914835.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_861941 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_861941 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_861941 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_861941 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_861941.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_694109 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_694109 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_694109 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_694109 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_694109.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_441028 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_441028 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_441028 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_441028 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_441028.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_502671 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_502671 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_502671 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_502671 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_502671.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_502671 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_502671.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_928274 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_928274 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_928274 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_928274 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_928274.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_928274 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_928274.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_116894 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_116894 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_116894 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_116894 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_116894.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_116894 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_116894.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_279058 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_279058 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_279058 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_279058 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_279058.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_279058 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_279058.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_374352 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_374352 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_374352 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_374352.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_374352 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_374352.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_682161 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_682161 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_682161 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_682161.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_682161 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_682161.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_682161 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_682161.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_774711 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_774711 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_774711 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_774711.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_774711 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_774711.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_774711 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_774711.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_837239\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_837239 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_837239.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_837239 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_837239.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_837239 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_837239 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_837239 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_837239.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_737546\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_737546 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_737546.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_737546 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_737546.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_737546 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_737546 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_737546 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_737546.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_334899\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_334899 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_334899.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_334899 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_334899.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_334899 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_334899 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_334899 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_334899.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_747965\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_747965 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_747965.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_747965 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_747965.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_747965 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_747965 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_747965 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_747965.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_663177\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_663177 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_663177.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_663177 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_663177.next ();\n\n                                             // check object __DEC_message_message_663177 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_663177 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_663177 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_663177.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_663177 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_663177.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_72(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_428584 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_195801 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_28477 = null;\n      Interaction __DEC_operand_enclosingInteraction_881216 = null;\n      InteractionOperand __DEC_combo_fragment_375761 = null;\n      InteractionOperand __DEC_messageReceive_fragment_852505 = null;\n      InteractionOperand __DEC_messageSend_fragment_766254 = null;\n      InteractionOperand __DEC_operand_fragment_212730 = null;\n      Constraint __DEC_spec_specification_760855 = null;\n      InteractionOperand __DEC_guard_guard_853732 = null;\n      CombinedFragment __DEC_operand_operand_560793 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_96712 = null;\n      Message __DEC_messageReceive_receiveEvent_96712 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_211087 = null;\n      Message __DEC_messageSend_receiveEvent_211087 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_607450 = null;\n      Message __DEC_messageReceive_sendEvent_607450 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_911874 = null;\n      Message __DEC_messageSend_sendEvent_911874 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_600510 = null;\n      MessageEnd __DEC_message_message_600510 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageReceive.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_428584 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_428584 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_428584 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_428584 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_428584.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_195801 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_195801 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_195801 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_195801 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_195801.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_28477 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_28477 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_28477 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_28477 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_28477.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_881216 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_881216 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_881216 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_881216 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_881216.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_375761 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_375761 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_375761 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_375761 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_375761.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_375761 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_375761.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_852505 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_852505 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_852505 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_852505 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_852505.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_852505 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_852505.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_766254 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_766254 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_766254 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_766254 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_766254.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_766254 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_766254.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_212730 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_212730 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_212730 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_212730 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_212730.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_212730 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_212730.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_760855 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_760855 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_760855 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_760855.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_760855 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_760855.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_853732 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_853732 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_853732 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_853732.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_853732 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_853732.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_853732 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_853732.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_560793 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_560793 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_560793 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_560793.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_560793 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_560793.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_560793 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_560793.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_96712\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_96712 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_96712.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_96712 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_96712.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_96712 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_96712 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_96712 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_96712.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_211087\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_211087 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_211087.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_211087 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_211087.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_211087 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_211087 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_211087 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_211087.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_607450\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_607450 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_607450.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_607450 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_607450.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_607450 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_607450 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_607450 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_607450.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_911874\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_911874 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_911874.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_911874 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_911874.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_911874 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_911874 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_911874 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_911874.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_600510\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_600510 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_600510.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_600510 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_600510.next ();\n\n                                             // check object __DEC_message_message_600510 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_600510 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_600510 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_600510.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_600510 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_600510.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_73(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // AltStepNFToComboRule
