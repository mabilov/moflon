/**
 */
package UseCaseToModalSequenceDiagramIntegration.Rules;

import ModalSequenceDiagram.CombinedFragment;
import ModalSequenceDiagram.Constraint;
import ModalSequenceDiagram.Interaction;
import ModalSequenceDiagram.InteractionConstraint;
import ModalSequenceDiagram.InteractionOperand;
import ModalSequenceDiagram.Lifeline;
import ModalSequenceDiagram.LiteralString;
import ModalSequenceDiagram.Message;
import ModalSequenceDiagram.MessageEnd;
import ModalSequenceDiagram.MessageOccurrenceSpecification;
import ModalSequenceDiagram.ModalSequenceDiagramFactory;
import ModalSequenceDiagram.Model;

import TGGLanguage.csp.*;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NamedFlow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import UseCaseToModalSequenceDiagramIntegration.ActorToLifeline;
import UseCaseToModalSequenceDiagramIntegration.FlowToInteractionFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToMessage;
import UseCaseToModalSequenceDiagramIntegration.PackageDeclarationToPackage;
import UseCaseToModalSequenceDiagramIntegration.ParallelStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.StepAlternativeToInteractionOperand;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToInteraction;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToModalSequenceDiagramIntegrationFactory;
import UseCaseToModalSequenceDiagramIntegration.UseCasesModelToModel;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Alt Step NF To Combo Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see UseCaseToModalSequenceDiagramIntegration.Rules.RulesPackage#getAltStepNFToComboRule()
 * @model
 * @generated
 */
public interface AltStepNFToComboRule extends AbstractRule, AltStepToComboRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __useCase_flows_flow = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,flow,step,alt,altFlow,useCase,actor));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __alt_ref_altFlow\n            __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __flow_steps_step\n            __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_stepAlternative_alt\n            __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_actor_actor\n            __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __step_stepAlternative_alt\n            __step_stepAlternative_alt.setName (\"stepAlternative\");\n            // assign attribute __alt_ref_altFlow\n            __alt_ref_altFlow.setName (\"ref\");\n            // assign attribute __flow_steps_step\n            __flow_steps_step.setName (\"steps\");\n            // assign attribute __step_actor_actor\n            __step_actor_actor.setName (\"actor\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__alt_ref_altFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__flow_steps_step,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_stepAlternative_alt,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,step,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,altFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_actor_actor,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,alt,\"toBeTranslatedNodes\");\n\n            // create link\n            __flow_steps_step.setSrc( flow);\n\n\n            // create link\n            __flow_steps_step.setTrg( step);\n\n\n            // create link\n            __step_actor_actor.setSrc( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setSrc( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setTrg( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setSrc( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setTrg( altFlow);\n\n\n            // create link\n            __step_actor_actor.setTrg( actor);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // create object __useCase_flows_flow\n            __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __useCase_flows_flow\n            __useCase_flows_flow.setName (\"flows\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,flow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,useCase,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__useCase_flows_flow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,actor,\"contextNodes\");\n\n            // create link\n            __useCase_flows_flow.setTrg( flow);\n\n\n            // create link\n            __useCase_flows_flow.setSrc( useCase);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,flow,step,alt,altFlow,useCase,actor);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, NamedFlow flow, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, Actor actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      CombinedFragment combo = null;\n      Message message = null;\n      InteractionOperand operand = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      NormalStepToMessage stepToMessage = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      InteractionConstraint guard = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      LiteralString spec = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge operand__guard__guard = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge line__coveredBy__parentCombo = null;\n      EMoflonEdge parentCombo__covered__line = null;\n      EMoflonEdge message__sendEvent__messageSend = null;\n      EMoflonEdge messageSend__enclosingOperand__parentOperand = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge parentOperand__fragment__messageSend = null;\n      EMoflonEdge combo__enclosingOperand__parentOperand = null;\n      EMoflonEdge parentOperand__fragment__combo = null;\n      EMoflonEdge messageReceive__message__message = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge parentOperand__fragment__messageReceive = null;\n      EMoflonEdge operand__covered__line = null;\n      EMoflonEdge messageReceive__enclosingOperand__parentOperand = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge messageSend__message__message = null;\n      EMoflonEdge combo__operand__operand = null;\n      EMoflonEdge guard__specification__spec = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge parentOperand__covered__line = null;\n      EMoflonEdge message__interaction__interaction = null;\n      EMoflonEdge line__coveredBy__operand = null;\n      EMoflonEdge interaction__message__message = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge line__coveredBy__parentOperand = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge message__receiveEvent__messageReceive = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object messageSend\n         messageSend = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object messageReceive\n         messageReceive = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object combo\n         combo = ModalSequenceDiagramFactory.eINSTANCE.createCombinedFragment();\n\n         // create object message\n         message = ModalSequenceDiagramFactory.eINSTANCE.createMessage();\n\n         // create object operand\n         operand = ModalSequenceDiagramFactory.eINSTANCE.createInteractionOperand();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object guard\n         guard = ModalSequenceDiagramFactory.eINSTANCE.createInteractionConstraint();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // create object spec\n         spec = ModalSequenceDiagramFactory.eINSTANCE.createLiteralString();\n\n         // assign attribute combo\n         combo.setInteractionOperator ((ModalSequenceDiagram.InteractionOperatorKind)csp.getValue(\"combo\",\"interactionOperator\"));\n         // assign attribute guard\n         guard.setName ((java.lang.String)csp.getValue(\"guard\",\"name\"));\n         // assign attribute spec\n         spec.setValue ((java.lang.String)csp.getValue(\"spec\",\"value\"));\n         // assign attribute message\n         message.setName ((java.lang.String)csp.getValue(\"message\",\"name\"));\n\n         // create link\n         messageSend.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         messageReceive.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         combo.setEnclosingOperand( parentOperand);\n\n\n         // create link\n         line.getCoveredBy().add(parentOperand);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageSend,message,\"message\");\n\n         // create link\n         message.setSendEvent( messageSend);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageReceive,message,\"message\");\n\n         // create link\n         message.setReceiveEvent( messageReceive);\n\n\n         // create link\n         operand.getCovered().add(line);\n\n\n         // create link\n         parentCombo.getCovered().add(line);\n\n\n         // create link\n         \tcombo.getOperand().add(operand); // add link\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         \toperand.setGuard(guard); // add link to one\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         \tguard.setSpecification(spec); // add link to one\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         interaction.getMessage().add(message);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"createdElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlowToOperand and actorToLine \n         JavaSDM.ensure ( !altFlowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToParentOperand and actorToLine \n         JavaSDM.ensure ( !flowToParentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentCombo and actorToLine \n         JavaSDM.ensure ( !parentCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentOperand and actorToLine \n         JavaSDM.ensure ( !parentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects message and flowToParentOperand \n         JavaSDM.ensure ( !message.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToParentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects parentCombo and message \n         JavaSDM.ensure ( !parentCombo.equals (message) );\n\n         // check isomorphic binding between objects parentOperand and message \n         JavaSDM.ensure ( !parentOperand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToMessage and parentCombo \n         JavaSDM.ensure ( !stepToMessage.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and parentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__guard__guard\n         operand__guard__guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentCombo\n         line__coveredBy__parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentCombo__covered__line\n         parentCombo__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__sendEvent__messageSend\n         message__sendEvent__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__enclosingOperand__parentOperand\n         messageSend__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__messageSend\n         parentOperand__fragment__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__enclosingOperand__parentOperand\n         combo__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__combo\n         parentOperand__fragment__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__message__message\n         messageReceive__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__line\n         operand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_stepAlternative_alt\n         __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__message__message\n         messageSend__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__operand__operand\n         combo__operand__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object guard__specification__spec\n         guard__specification__spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __alt_ref_altFlow\n         __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object parentOperand__covered__line\n         parentOperand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__interaction__interaction\n         message__interaction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__operand\n         line__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__message__message\n         interaction__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __flow_steps_step\n         __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_actor_actor\n         __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__parentOperand\n         line__coveredBy__parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltStepNFToComboRule\");\n         // assign attribute parentOperand__fragment__messageSend\n         parentOperand__fragment__messageSend.setName (\"fragment\");\n         // assign attribute messageSend__enclosingOperand__parentOperand\n         messageSend__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute parentOperand__fragment__messageReceive\n         parentOperand__fragment__messageReceive.setName (\"fragment\");\n         // assign attribute messageReceive__enclosingOperand__parentOperand\n         messageReceive__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__parentOperand\n         line__coveredBy__parentOperand.setName (\"coveredBy\");\n         // assign attribute parentOperand__covered__line\n         parentOperand__covered__line.setName (\"covered\");\n         // assign attribute parentOperand__fragment__combo\n         parentOperand__fragment__combo.setName (\"fragment\");\n         // assign attribute combo__enclosingOperand__parentOperand\n         combo__enclosingOperand__parentOperand.setName (\"enclosingOperand\");\n         // assign attribute line__coveredBy__parentCombo\n         line__coveredBy__parentCombo.setName (\"coveredBy\");\n         // assign attribute parentCombo__covered__line\n         parentCombo__covered__line.setName (\"covered\");\n         // assign attribute __step_stepAlternative_alt\n         __step_stepAlternative_alt.setName (\"stepAlternative\");\n         // assign attribute __alt_ref_altFlow\n         __alt_ref_altFlow.setName (\"ref\");\n         // assign attribute combo__operand__operand\n         combo__operand__operand.setName (\"operand\");\n         // assign attribute line__coveredBy__operand\n         line__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__line\n         operand__covered__line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute operand__guard__guard\n         operand__guard__guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute guard__specification__spec\n         guard__specification__spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute __flow_steps_step\n         __flow_steps_step.setName (\"steps\");\n         // assign attribute __step_actor_actor\n         __step_actor_actor.setName (\"actor\");\n         // assign attribute message__sendEvent__messageSend\n         message__sendEvent__messageSend.setName (\"sendEvent\");\n         // assign attribute message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive.setName (\"receiveEvent\");\n         // assign attribute message__interaction__interaction\n         message__interaction__interaction.setName (\"interaction\");\n         // assign attribute interaction__message__message\n         interaction__message__message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute messageSend__message__message\n         messageSend__message__message.setName (\"message\");\n         // assign attribute messageReceive__message__message\n         messageReceive__message__message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__guard__guard,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentCombo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentCombo__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__sendEvent__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__fragment__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__enclosingOperand__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_stepAlternative_alt,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__operand__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard__specification__spec,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__alt_ref_altFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,parentOperand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__interaction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__flow_steps_step,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_actor_actor,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__parentOperand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__receiveEvent__messageReceive,\"createdEdges\");\n\n         // create link\n         __flow_steps_step.setSrc( flow);\n\n\n         // create link\n         line__coveredBy__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageSend.setSrc( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__combo.setSrc( parentOperand);\n\n\n         // create link\n         combo__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         messageSend__enclosingOperand__parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         parentOperand__covered__line.setSrc( parentOperand);\n\n\n         // create link\n         parentOperand__fragment__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__enclosingOperand__parentOperand.setSrc( messageSend);\n\n\n         // create link\n         message__sendEvent__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__message__message.setSrc( messageSend);\n\n\n         // create link\n         messageReceive__message__message.setSrc( messageReceive);\n\n\n         // create link\n         messageReceive__enclosingOperand__parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         parentOperand__fragment__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         operand__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__parentOperand.setSrc( line);\n\n\n         // create link\n         line__coveredBy__parentCombo.setSrc( line);\n\n\n         // create link\n         parentOperand__covered__line.setTrg( line);\n\n\n         // create link\n         parentCombo__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__operand.setSrc( line);\n\n\n         // create link\n         combo__enclosingOperand__parentOperand.setSrc( combo);\n\n\n         // create link\n         combo__operand__operand.setSrc( combo);\n\n\n         // create link\n         parentOperand__fragment__combo.setTrg( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         line__coveredBy__parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         parentCombo__covered__line.setSrc( parentCombo);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         __flow_steps_step.setTrg( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         __step_actor_actor.setSrc( step);\n\n\n         // create link\n         __step_stepAlternative_alt.setSrc( step);\n\n\n         // create link\n         __step_stepAlternative_alt.setTrg( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         __alt_ref_altFlow.setSrc( alt);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         line__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         operand__covered__line.setSrc( operand);\n\n\n         // create link\n         operand__guard__guard.setSrc( operand);\n\n\n         // create link\n         combo__operand__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         operand__guard__guard.setTrg( guard);\n\n\n         // create link\n         guard__specification__spec.setSrc( guard);\n\n\n         // create link\n         guard__specification__spec.setTrg( spec);\n\n\n         // create link\n         __alt_ref_altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         interaction__message__message.setTrg( message);\n\n\n         // create link\n         messageReceive__message__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setSrc( message);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setSrc( message);\n\n\n         // create link\n         message__sendEvent__messageSend.setSrc( message);\n\n\n         // create link\n         messageSend__message__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setTrg( interaction);\n\n\n         // create link\n         interaction__message__message.setSrc( interaction);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         __step_actor_actor.setTrg( actor);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,flow,parentOperand,flowToParentOperand,messageSend,messageReceive,line,combo,parentCombo,step,alt,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,interaction,stepToMessage,actor,actorToLine);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Actor actor = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      NamedFlow flow = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      CSP csp = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterUseCaseToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      InteractionOperand parentOperand = null;\n      Iterator fujaba__IterFlowToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Lifeline line = null;\n      Iterator fujaba__IterActorToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (match.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (match.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // iterate to-many link source from actor to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterActorToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(actor,ActorToLifeline.class,\"source\")).iterator ();\n\n         while ( fujaba__IterActorToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterActorToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               line = actorToLine.getTarget ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n\n               // iterate to-many link source from flow to flowToParentOperand\n               fujaba__Success = false;\n\n               fujaba__IterFlowToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(flow,FlowToInteractionFragment.class,\"source\")).iterator ();\n\n               while ( fujaba__IterFlowToFlowToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     flowToParentOperand = (FlowToInteractionFragment) fujaba__IterFlowToFlowToParentOperand.next ();\n\n                     // check object flowToParentOperand is really bound\n                     JavaSDM.ensure ( flowToParentOperand != null );\n                     // bind object\n                     _TmpObject = flowToParentOperand.getTarget ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n\n                     // iterate to-many link source from useCase to useCaseToInteraction\n                     fujaba__Success = false;\n\n                     fujaba__IterUseCaseToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(useCase,UseCaseToInteraction.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterUseCaseToUseCaseToInteraction.hasNext () )\n                     {\n                        try\n                        {\n                           useCaseToInteraction = (UseCaseToInteraction) fujaba__IterUseCaseToUseCaseToInteraction.next ();\n\n                           // check object useCaseToInteraction is really bound\n                           JavaSDM.ensure ( useCaseToInteraction != null );\n                           // bind object\n                           interaction = useCaseToInteraction.getTarget ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // story node \'find context\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object actor is really bound\n                              JavaSDM.ensure ( actor != null );\n                              // check object actorToLine is really bound\n                              JavaSDM.ensure ( actorToLine != null );\n                              // check object alt is really bound\n                              JavaSDM.ensure ( alt != null );\n                              // check object altFlow is really bound\n                              JavaSDM.ensure ( altFlow != null );\n                              // check object flow is really bound\n                              JavaSDM.ensure ( flow != null );\n                              // check object flowToParentOperand is really bound\n                              JavaSDM.ensure ( flowToParentOperand != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object step is really bound\n                              JavaSDM.ensure ( step != null );\n                              // check object useCase is really bound\n                              JavaSDM.ensure ( useCase != null );\n                              // check object useCaseToInteraction is really bound\n                              JavaSDM.ensure ( useCaseToInteraction != null );\n                              // check isomorphic binding between objects flow and altFlow \n                              JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                              // check link actor from step to actor\n                              JavaSDM.ensure (actor.equals (step.getActor ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link ref from alt to altFlow\n                              JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                              ));\n\n                              // check link flows from flow to useCase\n                              JavaSDM.ensure (useCase.equals (flow.eContainer()\n                              ));\n\n                              // bind object\n                              parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n\n                              // check if contained via correct reference\n                              JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                              // check link source from actorToLine to actor\n                              JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                              ));\n\n                              // check link source from flowToParentOperand to flow\n                              JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                              ));\n\n                              // check link source from useCaseToInteraction to useCase\n                              JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                              ));\n\n                              // check link stepAlternative from alt to step\n                              JavaSDM.ensure (step.equals (alt.eContainer()\n                              ));\n\n                              // check link steps from step to flow\n                              JavaSDM.ensure (flow.equals (step.eContainer()\n                              ));\n\n                              // check link target from actorToLine to line\n                              JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                              ));\n\n                              // check link target from flowToParentOperand to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                              ));\n\n                              // check link target from useCaseToInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                              ));\n\n                              // create object __flow_steps_step\n                              __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_target_line\n                              __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __step_stepAlternative_alt\n                              __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __step_actor_actor\n                              __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __alt_ref_altFlow\n                              __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_source_actor\n                              __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow.setName (\"source\");\n                              // assign attribute __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand.setName (\"target\");\n                              // assign attribute __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand.setName (\"operand\");\n                              // assign attribute __step_stepAlternative_alt\n                              __step_stepAlternative_alt.setName (\"stepAlternative\");\n                              // assign attribute __alt_ref_altFlow\n                              __alt_ref_altFlow.setName (\"ref\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __flow_steps_step\n                              __flow_steps_step.setName (\"steps\");\n                              // assign attribute __step_actor_actor\n                              __step_actor_actor.setName (\"actor\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n                              // assign attribute __actorToLine_source_actor\n                              __actorToLine_source_actor.setName (\"source\");\n                              // assign attribute __actorToLine_target_line\n                              __actorToLine_target_line.setName (\"target\");\n\n                              // create link\n                              __flow_steps_step.setSrc( flow);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              __actorToLine_target_line.setTrg( line);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                              // create link\n                              __flow_steps_step.setTrg( step);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setSrc( step);\n\n\n                              // create link\n                              __step_actor_actor.setSrc( step);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(step);\n\n\n                              // create link\n                              __alt_ref_altFlow.setSrc( alt);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(alt);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setTrg( alt);\n\n\n                              // create link\n                              __alt_ref_altFlow.setTrg( altFlow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(altFlow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __step_actor_actor.setTrg( actor);\n\n\n                              // create link\n                              __actorToLine_source_actor.setTrg( actor);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                              // create link\n                              __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                              // create link\n                              __actorToLine_target_line.setSrc( actorToLine);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__alt_ref_altFlow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_stepAlternative_alt,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_actor_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,flow,parentOperand,flowToParentOperand,line,parentCombo,step,alt,altFlow,useCase,useCaseToInteraction,interaction,actor,actorToLine));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"AltStepNFToComboRule\");\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n\n                                    // create link\n                                    ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"flow\", flow);\nmatch.registerObject(\"step\", step);\nmatch.registerObject(\"alt\", alt);\nmatch.registerObject(\"altFlow\", altFlow);\nmatch.registerObject(\"useCase\", useCase);\nmatch.registerObject(\"actor\", actor);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase, Actor actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, NamedFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase, Actor actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", true, csp);\r\nvar_altFlow_name.setValue(altFlow.getName());\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", true, csp);\r\nvar_alt_condition.setValue(alt.getCondition());\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", true, csp);\r\nvar_step_name.setValue(step.getName());\r\nvar_step_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", csp);\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", csp);\r\nvar_spec_value.setType(\"\");\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", csp);\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", csp);\r\nvar_message_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();EqInterOperKind eqInterOperKind = new EqInterOperKind();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eqInterOperKind);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"altFlow\",altFlow);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			NamedFlow flow, InteractionOperand parentOperand,
			FlowToInteractionFragment flowToParentOperand, Lifeline line,
			CombinedFragment parentCombo, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, UseCaseToInteraction useCaseToInteraction,
			Interaction interaction, Actor actor, ActorToLifeline actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"actorToLine\", actorToLine);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject flow,
			EObject parentOperand, EObject flowToParentOperand,
			EObject messageSend, EObject messageReceive, EObject line,
			EObject combo, EObject parentCombo, EObject step, EObject alt,
			EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message, EObject interaction,
			EObject stepToMessage, EObject actor, EObject actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"step\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getNormalStep()) && match.getObject(\"alt\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlowAlternative()) && match.getObject(\"altFlow\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __guard_specification_spec\n            __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_enclosingOperand_parentOperand\n            __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_operand_operand\n            __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_enclosingOperand_parentOperand\n            __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_guard_guard\n            __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_message_message\n            __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_sendEvent_messageSend\n            __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_message_message\n            __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_covered_line\n            __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_line\n            __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_interaction_interaction\n            __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentCombo_covered_line\n            __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_combo\n            __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_message_message\n            __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __parentOperand_fragment_messageSend\n            __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_operand\n            __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __parentOperand_fragment_messageSend\n            __parentOperand_fragment_messageSend.setName (\"fragment\");\n            // assign attribute __messageSend_enclosingOperand_parentOperand\n            __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __parentOperand_fragment_messageReceive\n            __parentOperand_fragment_messageReceive.setName (\"fragment\");\n            // assign attribute __messageReceive_enclosingOperand_parentOperand\n            __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_parentOperand\n            __line_coveredBy_parentOperand.setName (\"coveredBy\");\n            // assign attribute __parentOperand_covered_line\n            __parentOperand_covered_line.setName (\"covered\");\n            // assign attribute __parentOperand_fragment_combo\n            __parentOperand_fragment_combo.setName (\"fragment\");\n            // assign attribute __combo_enclosingOperand_parentOperand\n            __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n            // assign attribute __line_coveredBy_parentCombo\n            __line_coveredBy_parentCombo.setName (\"coveredBy\");\n            // assign attribute __parentCombo_covered_line\n            __parentCombo_covered_line.setName (\"covered\");\n            // assign attribute __combo_operand_operand\n            __combo_operand_operand.setName (\"operand\");\n            // assign attribute __line_coveredBy_operand\n            __line_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_line\n            __operand_covered_line.setName (\"covered\");\n            // assign attribute __operand_guard_guard\n            __operand_guard_guard.setName (\"guard\");\n            // assign attribute __guard_specification_spec\n            __guard_specification_spec.setName (\"specification\");\n            // assign attribute __message_sendEvent_messageSend\n            __message_sendEvent_messageSend.setName (\"sendEvent\");\n            // assign attribute __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n            // assign attribute __message_interaction_interaction\n            __message_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_message_message\n            __interaction_message_message.setName (\"message\");\n            // assign attribute __messageSend_message_message\n            __messageSend_message_message.setName (\"message\");\n            // assign attribute __messageReceive_message_message\n            __messageReceive_message_message.setName (\"message\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentCombo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__guard_specification_spec,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageReceive,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageSend,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_operand_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,operand,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_enclosingOperand_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,guard,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_guard_guard,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_sendEvent_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_receiveEvent_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_interaction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,combo,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,message,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_parentOperand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentOperand_fragment_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,spec,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            __parentOperand_covered_line.setSrc( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n            // create link\n            __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __messageSend_message_message.setSrc( messageSend);\n\n\n            // create link\n            __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n            // create link\n            __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_message_message.setSrc( messageReceive);\n\n\n            // create link\n            __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n            // create link\n            __line_coveredBy_parentCombo.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_parentOperand.setSrc( line);\n\n\n            // create link\n            __parentCombo_covered_line.setTrg( line);\n\n\n            // create link\n            __parentOperand_covered_line.setTrg( line);\n\n\n            // create link\n            __line_coveredBy_operand.setSrc( line);\n\n\n            // create link\n            __operand_covered_line.setTrg( line);\n\n\n            // create link\n            __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n            // create link\n            __combo_operand_operand.setSrc( combo);\n\n\n            // create link\n            __parentOperand_fragment_combo.setTrg( combo);\n\n\n            // create link\n            __parentCombo_covered_line.setSrc( parentCombo);\n\n\n            // create link\n            __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n            // create link\n            __operand_guard_guard.setSrc( operand);\n\n\n            // create link\n            __operand_covered_line.setSrc( operand);\n\n\n            // create link\n            __line_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __combo_operand_operand.setTrg( operand);\n\n\n            // create link\n            __guard_specification_spec.setSrc( guard);\n\n\n            // create link\n            __operand_guard_guard.setTrg( guard);\n\n\n            // create link\n            __guard_specification_spec.setTrg( spec);\n\n\n            // create link\n            __message_sendEvent_messageSend.setSrc( message);\n\n\n            // create link\n            __messageReceive_message_message.setTrg( message);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setSrc( message);\n\n\n            // create link\n            __message_interaction_interaction.setSrc( message);\n\n\n            // create link\n            __interaction_message_message.setTrg( message);\n\n\n            // create link\n            __messageSend_message_message.setTrg( message);\n\n\n            // create link\n            __interaction_message_message.setSrc( interaction);\n\n\n            // create link\n            __message_interaction_interaction.setTrg( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object parentCombo is really bound\n            JavaSDM.ensure ( parentCombo != null );\n            // check object parentOperand is really bound\n            JavaSDM.ensure ( parentOperand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects parentCombo and combo \n            JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // check isomorphic binding between objects parentOperand and operand \n            JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n            // create object __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_lifeline_line\n            __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_interaction_interaction\n            __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __parentCombo_operand_parentOperand\n            __parentCombo_operand_parentOperand.setName (\"operand\");\n            // assign attribute __line_interaction_interaction\n            __line_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_lifeline_line\n            __interaction_lifeline_line.setName (\"lifeline\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__parentCombo_operand_parentOperand,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,interaction,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_lifeline_line,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_interaction_interaction,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentOperand,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,line,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,parentCombo,\"contextNodes\");\n\n            // create link\n            __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n            // create link\n            __line_interaction_interaction.setSrc( line);\n\n\n            // create link\n            __interaction_lifeline_line.setTrg( line);\n\n\n            // create link\n            __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n            // create link\n            __interaction_lifeline_line.setSrc( interaction);\n\n\n            // create link\n            __line_interaction_interaction.setTrg( interaction);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match, InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      CombinedFragment combo = null;\n      NamedFlow flow = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      NormalStep step = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      AlternativeFlowAlternative alt = null;\n      NormalStepToMessage stepToMessage = null;\n      AlternativeFlow altFlow = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge step__stepAlternative__alt = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge alt__ref__altFlow = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge flow__steps__step = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge step__actor__actor = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToParentOperand\"));\n\n         // ensure correct type and really bound of object flowToParentOperand\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToParentOperand = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object step\n         step = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object alt\n         alt = UseCaseDSLFactory.eINSTANCE.createAlternativeFlowAlternative();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object altFlow\n         altFlow = UseCaseDSLFactory.eINSTANCE.createAlternativeFlow();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // assign attribute step\n         step.setName ((java.lang.String)csp.getValue(\"step\",\"name\"));\n         // assign attribute alt\n         alt.setCondition ((java.lang.String)csp.getValue(\"alt\",\"condition\"));\n         // assign attribute altFlow\n         altFlow.setName ((java.lang.String)csp.getValue(\"altFlow\",\"name\"));\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         \tflow.getSteps().add(step); // add link\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(step,actor,\"actor\");\n\n         // create link\n         \tstep.getStepAlternative().add(alt); // add link\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(alt,altFlow,\"ref\");\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToParentOperand is really bound\n         JavaSDM.ensure ( flowToParentOperand != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToParentOperand and actor \n         JavaSDM.ensure ( !flowToParentOperand.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects parentCombo and actor \n         JavaSDM.ensure ( !parentCombo.equals (actor) );\n\n         // check isomorphic binding between objects parentOperand and actor \n         JavaSDM.ensure ( !parentOperand.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlowToOperand and actorToLine \n         JavaSDM.ensure ( !altFlowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToParentOperand and actorToLine \n         JavaSDM.ensure ( !flowToParentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentCombo and actorToLine \n         JavaSDM.ensure ( !parentCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects parentOperand and actorToLine \n         JavaSDM.ensure ( !parentOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToParentOperand and alt \n         JavaSDM.ensure ( !flowToParentOperand.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects parentCombo and alt \n         JavaSDM.ensure ( !parentCombo.equals (alt) );\n\n         // check isomorphic binding between objects parentOperand and alt \n         JavaSDM.ensure ( !parentOperand.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlow \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects parentCombo and altFlow \n         JavaSDM.ensure ( !parentCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects parentOperand and altFlow \n         JavaSDM.ensure ( !parentOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and altFlowToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentCombo and altFlowToOperand \n         JavaSDM.ensure ( !parentCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects parentOperand and altFlowToOperand \n         JavaSDM.ensure ( !parentOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToParentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !flowToParentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentCombo and alternative1ToOperand \n         JavaSDM.ensure ( !parentCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects parentOperand and alternative1ToOperand \n         JavaSDM.ensure ( !parentOperand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and combo \n         JavaSDM.ensure ( !flowToParentOperand.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects parentOperand and combo \n         JavaSDM.ensure ( !parentOperand.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToParentOperand and flow \n         JavaSDM.ensure ( !flowToParentOperand.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects parentCombo and flow \n         JavaSDM.ensure ( !parentCombo.equals (flow) );\n\n         // check isomorphic binding between objects parentOperand and flow \n         JavaSDM.ensure ( !parentOperand.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToParentOperand \n         JavaSDM.ensure ( !guard.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and flowToParentOperand \n         JavaSDM.ensure ( !interaction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects line and flowToParentOperand \n         JavaSDM.ensure ( !line.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects message and flowToParentOperand \n         JavaSDM.ensure ( !message.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageReceive and flowToParentOperand \n         JavaSDM.ensure ( !messageReceive.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects messageSend and flowToParentOperand \n         JavaSDM.ensure ( !messageSend.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects operand and flowToParentOperand \n         JavaSDM.ensure ( !operand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentCombo and flowToParentOperand \n         JavaSDM.ensure ( !parentCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects parentOperand and flowToParentOperand \n         JavaSDM.ensure ( !parentOperand.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects spec and flowToParentOperand \n         JavaSDM.ensure ( !spec.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects step and flowToParentOperand \n         JavaSDM.ensure ( !step.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and flowToParentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and flowToParentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCase and flowToParentOperand \n         JavaSDM.ensure ( !useCase.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToParentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToParentOperand) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects parentCombo and guard \n         JavaSDM.ensure ( !parentCombo.equals (guard) );\n\n         // check isomorphic binding between objects parentOperand and guard \n         JavaSDM.ensure ( !parentOperand.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects parentCombo and interaction \n         JavaSDM.ensure ( !parentCombo.equals (interaction) );\n\n         // check isomorphic binding between objects parentOperand and interaction \n         JavaSDM.ensure ( !parentOperand.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects parentCombo and line \n         JavaSDM.ensure ( !parentCombo.equals (line) );\n\n         // check isomorphic binding between objects parentOperand and line \n         JavaSDM.ensure ( !parentOperand.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects parentCombo and message \n         JavaSDM.ensure ( !parentCombo.equals (message) );\n\n         // check isomorphic binding between objects parentOperand and message \n         JavaSDM.ensure ( !parentOperand.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentCombo and messageReceive \n         JavaSDM.ensure ( !parentCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and messageReceive \n         JavaSDM.ensure ( !parentOperand.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and messageSend \n         JavaSDM.ensure ( !parentCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects parentOperand and messageSend \n         JavaSDM.ensure ( !parentOperand.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects parentCombo and operand \n         JavaSDM.ensure ( !parentCombo.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects parentOperand and parentCombo \n         JavaSDM.ensure ( !parentOperand.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentCombo \n         JavaSDM.ensure ( !spec.equals (parentCombo) );\n\n         // check isomorphic binding between objects step and parentCombo \n         JavaSDM.ensure ( !step.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToCombo and parentCombo \n         JavaSDM.ensure ( !stepToCombo.equals (parentCombo) );\n\n         // check isomorphic binding between objects stepToMessage and parentCombo \n         JavaSDM.ensure ( !stepToMessage.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCase and parentCombo \n         JavaSDM.ensure ( !useCase.equals (parentCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentCombo) );\n\n         // check isomorphic binding between objects spec and parentOperand \n         JavaSDM.ensure ( !spec.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and parentOperand \n         JavaSDM.ensure ( !step.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToCombo and parentOperand \n         JavaSDM.ensure ( !stepToCombo.equals (parentOperand) );\n\n         // check isomorphic binding between objects stepToMessage and parentOperand \n         JavaSDM.ensure ( !stepToMessage.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCase and parentOperand \n         JavaSDM.ensure ( !useCase.equals (parentOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and parentOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (parentOperand) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object __parentOperand_fragment_combo\n         __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_message_message\n         __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_message_message\n         __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__stepAlternative__alt\n         step__stepAlternative__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentCombo_covered_line\n         __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_interaction_interaction\n         __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_enclosingOperand_parentOperand\n         __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alt__ref__altFlow\n         alt__ref__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __guard_specification_spec\n         __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_line\n         __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_sendEvent_messageSend\n         __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_messageSend\n         __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_operand_operand\n         __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_message_message\n         __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_operand\n         __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object flow__steps__step\n         flow__steps__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_enclosingOperand_parentOperand\n         __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __parentOperand_covered_line\n         __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_guard_guard\n         __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__actor__actor\n         step__actor__actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltStepNFToComboRule\");\n         // assign attribute __parentOperand_fragment_messageSend\n         __parentOperand_fragment_messageSend.setName (\"fragment\");\n         // assign attribute __messageSend_enclosingOperand_parentOperand\n         __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __parentOperand_fragment_messageReceive\n         __parentOperand_fragment_messageReceive.setName (\"fragment\");\n         // assign attribute __messageReceive_enclosingOperand_parentOperand\n         __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_parentOperand\n         __line_coveredBy_parentOperand.setName (\"coveredBy\");\n         // assign attribute __parentOperand_covered_line\n         __parentOperand_covered_line.setName (\"covered\");\n         // assign attribute __parentOperand_fragment_combo\n         __parentOperand_fragment_combo.setName (\"fragment\");\n         // assign attribute __combo_enclosingOperand_parentOperand\n         __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n         // assign attribute __line_coveredBy_parentCombo\n         __line_coveredBy_parentCombo.setName (\"coveredBy\");\n         // assign attribute __parentCombo_covered_line\n         __parentCombo_covered_line.setName (\"covered\");\n         // assign attribute step__stepAlternative__alt\n         step__stepAlternative__alt.setName (\"stepAlternative\");\n         // assign attribute alt__ref__altFlow\n         alt__ref__altFlow.setName (\"ref\");\n         // assign attribute __combo_operand_operand\n         __combo_operand_operand.setName (\"operand\");\n         // assign attribute __line_coveredBy_operand\n         __line_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_line\n         __operand_covered_line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute __operand_guard_guard\n         __operand_guard_guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute __guard_specification_spec\n         __guard_specification_spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute flow__steps__step\n         flow__steps__step.setName (\"steps\");\n         // assign attribute step__actor__actor\n         step__actor__actor.setName (\"actor\");\n         // assign attribute __message_sendEvent_messageSend\n         __message_sendEvent_messageSend.setName (\"sendEvent\");\n         // assign attribute __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n         // assign attribute __message_interaction_interaction\n         __message_interaction_interaction.setName (\"interaction\");\n         // assign attribute __interaction_message_message\n         __interaction_message_message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute __messageSend_message_message\n         __messageSend_message_message.setName (\"message\");\n         // assign attribute __messageReceive_message_message\n         __messageReceive_message_message.setName (\"message\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__stepAlternative__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentCombo_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_interaction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt__ref__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__guard_specification_spec,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_sendEvent_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_parentCombo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_operand_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_receiveEvent_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_fragment_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,flow__steps__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_enclosingOperand_parentOperand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__parentOperand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_guard_guard,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__actor__actor,\"createdEdges\");\n\n         // create link\n         flow__steps__step.setSrc( flow);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n         // create link\n         __parentOperand_covered_line.setSrc( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n         // create link\n         __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n         // create link\n         __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageSend_message_message.setSrc( messageSend);\n\n\n         // create link\n         __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageReceive_message_message.setSrc( messageReceive);\n\n\n         // create link\n         __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n         // create link\n         __parentCombo_covered_line.setTrg( line);\n\n\n         // create link\n         __parentOperand_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_operand.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_parentOperand.setSrc( line);\n\n\n         // create link\n         __operand_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setSrc( line);\n\n\n         // create link\n         __parentOperand_fragment_combo.setTrg( combo);\n\n\n         // create link\n         __combo_operand_operand.setSrc( combo);\n\n\n         // create link\n         __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         __parentCombo_covered_line.setSrc( parentCombo);\n\n\n         // create link\n         __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n         // create link\n         step__stepAlternative__alt.setSrc( step);\n\n\n         // create link\n         step__actor__actor.setSrc( step);\n\n\n         // create link\n         flow__steps__step.setTrg( step);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         alt__ref__altFlow.setSrc( alt);\n\n\n         // create link\n         step__stepAlternative__alt.setTrg( alt);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         __operand_guard_guard.setSrc( operand);\n\n\n         // create link\n         __line_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         __combo_operand_operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         __operand_covered_line.setSrc( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         __guard_specification_spec.setSrc( guard);\n\n\n         // create link\n         __operand_guard_guard.setTrg( guard);\n\n\n         // create link\n         __guard_specification_spec.setTrg( spec);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         alt__ref__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         __messageSend_message_message.setTrg( message);\n\n\n         // create link\n         __message_sendEvent_messageSend.setSrc( message);\n\n\n         // create link\n         __messageReceive_message_message.setTrg( message);\n\n\n         // create link\n         __interaction_message_message.setTrg( message);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setSrc( message);\n\n\n         // create link\n         __message_interaction_interaction.setSrc( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         __interaction_message_message.setSrc( interaction);\n\n\n         // create link\n         __message_interaction_interaction.setTrg( interaction);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         step__actor__actor.setTrg( actor);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,flow,parentOperand,flowToParentOperand,messageSend,messageReceive,line,combo,parentCombo,step,alt,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,interaction,stepToMessage,actor,actorToLine);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __flowToParentOperand_source_flow = null;\n      EMoflonEdge __parentOperand_fragment_messageReceive = null;\n      EMoflonEdge __messageSend_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_messageSend = null;\n      EMoflonEdge __messageReceive_enclosingOperand_parentOperand = null;\n      EMoflonEdge __combo_enclosingOperand_parentOperand = null;\n      EMoflonEdge __parentOperand_covered_line = null;\n      EMoflonEdge __flowToParentOperand_target_parentOperand = null;\n      EMoflonEdge __parentCombo_operand_parentOperand = null;\n      EMoflonEdge __parentOperand_fragment_combo = null;\n      EMoflonEdge __line_coveredBy_parentOperand = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __parentCombo_covered_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __line_coveredBy_parentCombo = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      CSP csp = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterInteractionToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      NamedFlow flow = null;\n      Iterator fujaba__IterParentOperandToFlowToParentOperand = null;\n      FlowToInteractionFragment flowToParentOperand = null;\n      Actor actor = null;\n      Iterator fujaba__IterLineToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltStepNFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (match.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (match.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (match.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (match.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"parentCombo\"));\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"parentOperand\"));\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // iterate to-many link target from line to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterLineToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,ActorToLifeline.class,\"target\")).iterator ();\n\n         while ( fujaba__IterLineToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterLineToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               actor = actorToLine.getSource ();\n\n               // check object actor is really bound\n               JavaSDM.ensure ( actor != null );\n\n               // iterate to-many link target from parentOperand to flowToParentOperand\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToFlowToParentOperand = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,FlowToInteractionFragment.class,\"target\")).iterator ();\n\n               while ( fujaba__IterParentOperandToFlowToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     flowToParentOperand = (FlowToInteractionFragment) fujaba__IterParentOperandToFlowToParentOperand.next ();\n\n                     // check object flowToParentOperand is really bound\n                     JavaSDM.ensure ( flowToParentOperand != null );\n                     // bind object\n                     _TmpObject = flowToParentOperand.getSource ();\n\n                     // ensure correct type and really bound of object flow\n                     JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n                     flow = (NamedFlow) _TmpObject;\n\n                     // iterate to-many link target from interaction to useCaseToInteraction\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,UseCaseToInteraction.class,\"target\")).iterator ();\n\n                     while ( fujaba__IterInteractionToUseCaseToInteraction.hasNext () )\n                     {\n                        try\n                        {\n                           useCaseToInteraction = (UseCaseToInteraction) fujaba__IterInteractionToUseCaseToInteraction.next ();\n\n                           // check object useCaseToInteraction is really bound\n                           JavaSDM.ensure ( useCaseToInteraction != null );\n                           // bind object\n                           useCase = useCaseToInteraction.getSource ();\n\n                           // check object useCase is really bound\n                           JavaSDM.ensure ( useCase != null );\n\n                           // story node \'find context\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object actor is really bound\n                              JavaSDM.ensure ( actor != null );\n                              // check object actorToLine is really bound\n                              JavaSDM.ensure ( actorToLine != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object flow is really bound\n                              JavaSDM.ensure ( flow != null );\n                              // check object flowToParentOperand is really bound\n                              JavaSDM.ensure ( flowToParentOperand != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check object useCase is really bound\n                              JavaSDM.ensure ( useCase != null );\n                              // check object useCaseToInteraction is really bound\n                              JavaSDM.ensure ( useCaseToInteraction != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link flows from flow to useCase\n                              JavaSDM.ensure (useCase.equals (flow.eContainer()\n                              ));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link source from actorToLine to actor\n                              JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                              ));\n\n                              // check link source from flowToParentOperand to flow\n                              JavaSDM.ensure (flow.equals (flowToParentOperand.getSource ()\n                              ));\n\n                              // check link source from useCaseToInteraction to useCase\n                              JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link target from actorToLine to line\n                              JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                              ));\n\n                              // check link target from flowToParentOperand to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (flowToParentOperand.getTarget ()\n                              ));\n\n                              // check link target from useCaseToInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_fragment_messageReceive\n                              __parentOperand_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_enclosingOperand_parentOperand\n                              __messageSend_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_fragment_messageSend\n                              __parentOperand_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_enclosingOperand_parentOperand\n                              __messageReceive_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __combo_enclosingOperand_parentOperand\n                              __combo_enclosingOperand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_covered_line\n                              __parentOperand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentOperand_fragment_combo\n                              __parentOperand_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_parentOperand\n                              __line_coveredBy_parentOperand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_message_message\n                              __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_message_message\n                              __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_operand\n                              __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __parentCombo_covered_line\n                              __parentCombo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_parentCombo\n                              __line_coveredBy_parentCombo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_covered_line\n                              __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_target_line\n                              __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __combo_operand_operand\n                              __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_guard_guard\n                              __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __guard_specification_spec\n                              __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_interaction_interaction\n                              __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_message_message\n                              __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_source_actor\n                              __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __parentOperand_fragment_messageSend\n                              __parentOperand_fragment_messageSend.setName (\"fragment\");\n                              // assign attribute __messageSend_enclosingOperand_parentOperand\n                              __messageSend_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                              // assign attribute __parentOperand_fragment_messageReceive\n                              __parentOperand_fragment_messageReceive.setName (\"fragment\");\n                              // assign attribute __messageReceive_enclosingOperand_parentOperand\n                              __messageReceive_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                              // assign attribute __flowToParentOperand_source_flow\n                              __flowToParentOperand_source_flow.setName (\"source\");\n                              // assign attribute __flowToParentOperand_target_parentOperand\n                              __flowToParentOperand_target_parentOperand.setName (\"target\");\n                              // assign attribute __line_coveredBy_parentOperand\n                              __line_coveredBy_parentOperand.setName (\"coveredBy\");\n                              // assign attribute __parentOperand_covered_line\n                              __parentOperand_covered_line.setName (\"covered\");\n                              // assign attribute __parentOperand_fragment_combo\n                              __parentOperand_fragment_combo.setName (\"fragment\");\n                              // assign attribute __combo_enclosingOperand_parentOperand\n                              __combo_enclosingOperand_parentOperand.setName (\"enclosingOperand\");\n                              // assign attribute __parentCombo_operand_parentOperand\n                              __parentCombo_operand_parentOperand.setName (\"operand\");\n                              // assign attribute __line_coveredBy_parentCombo\n                              __line_coveredBy_parentCombo.setName (\"coveredBy\");\n                              // assign attribute __parentCombo_covered_line\n                              __parentCombo_covered_line.setName (\"covered\");\n                              // assign attribute __combo_operand_operand\n                              __combo_operand_operand.setName (\"operand\");\n                              // assign attribute __line_coveredBy_operand\n                              __line_coveredBy_operand.setName (\"coveredBy\");\n                              // assign attribute __operand_covered_line\n                              __operand_covered_line.setName (\"covered\");\n                              // assign attribute __operand_guard_guard\n                              __operand_guard_guard.setName (\"guard\");\n                              // assign attribute __guard_specification_spec\n                              __guard_specification_spec.setName (\"specification\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend.setName (\"sendEvent\");\n                              // assign attribute __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n                              // assign attribute __message_interaction_interaction\n                              __message_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_message_message\n                              __interaction_message_message.setName (\"message\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n                              // assign attribute __messageSend_message_message\n                              __messageSend_message_message.setName (\"message\");\n                              // assign attribute __messageReceive_message_message\n                              __messageReceive_message_message.setName (\"message\");\n                              // assign attribute __actorToLine_source_actor\n                              __actorToLine_source_actor.setName (\"source\");\n                              // assign attribute __actorToLine_target_line\n                              __actorToLine_target_line.setName (\"target\");\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setTrg( flow);\n\n\n                              // create link\n                              __parentOperand_fragment_messageReceive.setSrc( parentOperand);\n\n\n                              // create link\n                              __messageSend_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentOperand_fragment_messageSend.setSrc( parentOperand);\n\n\n                              // create link\n                              __messageReceive_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __combo_enclosingOperand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentOperand_covered_line.setSrc( parentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __parentOperand_fragment_combo.setSrc( parentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentOperand);\n\n\n                              // create link\n                              __line_coveredBy_parentOperand.setTrg( parentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_target_parentOperand.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              __flowToParentOperand_source_flow.setSrc( flowToParentOperand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flowToParentOperand);\n\n\n                              // create link\n                              __messageSend_enclosingOperand_parentOperand.setSrc( messageSend);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageSend);\n\n\n                              // create link\n                              __parentOperand_fragment_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              __messageSend_message_message.setSrc( messageSend);\n\n\n                              // create link\n                              __messageReceive_enclosingOperand_parentOperand.setSrc( messageReceive);\n\n\n                              // create link\n                              __messageReceive_message_message.setSrc( messageReceive);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              __parentOperand_fragment_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageReceive);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __line_coveredBy_parentOperand.setSrc( line);\n\n\n                              // create link\n                              __line_coveredBy_operand.setSrc( line);\n\n\n                              // create link\n                              __parentCombo_covered_line.setTrg( line);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              __line_coveredBy_parentCombo.setSrc( line);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              __operand_covered_line.setTrg( line);\n\n\n                              // create link\n                              __parentOperand_covered_line.setTrg( line);\n\n\n                              // create link\n                              __actorToLine_target_line.setTrg( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(combo);\n\n\n                              // create link\n                              __parentOperand_fragment_combo.setTrg( combo);\n\n\n                              // create link\n                              __combo_operand_operand.setSrc( combo);\n\n\n                              // create link\n                              __combo_enclosingOperand_parentOperand.setSrc( combo);\n\n\n                              // create link\n                              __parentCombo_operand_parentOperand.setSrc( parentCombo);\n\n\n                              // create link\n                              __parentCombo_covered_line.setSrc( parentCombo);\n\n\n                              // create link\n                              __line_coveredBy_parentCombo.setTrg( parentCombo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(parentCombo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(operand);\n\n\n                              // create link\n                              __line_coveredBy_operand.setTrg( operand);\n\n\n                              // create link\n                              __operand_guard_guard.setSrc( operand);\n\n\n                              // create link\n                              __combo_operand_operand.setTrg( operand);\n\n\n                              // create link\n                              __operand_covered_line.setSrc( operand);\n\n\n                              // create link\n                              __guard_specification_spec.setSrc( guard);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(guard);\n\n\n                              // create link\n                              __operand_guard_guard.setTrg( guard);\n\n\n                              // create link\n                              __guard_specification_spec.setTrg( spec);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(spec);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __message_interaction_interaction.setSrc( message);\n\n\n                              // create link\n                              __interaction_message_message.setTrg( message);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(message);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setSrc( message);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setSrc( message);\n\n\n                              // create link\n                              __messageSend_message_message.setTrg( message);\n\n\n                              // create link\n                              __messageReceive_message_message.setTrg( message);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              __interaction_message_message.setSrc( interaction);\n\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __message_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __actorToLine_source_actor.setTrg( actor);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                              // create link\n                              __actorToLine_target_line.setSrc( actorToLine);\n\n\n                              // create link\n                              __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_operand_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_enclosingOperand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_enclosingOperand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_enclosingOperand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__guard_specification_spec,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentCombo,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_guard_guard,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_operand_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentOperand_fragment_combo,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_source_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_sendEvent_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToParentOperand_target_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_parentOperand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__parentCombo_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_receiveEvent_messageReceive,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,flow,parentOperand,flowToParentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,useCase,useCaseToInteraction,message,interaction,actor,actorToLine));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"AltStepNFToComboRule\");\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n\n                                    // create link\n                                    ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"parentOperand\", parentOperand);\nmatch.registerObject(\"messageSend\", messageSend);\nmatch.registerObject(\"messageReceive\", messageReceive);\nmatch.registerObject(\"line\", line);\nmatch.registerObject(\"combo\", combo);\nmatch.registerObject(\"parentCombo\", parentCombo);\nmatch.registerObject(\"operand\", operand);\nmatch.registerObject(\"guard\", guard);\nmatch.registerObject(\"spec\", spec);\nmatch.registerObject(\"message\", message);\nmatch.registerObject(\"interaction\", interaction);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", true, csp);\r\nvar_combo_interactionOperator.setValue(combo.getInteractionOperator());\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqInterOperKind eqInterOperKind = new EqInterOperKind();\r\n\r\ncsp.getConstraints().add(eqInterOperKind);\r\n\r\n// Solve CSP\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match,
			InteractionOperand parentOperand,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message, Interaction interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", true, csp);\r\nvar_guard_name.setValue(guard.getName());\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", true, csp);\r\nvar_spec_value.setValue(spec.getValue());\r\nvar_spec_value.setType(\"\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", true, csp);\r\nvar_message_name.setValue(message.getName());\r\nvar_message_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", csp);\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", csp);\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", csp);\r\nvar_step_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"parentOperand\",parentOperand);\r\nisApplicableMatch.registerObject(\"flowToParentOperand\",flowToParentOperand);\r\nisApplicableMatch.registerObject(\"messageSend\",messageSend);\r\nisApplicableMatch.registerObject(\"messageReceive\",messageReceive);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"combo\",combo);\r\nisApplicableMatch.registerObject(\"parentCombo\",parentCombo);\r\nisApplicableMatch.registerObject(\"operand\",operand);\r\nisApplicableMatch.registerObject(\"guard\",guard);\r\nisApplicableMatch.registerObject(\"spec\",spec);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"message\",message);\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			NamedFlow flow, InteractionOperand parentOperand,
			FlowToInteractionFragment flowToParentOperand,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			CombinedFragment combo, CombinedFragment parentCombo,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction, Message message,
			Interaction interaction, Actor actor, ActorToLifeline actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"parentOperand\", parentOperand);\nruleresult.registerObject(\"flowToParentOperand\", flowToParentOperand);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"parentCombo\", parentCombo);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"actorToLine\", actorToLine);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult, EObject flow,
			EObject parentOperand, EObject flowToParentOperand,
			EObject messageSend, EObject messageReceive, EObject line,
			EObject combo, EObject parentCombo, EObject step, EObject alt,
			EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message, EObject interaction,
			EObject stepToMessage, EObject actor, EObject actorToLine);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"messageSend\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"messageReceive\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"combo\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getCombinedFragment()) && match.getObject(\"operand\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionOperand()) && match.getObject(\"guard\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionConstraint()) && match.getObject(\"spec\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getLiteralString()) && match.getObject(\"message\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessage());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_620173 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_907300 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_252360 = null;\n      Interaction __DEC_operand_enclosingInteraction_326944 = null;\n      InteractionOperand __DEC_combo_fragment_452497 = null;\n      InteractionOperand __DEC_messageReceive_fragment_615826 = null;\n      InteractionOperand __DEC_messageSend_fragment_225304 = null;\n      InteractionOperand __DEC_operand_fragment_987526 = null;\n      Constraint __DEC_spec_specification_497960 = null;\n      InteractionOperand __DEC_guard_guard_570559 = null;\n      CombinedFragment __DEC_operand_operand_620835 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_272920 = null;\n      Message __DEC_messageReceive_receiveEvent_272920 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_810482 = null;\n      Message __DEC_messageSend_receiveEvent_810482 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_601171 = null;\n      Message __DEC_messageReceive_sendEvent_601171 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_519365 = null;\n      Message __DEC_messageSend_sendEvent_519365 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_532458 = null;\n      MessageEnd __DEC_message_message_532458 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link fragment from messageSend to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n         ));\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to combo\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_620173 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_620173 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_620173 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_620173 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_620173.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_907300 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_907300 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_907300 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_907300 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_907300.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_252360 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_252360 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_252360 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_252360 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_252360.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_326944 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_326944 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_326944 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_326944 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_326944.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_452497 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_452497 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_452497 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_452497 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_452497.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_452497 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_452497.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_615826 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_615826 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_615826 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_615826 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_615826.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_615826 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_615826.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_225304 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_225304 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_225304 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_225304 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_225304.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_225304 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_225304.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_987526 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_987526 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_987526 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_987526 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_987526.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_987526 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_987526.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_497960 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_497960 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_497960 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_497960.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_497960 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_497960.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_570559 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_570559 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_570559 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_570559.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_570559 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_570559.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_570559 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_570559.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_620835 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_620835 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_620835 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_620835.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_620835 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_620835.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_620835 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_620835.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_272920\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_272920 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_272920.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_272920 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_272920.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_272920 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_272920 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_272920 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_272920.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_810482\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_810482 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_810482.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_810482 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_810482.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_810482 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_810482 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_810482 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_810482.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_601171\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_601171 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_601171.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_601171 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_601171.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_601171 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_601171 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_601171 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_601171.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_519365\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_519365 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_519365.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_519365 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_519365.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_519365 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_519365 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_519365 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_519365.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_532458\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_532458 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_532458.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_532458 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_532458.next ();\n\n                                             // check object __DEC_message_message_532458 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_532458 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_532458 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_532458.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_532458 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_532458.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_53(EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_20032 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_645214 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_439645 = null;\n      Interaction __DEC_operand_enclosingInteraction_321446 = null;\n      InteractionOperand __DEC_combo_fragment_398961 = null;\n      InteractionOperand __DEC_messageReceive_fragment_58865 = null;\n      InteractionOperand __DEC_messageSend_fragment_68456 = null;\n      InteractionOperand __DEC_operand_fragment_360147 = null;\n      Constraint __DEC_spec_specification_637702 = null;\n      InteractionOperand __DEC_guard_guard_218628 = null;\n      CombinedFragment __DEC_operand_operand_160013 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_606512 = null;\n      Message __DEC_messageReceive_receiveEvent_606512 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_458581 = null;\n      Message __DEC_messageSend_receiveEvent_458581 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_70220 = null;\n      Message __DEC_messageReceive_sendEvent_70220 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_846278 = null;\n      Message __DEC_messageSend_sendEvent_846278 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_70874 = null;\n      MessageEnd __DEC_message_message_70874 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      InteractionOperand parentOperand = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from messageSend to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to combo\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // iterate to-many link src from parentOperand to _edge_fragment\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                                       // check object _edge_fragment is really bound\n                                       JavaSDM.ensure ( _edge_fragment != null );\n                                       // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                       JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                       // check link trg from _edge_fragment to messageSend\n                                       JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_20032 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_20032 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_20032 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_20032 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_20032.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_645214 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_645214 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_645214 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_645214 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_645214.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_439645 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_439645 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_439645 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_439645 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_439645.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_321446 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_321446 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_321446 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_321446 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_321446.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_398961 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_398961 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_398961 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_398961 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_398961.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_398961 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_398961.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_58865 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_58865 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_58865 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_58865 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_58865.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_58865 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_58865.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_68456 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_68456 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_68456 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_68456 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_68456.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_68456 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_68456.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_360147 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_360147 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_360147 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_360147 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_360147.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_360147 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_360147.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_637702 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_637702 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_637702 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_637702.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_637702 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_637702.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_218628 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_218628 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_218628 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_218628.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_218628 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_218628.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_218628 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_218628.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_160013 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_160013 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_160013 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_160013.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_160013 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_160013.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_160013 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_160013.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_606512\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_606512 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_606512.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_606512 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_606512.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_606512 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_606512 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_606512 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_606512.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_458581\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_458581 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_458581.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_458581 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_458581.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_458581 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_458581 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_458581 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_458581.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_70220\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_70220 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_70220.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_70220 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_70220.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_70220 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_70220 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_70220 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_70220.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_846278\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_846278 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_846278.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_846278 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_846278.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_846278 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_846278 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_846278 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_846278.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_70874\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_70874 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_70874.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_70874 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_70874.next ();\n\n                                                   // check object __DEC_message_message_70874 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_70874 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_70874 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_70874.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_70874 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_70874.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_enclosingOperand is really bound\n                                          JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                          // check object _edge_fragment is really bound\n                                          JavaSDM.ensure ( _edge_fragment != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                          JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_enclosingOperand to messageSend\n                                          JavaSDM.ensure (messageSend.equals (_edge_enclosingOperand.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_fragment to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_enclosingOperand to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_fragment to messageSend\n                                          JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_54(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_271926 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_752841 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_208558 = null;\n      Interaction __DEC_operand_enclosingInteraction_50589 = null;\n      InteractionOperand __DEC_combo_fragment_550423 = null;\n      InteractionOperand __DEC_messageReceive_fragment_917851 = null;\n      InteractionOperand __DEC_messageSend_fragment_550596 = null;\n      InteractionOperand __DEC_operand_fragment_949195 = null;\n      Constraint __DEC_spec_specification_924555 = null;\n      InteractionOperand __DEC_guard_guard_813390 = null;\n      CombinedFragment __DEC_operand_operand_432504 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_5087 = null;\n      Message __DEC_messageReceive_receiveEvent_5087 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_69590 = null;\n      Message __DEC_messageSend_receiveEvent_69590 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_569421 = null;\n      Message __DEC_messageReceive_sendEvent_569421 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_59111 = null;\n      Message __DEC_messageSend_sendEvent_59111 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_833828 = null;\n      MessageEnd __DEC_message_message_833828 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // bind object\n               message = messageSend.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link receiveEvent from message to messageReceive\n               JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n               ));\n\n               // check link sendEvent from message to messageSend\n               JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n               ));\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to combo\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToCombo.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                                 // ensure correct type and really bound of object combo\n                                 JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                                 combo = (CombinedFragment) _TmpObject;\n                                 // check isomorphic binding between objects parentCombo and combo \n                                 JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_271926 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_271926 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_271926 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_271926 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_271926.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_752841 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_752841 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_752841 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_752841 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_752841.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_208558 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_208558 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_208558 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_208558 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_208558.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_50589 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_50589 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_50589 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_50589 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_50589.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_550423 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_550423 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_550423 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_550423 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_550423.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_550423 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_550423.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_917851 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_917851 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_917851 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_917851 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_917851.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_917851 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_917851.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_550596 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_550596 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_550596 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_550596 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_550596.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_550596 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_550596.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_949195 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_949195 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_949195 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_949195 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_949195.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_949195 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_949195.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_924555 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_924555 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_924555 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_924555.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_924555 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_924555.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_813390 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_813390 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_813390 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_813390.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_813390 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_813390.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_813390 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_813390.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_432504 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_432504 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_432504 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_432504.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_432504 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_432504.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_432504 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_432504.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_5087\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_5087 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_5087.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_5087 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_5087.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_5087 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_5087 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_5087 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_5087.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_69590\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_69590 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_69590.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_69590 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_69590.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_69590 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_69590 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_69590 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_69590.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_569421\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_569421 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_569421.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_569421 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_569421.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_569421 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_569421 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_569421 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_569421.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_59111\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_59111 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_59111.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_59111 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_59111.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_59111 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_59111 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_59111 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_59111.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_833828\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_833828 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_833828.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_833828 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_833828.next ();\n\n                                             // check object __DEC_message_message_833828 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_833828 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_833828 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_833828.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_833828 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_833828.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_55(EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_669955 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_586917 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_187042 = null;\n      Interaction __DEC_operand_enclosingInteraction_726253 = null;\n      InteractionOperand __DEC_combo_fragment_231770 = null;\n      InteractionOperand __DEC_messageReceive_fragment_567956 = null;\n      InteractionOperand __DEC_messageSend_fragment_678085 = null;\n      InteractionOperand __DEC_operand_fragment_827843 = null;\n      Constraint __DEC_spec_specification_809773 = null;\n      InteractionOperand __DEC_guard_guard_426227 = null;\n      CombinedFragment __DEC_operand_operand_954639 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_446188 = null;\n      Message __DEC_messageReceive_receiveEvent_446188 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_619459 = null;\n      Message __DEC_messageSend_receiveEvent_619459 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_783836 = null;\n      Message __DEC_messageReceive_sendEvent_783836 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_423578 = null;\n      Message __DEC_messageSend_sendEvent_423578 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_990359 = null;\n      MessageEnd __DEC_message_message_990359 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to combo\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // iterate to-many link src from parentOperand to _edge_fragment\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                                       // check object _edge_fragment is really bound\n                                       JavaSDM.ensure ( _edge_fragment != null );\n                                       // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                       JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                       // check link trg from _edge_fragment to messageReceive\n                                       JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_669955 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_669955 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_669955 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_669955 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_669955.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_586917 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_586917 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_586917 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_586917 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_586917.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_187042 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_187042 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_187042 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_187042 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_187042.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_726253 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_726253 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_726253 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_726253 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_726253.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_231770 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_231770 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_231770 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_231770 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_231770.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_231770 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_231770.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_567956 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_567956 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_567956 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_567956 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_567956.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_567956 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_567956.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_678085 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_678085 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_678085 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_678085 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_678085.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_678085 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_678085.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_827843 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_827843 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_827843 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_827843 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_827843.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_827843 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_827843.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_809773 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_809773 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_809773 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_809773.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_809773 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_809773.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_426227 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_426227 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_426227 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_426227.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_426227 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_426227.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_426227 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_426227.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_954639 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_954639 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_954639 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_954639.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_954639 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_954639.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_954639 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_954639.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_446188\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_446188 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_446188.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_446188 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_446188.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_446188 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_446188 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_446188 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_446188.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_619459\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_619459 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_619459.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_619459 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_619459.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_619459 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_619459 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_619459 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_619459.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_783836\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_783836 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_783836.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_783836 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_783836.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_783836 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_783836 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_783836 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_783836.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_423578\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_423578 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_423578.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_423578 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_423578.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_423578 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_423578 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_423578 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_423578.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_990359\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_990359 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_990359.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_990359 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_990359.next ();\n\n                                                   // check object __DEC_message_message_990359 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_990359 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_990359 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_990359.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_990359 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_990359.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_enclosingOperand is really bound\n                                          JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                          // check object _edge_fragment is really bound\n                                          JavaSDM.ensure ( _edge_fragment != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                          JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_enclosingOperand to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (_edge_enclosingOperand.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_fragment to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_enclosingOperand to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_fragment to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_56(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_995244 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_984878 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_7211 = null;\n      Interaction __DEC_operand_enclosingInteraction_748735 = null;\n      InteractionOperand __DEC_combo_fragment_368851 = null;\n      InteractionOperand __DEC_messageReceive_fragment_298178 = null;\n      InteractionOperand __DEC_messageSend_fragment_912200 = null;\n      InteractionOperand __DEC_operand_fragment_736398 = null;\n      Constraint __DEC_spec_specification_171162 = null;\n      InteractionOperand __DEC_guard_guard_458766 = null;\n      CombinedFragment __DEC_operand_operand_61362 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_780980 = null;\n      Message __DEC_messageReceive_receiveEvent_780980 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_995094 = null;\n      Message __DEC_messageSend_receiveEvent_995094 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_760269 = null;\n      Message __DEC_messageReceive_sendEvent_760269 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_467874 = null;\n      Message __DEC_messageSend_sendEvent_467874 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_500737 = null;\n      MessageEnd __DEC_message_message_500737 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // check link covered from line to parentOperand\n         JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // check isomorphic binding between objects parentOperand and operand \n               JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link fragment from parentOperand to combo\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // bind object\n                                 message = messageReceive.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_995244 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_995244 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_995244 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_995244 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_995244.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_984878 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_984878 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_984878 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_984878 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_984878.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_7211 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_7211 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_7211 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_7211 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_7211.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_748735 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_748735 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_748735 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_748735 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_748735.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_368851 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_368851 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_368851 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_368851 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_368851.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_368851 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_368851.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_298178 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_298178 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_298178 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_298178 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_298178.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_298178 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_298178.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_912200 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_912200 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_912200 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_912200 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_912200.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_912200 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_912200.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_736398 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_736398 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_736398 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_736398 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_736398.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_736398 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_736398.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_171162 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_171162 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_171162 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_171162.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_171162 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_171162.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_458766 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_458766 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_458766 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_458766.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_458766 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_458766.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_458766 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_458766.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_61362 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_61362 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_61362 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_61362.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_61362 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_61362.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_61362 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_61362.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_780980\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_780980 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_780980.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_780980 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_780980.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_780980 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_780980 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_780980 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_780980.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_995094\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_995094 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_995094.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_995094 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_995094.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_995094 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_995094 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_995094 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_995094.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_760269\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_760269 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_760269.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_760269 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_760269.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_760269 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_760269 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_760269 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_760269.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_467874\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_467874 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_467874.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_467874 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_467874.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_467874 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_467874 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_467874 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_467874.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_500737\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_500737 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_500737.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_500737 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_500737.next ();\n\n                                             // check object __DEC_message_message_500737 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_500737 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_500737 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_500737.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_500737 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_500737.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_57(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_847318 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_558431 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_99844 = null;\n      Interaction __DEC_operand_enclosingInteraction_101110 = null;\n      InteractionOperand __DEC_combo_fragment_582139 = null;\n      InteractionOperand __DEC_messageReceive_fragment_89664 = null;\n      InteractionOperand __DEC_messageSend_fragment_102026 = null;\n      InteractionOperand __DEC_operand_fragment_322143 = null;\n      Constraint __DEC_spec_specification_559509 = null;\n      InteractionOperand __DEC_guard_guard_253114 = null;\n      CombinedFragment __DEC_operand_operand_338964 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_650277 = null;\n      Message __DEC_messageReceive_receiveEvent_650277 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_452394 = null;\n      Message __DEC_messageSend_receiveEvent_452394 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_967206 = null;\n      Message __DEC_messageReceive_sendEvent_967206 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_568546 = null;\n      Message __DEC_messageSend_sendEvent_568546 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_729824 = null;\n      MessageEnd __DEC_message_message_729824 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link fragment from parentOperand to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link fragment from parentOperand to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // bind object\n                           parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                           // check object parentCombo is really bound\n                           JavaSDM.ensure ( parentCombo != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // bind object\n                           _TmpObject = _edge_covered.getTrg ();\n\n                           // ensure correct type and really bound of object line\n                           JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n                           line = (Lifeline) _TmpObject;\n\n                           // bind object\n                           interaction = line.getInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // check link covered from line to parentOperand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // iterate to-many link trg from parentOperand to _edge_coveredBy\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                 while ( fujaba__IterParentOperandTo_edge_coveredBy.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_coveredBy = (EMoflonEdge) fujaba__IterParentOperandTo_edge_coveredBy.next ();\n\n                                       // check object _edge_coveredBy is really bound\n                                       JavaSDM.ensure ( _edge_coveredBy != null );\n                                       // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                       JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                       // check link src from _edge_coveredBy to line\n                                       JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_847318 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_847318 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_847318 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_847318 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_847318.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_558431 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_558431 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_558431 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_558431 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_558431.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_99844 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_99844 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_99844 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_99844 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_99844.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_101110 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_101110 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_101110 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_101110 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_101110.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_582139 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_582139 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_582139 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_582139 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_582139.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_582139 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_582139.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_89664 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_89664 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_89664 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_89664 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_89664.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_89664 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_89664.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_102026 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_102026 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_102026 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_102026 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_102026.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_102026 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_102026.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_322143 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_322143 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_322143 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_322143 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_322143.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_322143 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_322143.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_559509 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_559509 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_559509 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_559509.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_559509 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_559509.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_253114 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_253114 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_253114 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_253114.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_253114 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_253114.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_253114 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_253114.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_338964 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_338964 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_338964 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_338964.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_338964 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_338964.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_338964 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_338964.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_650277\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_650277 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_650277.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_650277 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_650277.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_650277 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_650277 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_650277 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_650277.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_452394\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_452394 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_452394.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_452394 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_452394.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_452394 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_452394 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_452394 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_452394.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_967206\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_967206 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_967206.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_967206 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_967206.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_967206 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_967206 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_967206 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_967206.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_568546\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_568546 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_568546.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_568546 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_568546.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_568546 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_568546 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_568546 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_568546.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_729824\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_729824 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_729824.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_729824 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_729824.next ();\n\n                                                   // check object __DEC_message_message_729824 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_729824 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_729824 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_729824.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_729824 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_729824.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_covered is really bound\n                                          JavaSDM.ensure ( _edge_covered != null );\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                          JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_covered to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_covered.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to line\n                                          JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_covered to line\n                                          JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_58(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_349764 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_191743 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_977878 = null;\n      Interaction __DEC_operand_enclosingInteraction_442491 = null;\n      InteractionOperand __DEC_combo_fragment_14246 = null;\n      InteractionOperand __DEC_messageReceive_fragment_864560 = null;\n      InteractionOperand __DEC_messageSend_fragment_919690 = null;\n      InteractionOperand __DEC_operand_fragment_793718 = null;\n      Constraint __DEC_spec_specification_889981 = null;\n      InteractionOperand __DEC_guard_guard_675046 = null;\n      CombinedFragment __DEC_operand_operand_349353 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_936905 = null;\n      Message __DEC_messageReceive_receiveEvent_936905 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_471780 = null;\n      Message __DEC_messageSend_receiveEvent_471780 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_673617 = null;\n      Message __DEC_messageReceive_sendEvent_673617 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_830838 = null;\n      Message __DEC_messageSend_sendEvent_830838 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_125102 = null;\n      MessageEnd __DEC_message_message_125102 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      CombinedFragment combo = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand parentOperand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // iterate to-many link fragment from parentOperand to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               message = messageReceive.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link receiveEvent from message to messageReceive\n               JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n               ));\n\n               // bind object\n               _TmpObject = _edge_fragment.getTrg ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n\n               // check link fragment from combo to parentOperand\n               JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n               ));\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_349764 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_349764 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_349764 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_349764 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_349764.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_191743 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_191743 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_191743 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_191743 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_191743.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_977878 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_977878 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_977878 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_977878 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_977878.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_442491 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_442491 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_442491 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_442491 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_442491.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_14246 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_14246 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_14246 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_14246 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_14246.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_14246 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_14246.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_864560 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_864560 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_864560 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_864560 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_864560.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_864560 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_864560.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_919690 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_919690 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_919690 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_919690 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_919690.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_919690 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_919690.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_793718 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_793718 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_793718 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_793718 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_793718.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_793718 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_793718.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_889981 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_889981 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_889981 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_889981.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_889981 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_889981.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_675046 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_675046 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_675046 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_675046.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_675046 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_675046.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_675046 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_675046.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_349353 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_349353 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_349353 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_349353.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_349353 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_349353.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_349353 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_349353.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_936905\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_936905 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_936905.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_936905 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_936905.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_936905 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_936905 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_936905 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_936905.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_471780\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_471780 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_471780.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_471780 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_471780.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_471780 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_471780 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_471780 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_471780.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_673617\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_673617 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_673617.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_673617 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_673617.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_673617 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_673617 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_673617 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_673617.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_830838\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_830838 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_830838.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_830838 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_830838.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_830838 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_830838 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_830838 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_830838.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_125102\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_125102 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_125102.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_125102 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_125102.next ();\n\n                                             // check object __DEC_message_message_125102 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_125102 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_125102 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_125102.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_125102 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_125102.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_fragment to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to combo\n                                    JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_59(EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_39868 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_333957 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_821291 = null;\n      Interaction __DEC_operand_enclosingInteraction_921836 = null;\n      InteractionOperand __DEC_combo_fragment_123008 = null;\n      InteractionOperand __DEC_messageReceive_fragment_925544 = null;\n      InteractionOperand __DEC_messageSend_fragment_443740 = null;\n      InteractionOperand __DEC_operand_fragment_313835 = null;\n      Constraint __DEC_spec_specification_812185 = null;\n      InteractionOperand __DEC_guard_guard_77678 = null;\n      CombinedFragment __DEC_operand_operand_842031 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_825196 = null;\n      Message __DEC_messageReceive_receiveEvent_825196 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_521917 = null;\n      Message __DEC_messageSend_receiveEvent_521917 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_798288 = null;\n      Message __DEC_messageReceive_sendEvent_798288 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_757379 = null;\n      Message __DEC_messageSend_sendEvent_757379 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_221678 = null;\n      MessageEnd __DEC_message_message_221678 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandTo_edge_fragment = null;\n      EMoflonEdge _edge_fragment = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingOperand is really bound\n         JavaSDM.ensure ( _edge_enclosingOperand != null );\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_enclosingOperand.getTrg ();\n\n         // ensure correct type and really bound of object parentOperand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         parentOperand = (InteractionOperand) _TmpObject;\n\n         // check link fragment from combo to parentOperand\n         JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link fragment from parentOperand to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageReceive.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from messageSend to message\n                     JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // bind object\n                     parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                     // check object parentCombo is really bound\n                     JavaSDM.ensure ( parentCombo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // iterate to-many link covered from parentOperand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n                     while ( fujaba__IterParentOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // bind object\n                           interaction = line.getInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // check isomorphic binding between objects parentOperand and operand \n                                 JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // iterate to-many link src from parentOperand to _edge_fragment\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandTo_edge_fragment = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(parentOperand,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterParentOperandTo_edge_fragment.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_fragment = (EMoflonEdge) fujaba__IterParentOperandTo_edge_fragment.next ();\n\n                                       // check object _edge_fragment is really bound\n                                       JavaSDM.ensure ( _edge_fragment != null );\n                                       // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                       JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                       // check link trg from _edge_fragment to combo\n                                       JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_39868 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_39868 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_39868 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_39868 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_39868.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_333957 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_333957 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_333957 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_333957 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_333957.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_821291 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_821291 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_821291 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_821291 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_821291.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_921836 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_921836 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_921836 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_921836 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_921836.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_123008 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_123008 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_123008 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_123008 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_123008.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_123008 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_123008.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_925544 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_925544 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_925544 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_925544 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_925544.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_925544 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_925544.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_443740 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_443740 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_443740 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_443740 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_443740.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_443740 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_443740.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_313835 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_313835 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_313835 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_313835 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_313835.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_313835 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_313835.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_812185 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_812185 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_812185 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_812185.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_812185 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_812185.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_77678 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_77678 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_77678 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_77678.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_77678 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_77678.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_77678 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_77678.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_842031 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_842031 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_842031 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_842031.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_842031 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_842031.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_842031 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_842031.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_825196\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_825196 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_825196.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_825196 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_825196.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_825196 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_825196 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_825196 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_825196.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_521917\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_521917 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_521917.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_521917 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_521917.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_521917 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_521917 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_521917 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_521917.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_798288\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_798288 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_798288.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_798288 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_798288.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_798288 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_798288 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_798288 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_798288.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_757379\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_757379 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_757379.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_757379 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_757379.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_757379 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_757379 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_757379 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_757379.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_221678\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_221678 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_221678.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_221678 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_221678.next ();\n\n                                                   // check object __DEC_message_message_221678 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_221678 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_221678 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_221678.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_221678 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_221678.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_enclosingOperand is really bound\n                                          JavaSDM.ensure ( _edge_enclosingOperand != null );\n                                          // check object _edge_fragment is really bound\n                                          JavaSDM.ensure ( _edge_fragment != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_fragment and _edge_enclosingOperand \n                                          JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingOperand) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_enclosingOperand to combo\n                                          JavaSDM.ensure (combo.equals (_edge_enclosingOperand.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_fragment to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_fragment.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_enclosingOperand to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (_edge_enclosingOperand.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_fragment to combo\n                                          JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_60(
			EMoflonEdge _edge_enclosingOperand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_846560 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_6182 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_917681 = null;\n      Interaction __DEC_operand_enclosingInteraction_815805 = null;\n      InteractionOperand __DEC_combo_fragment_87660 = null;\n      InteractionOperand __DEC_messageReceive_fragment_501046 = null;\n      InteractionOperand __DEC_messageSend_fragment_600786 = null;\n      InteractionOperand __DEC_operand_fragment_113906 = null;\n      Constraint __DEC_spec_specification_643175 = null;\n      InteractionOperand __DEC_guard_guard_363122 = null;\n      CombinedFragment __DEC_operand_operand_744796 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_142062 = null;\n      Message __DEC_messageReceive_receiveEvent_142062 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_490865 = null;\n      Message __DEC_messageSend_receiveEvent_490865 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_126655 = null;\n      Message __DEC_messageReceive_sendEvent_126655 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_596099 = null;\n      Message __DEC_messageSend_sendEvent_596099 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_147719 = null;\n      MessageEnd __DEC_message_message_147719 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link covered from line to parentOperand\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // iterate to-many link fragment from parentOperand to messageSend\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                       // ensure correct type and really bound of object messageSend\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // bind object\n                                       message = messageSend.getMessage ();\n\n                                       // check object message is really bound\n                                       JavaSDM.ensure ( message != null );\n\n                                       // check link message from message to interaction\n                                       JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                       ));\n\n                                       // check link message from messageReceive to message\n                                       JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                       ));\n\n                                       // check link receiveEvent from message to messageReceive\n                                       JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                       ));\n\n                                       // check link sendEvent from message to messageSend\n                                       JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_846560 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_846560 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_846560 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_846560 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_846560.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_6182 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_6182 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_6182 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_6182 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_6182.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_917681 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_917681 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_917681 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_917681 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_917681.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_815805 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_815805 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_815805 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_815805 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_815805.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_87660 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_87660 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_87660 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_87660 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_87660.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_87660 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_87660.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_501046 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_501046 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_501046 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_501046 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_501046.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_501046 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_501046.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_600786 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_600786 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_600786 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_600786 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_600786.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_600786 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_600786.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_113906 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_113906 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_113906 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_113906 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_113906.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_113906 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_113906.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_643175 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_643175 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_643175 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_643175.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_643175 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_643175.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_363122 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_363122 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_363122 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_363122.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_363122 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_363122.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_363122 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_363122.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_744796 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_744796 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_744796 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_744796.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_744796 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_744796.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_744796 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_744796.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_142062\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_142062 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_142062.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_142062 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_142062.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_142062 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_142062 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_142062 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_142062.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_490865\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_490865 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_490865.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_490865 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_490865.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_490865 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_490865 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_490865 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_490865.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_126655\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_126655 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_126655.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_126655 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_126655.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_126655 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_126655 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_126655 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_126655.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_596099\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_596099 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_596099.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_596099 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_596099.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_596099 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_596099 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_596099 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_596099.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_147719\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_147719 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_147719.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_147719 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_147719.next ();\n\n                                                   // check object __DEC_message_message_147719 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_147719 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_147719 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_147719.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_147719 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_147719.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to line\n                                          JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_61(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_871918 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_714258 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_732649 = null;\n      Interaction __DEC_operand_enclosingInteraction_521971 = null;\n      InteractionOperand __DEC_combo_fragment_365797 = null;\n      InteractionOperand __DEC_messageReceive_fragment_45743 = null;\n      InteractionOperand __DEC_messageSend_fragment_19868 = null;\n      InteractionOperand __DEC_operand_fragment_777932 = null;\n      Constraint __DEC_spec_specification_602757 = null;\n      InteractionOperand __DEC_guard_guard_872512 = null;\n      CombinedFragment __DEC_operand_operand_431051 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316151 = null;\n      Message __DEC_messageReceive_receiveEvent_316151 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_247360 = null;\n      Message __DEC_messageSend_receiveEvent_247360 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_201757 = null;\n      Message __DEC_messageReceive_sendEvent_201757 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_950506 = null;\n      Message __DEC_messageSend_sendEvent_950506 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_458904 = null;\n      MessageEnd __DEC_message_message_458904 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object parentCombo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         parentCombo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from parentCombo to line\n         JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link covered from line to parentOperand\n               fujaba__Success = false;\n\n               fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToParentOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n                     // ensure correct type and really bound of object parentOperand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     parentOperand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // check link operand from parentOperand to parentCombo\n                     JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // iterate to-many link fragment from parentOperand to messageSend\n                                 fujaba__Success = false;\n\n                                 fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                                 while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                       // ensure correct type and really bound of object messageSend\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // bind object\n                                       message = messageSend.getMessage ();\n\n                                       // check object message is really bound\n                                       JavaSDM.ensure ( message != null );\n\n                                       // check link message from message to interaction\n                                       JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                       ));\n\n                                       // check link message from messageReceive to message\n                                       JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                       ));\n\n                                       // check link receiveEvent from message to messageReceive\n                                       JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                       ));\n\n                                       // check link sendEvent from message to messageSend\n                                       JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                       ));\n\n                                       // iterate to-many link src from line to _edge_coveredBy\n                                       fujaba__Success = false;\n\n                                       fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                                       while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                                             // check object _edge_coveredBy is really bound\n                                             JavaSDM.ensure ( _edge_coveredBy != null );\n                                             // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                             JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                             // check link trg from _edge_coveredBy to parentCombo\n                                             JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_enclosingInteraction_871918 = combo.getEnclosingInteraction ();\n\n                                                   // check object __DEC_combo_enclosingInteraction_871918 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_enclosingInteraction_871918 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_enclosingInteraction_871918 and interaction \n                                                   JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_871918.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_enclosingInteraction_714258 = messageReceive.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageReceive_enclosingInteraction_714258 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_714258 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_714258 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_714258.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_enclosingInteraction_732649 = messageSend.getEnclosingInteraction ();\n\n                                                   // check object __DEC_messageSend_enclosingInteraction_732649 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_732649 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_732649 and interaction \n                                                   JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_732649.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_521971 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_521971 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_521971 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_521971 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_521971.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_365797 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_365797 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_365797 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_365797 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_365797.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_365797 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_365797.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_45743 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_45743 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_45743 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_45743 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_45743.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_45743 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_45743.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_19868 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_19868 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_19868 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_19868 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_19868.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_19868 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_19868.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_777932 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_777932 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_777932 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_777932 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_777932.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_777932 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_777932.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_602757 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_602757 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_602757 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_602757.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_602757 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_602757.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_872512 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_872512 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_872512 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_872512.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_872512 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_872512.equals (operand) );\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_872512 and parentOperand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_872512.equals (parentOperand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_431051 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_431051 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_431051 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_431051.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_431051 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_431051.equals (combo) );\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_431051 and parentCombo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_431051.equals (parentCombo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_316151\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316151 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316151.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageReceive_receiveEvent_316151 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_316151.next ();\n\n                                                         // check object __DEC_messageReceive_receiveEvent_316151 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_316151 != null );\n                                                         // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_316151 and message \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_316151.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_247360\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_247360 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_247360.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageSend_receiveEvent_247360 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_247360.next ();\n\n                                                         // check object __DEC_messageSend_receiveEvent_247360 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_receiveEvent_247360 != null );\n                                                         // check isomorphic binding between objects __DEC_messageSend_receiveEvent_247360 and message \n                                                         JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_247360.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_201757\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_201757 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_201757.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageReceive_sendEvent_201757 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_201757.next ();\n\n                                                         // check object __DEC_messageReceive_sendEvent_201757 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_sendEvent_201757 != null );\n                                                         // check isomorphic binding between objects __DEC_messageReceive_sendEvent_201757 and message \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_201757.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_950506\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_950506 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_950506.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageSend_sendEvent_950506 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_950506.next ();\n\n                                                         // check object __DEC_messageSend_sendEvent_950506 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_sendEvent_950506 != null );\n                                                         // check isomorphic binding between objects __DEC_messageSend_sendEvent_950506 and message \n                                                         JavaSDM.ensure ( !__DEC_messageSend_sendEvent_950506.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link message from message to __DEC_message_message_458904\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageTo__DEC_message_message_458904 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_458904.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_message_message_458904 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_458904.next ();\n\n                                                         // check object __DEC_message_message_458904 is really bound\n                                                         JavaSDM.ensure ( __DEC_message_message_458904 != null );\n                                                         // check isomorphic binding between objects __DEC_message_message_458904 and messageReceive \n                                                         JavaSDM.ensure ( !__DEC_message_message_458904.equals (messageReceive) );\n\n                                                         // check isomorphic binding between objects __DEC_message_message_458904 and messageSend \n                                                         JavaSDM.ensure ( !__DEC_message_message_458904.equals (messageSend) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_covered is really bound\n                                                JavaSDM.ensure ( _edge_covered != null );\n                                                // check object _edge_coveredBy is really bound\n                                                JavaSDM.ensure ( _edge_coveredBy != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object message is really bound\n                                                JavaSDM.ensure ( message != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object parentCombo is really bound\n                                                JavaSDM.ensure ( parentCombo != null );\n                                                // check object parentOperand is really bound\n                                                JavaSDM.ensure ( parentOperand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                                JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                                // check isomorphic binding between objects parentCombo and combo \n                                                JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check isomorphic binding between objects parentOperand and operand \n                                                JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                                // check link fragment from combo to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageReceive to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from messageSend to parentOperand\n                                                JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                                ));\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to parentOperand\n                                                JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link guard from parentOperand to guard\n                                                JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                                )));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link message from message to interaction\n                                                JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                                ));\n\n                                                // check link message from messageReceive to message\n                                                JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                                ));\n\n                                                // check link message from messageSend to message\n                                                JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                                ));\n\n                                                // check link receiveEvent from message to messageReceive\n                                                JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                                ));\n\n                                                // check link receiveEvent from message to messageSend\n                                                JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                                )));\n\n                                                // check link sendEvent from message to messageSend\n                                                JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                                ));\n\n                                                // check link sendEvent from message to messageReceive\n                                                JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                                )));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (combo.equals (operand.eContainer()\n                                                ));\n\n                                                // check link operand from parentOperand to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                                ));\n\n                                                // check link operand from operand to parentCombo\n                                                JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                                .contains (parentCombo)));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_covered to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (_edge_covered.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_coveredBy to line\n                                                JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_covered to line\n                                                JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_coveredBy to parentCombo\n                                                JavaSDM.ensure (parentCombo.equals (_edge_coveredBy.getTrg ()\n                                                ));\n\n                                                // check link covered from operand to line\n                                                JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                                // check link covered from parentCombo to line\n                                                JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                                // check link covered from line to parentOperand\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_62(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_845003 = null;\n      NormalStep __DEC_alt_stepAlternative_192526 = null;\n      Flow __DEC_step_steps_250635 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_295896 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_295896 = null;\n      Match match = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n      AlternativeFlow altFlow = null;\n      AlternativeFlowAlternative alt = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_stepAlternative is really bound\n         JavaSDM.ensure ( _edge_stepAlternative != null );\n         // bind object\n         _TmpObject = _edge_stepAlternative.getTrg ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         _TmpObject = alt.getRef ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_stepAlternative.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // check link stepAlternative from alt to step\n         JavaSDM.ensure (step.equals (alt.eContainer()\n         ));\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_845003 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_845003 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_845003 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_845003.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_845003 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_845003.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_192526 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_192526 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_192526 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_192526.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_192526 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_192526.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_250635 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_250635 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_250635 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_250635.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_250635 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_250635.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_250635 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_250635.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_295896\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_295896 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_295896.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_295896 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_295896.next ();\n\n                     // check object __DEC_altFlow_ref_295896 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_295896 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_295896 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_295896.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_stepAlternative is really bound\n            JavaSDM.ensure ( _edge_stepAlternative != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_stepAlternative to step\n            JavaSDM.ensure (step.equals (_edge_stepAlternative.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_stepAlternative to alt\n            JavaSDM.ensure (alt.equals (_edge_stepAlternative.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_14(
			EMoflonEdge _edge_stepAlternative);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_548286 = null;\n      NormalStep __DEC_alt_stepAlternative_657593 = null;\n      Flow __DEC_step_steps_995711 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_944083 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_944083 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n      AlternativeFlowAlternative alt = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_ref is really bound\n         JavaSDM.ensure ( _edge_ref != null );\n         // bind object\n         _TmpObject = _edge_ref.getSrc ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         step = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(step.getStepAlternative().contains(alt));\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_ref.getTrg ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check link ref from alt to altFlow\n         JavaSDM.ensure (altFlow.equals (alt.getRef ()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_548286 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_548286 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_548286 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_548286.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_548286 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_548286.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_657593 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_657593 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_657593 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_657593.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_657593 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_657593.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_995711 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_995711 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_995711 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_995711.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_995711 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_995711.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_995711 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_995711.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_944083\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_944083 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_944083.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_944083 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_944083.next ();\n\n                     // check object __DEC_altFlow_ref_944083 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_944083 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_944083 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_944083.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_ref is really bound\n            JavaSDM.ensure ( _edge_ref != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check isomorphic binding between objects flow and altFlow \n            JavaSDM.ensure ( !flow.equals (altFlow) );\n\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_ref to alt\n            JavaSDM.ensure (alt.equals (_edge_ref.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_ref to altFlow\n            JavaSDM.ensure (altFlow.equals (_edge_ref.getTrg ()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_15(EMoflonEdge _edge_ref);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_943806 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_48547 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_699819 = null;\n      Interaction __DEC_operand_enclosingInteraction_987302 = null;\n      InteractionOperand __DEC_combo_fragment_393763 = null;\n      InteractionOperand __DEC_messageReceive_fragment_805543 = null;\n      InteractionOperand __DEC_messageSend_fragment_710593 = null;\n      InteractionOperand __DEC_operand_fragment_914977 = null;\n      Constraint __DEC_spec_specification_290161 = null;\n      InteractionOperand __DEC_guard_guard_968325 = null;\n      CombinedFragment __DEC_operand_operand_196439 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_8623 = null;\n      Message __DEC_messageReceive_receiveEvent_8623 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_355274 = null;\n      Message __DEC_messageSend_receiveEvent_355274 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_472093 = null;\n      Message __DEC_messageReceive_sendEvent_472093 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_147164 = null;\n      Message __DEC_messageSend_sendEvent_147164 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_202948 = null;\n      MessageEnd __DEC_message_message_202948 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_operand is really bound\n         JavaSDM.ensure ( _edge_operand != null );\n         // bind object\n         _TmpObject = _edge_operand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         parentOperand = combo.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // bind object\n         _TmpObject = _edge_operand.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // check link operand from operand to combo\n         JavaSDM.ensure (combo.equals (operand.eContainer()\n         ));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from operand to line\n               JavaSDM.ensure (operand.getCovered ().contains (line));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link fragment from parentOperand to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageReceive.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link message from messageSend to message\n                           JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_943806 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_943806 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_943806 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_943806 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_943806.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_48547 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_48547 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_48547 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_48547 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_48547.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_699819 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_699819 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_699819 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_699819 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_699819.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_987302 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_987302 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_987302 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_987302 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_987302.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_393763 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_393763 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_393763 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_393763 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_393763.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_393763 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_393763.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_805543 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_805543 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_805543 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_805543 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_805543.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_805543 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_805543.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_710593 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_710593 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_710593 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_710593 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_710593.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_710593 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_710593.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_914977 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_914977 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_914977 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_914977 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_914977.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_914977 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_914977.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_290161 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_290161 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_290161 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_290161.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_290161 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_290161.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_968325 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_968325 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_968325 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_968325.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_968325 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_968325.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_968325 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_968325.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_196439 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_196439 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_196439 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_196439.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_196439 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_196439.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_196439 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_196439.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_8623\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_8623 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_8623.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_8623 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_8623.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_8623 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_8623 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_8623 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_8623.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_355274\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_355274 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_355274.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_355274 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_355274.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_355274 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_355274 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_355274 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_355274.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_472093\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_472093 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_472093.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_472093 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_472093.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_472093 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_472093 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_472093 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_472093.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_147164\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_147164 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_147164.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_147164 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_147164.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_147164 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_147164 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_147164 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_147164.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_202948\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_202948 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_202948.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_202948 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_202948.next ();\n\n                                       // check object __DEC_message_message_202948 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_202948 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_202948 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_202948.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_202948 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_202948.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_operand is really bound\n                              JavaSDM.ensure ( _edge_operand != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_operand to combo\n                              JavaSDM.ensure (combo.equals (_edge_operand.getSrc ()\n                              ));\n\n                              // check link trg from _edge_operand to operand\n                              JavaSDM.ensure (operand.equals (_edge_operand.getTrg ()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_63(EMoflonEdge _edge_operand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_294113 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_71107 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_720938 = null;\n      Interaction __DEC_operand_enclosingInteraction_304033 = null;\n      InteractionOperand __DEC_combo_fragment_580749 = null;\n      InteractionOperand __DEC_messageReceive_fragment_612158 = null;\n      InteractionOperand __DEC_messageSend_fragment_764668 = null;\n      InteractionOperand __DEC_operand_fragment_264218 = null;\n      Constraint __DEC_spec_specification_857273 = null;\n      InteractionOperand __DEC_guard_guard_672673 = null;\n      CombinedFragment __DEC_operand_operand_880175 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_991264 = null;\n      Message __DEC_messageReceive_receiveEvent_991264 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_312617 = null;\n      Message __DEC_messageSend_receiveEvent_312617 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_311444 = null;\n      Message __DEC_messageReceive_sendEvent_311444 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_182388 = null;\n      Message __DEC_messageSend_sendEvent_182388 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_478056 = null;\n      MessageEnd __DEC_message_message_478056 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to parentOperand\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n               // ensure correct type and really bound of object parentOperand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               parentOperand = (InteractionOperand) _TmpObject;\n               // check isomorphic binding between objects parentOperand and operand \n               JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link fragment from parentOperand to combo\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_294113 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_294113 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_294113 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_294113 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_294113.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_71107 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_71107 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_71107 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_71107 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_71107.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_720938 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_720938 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_720938 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_720938 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_720938.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_304033 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_304033 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_304033 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_304033 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_304033.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_580749 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_580749 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_580749 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_580749 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_580749.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_580749 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_580749.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_612158 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_612158 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_612158 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_612158 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_612158.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_612158 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_612158.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_764668 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_764668 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_764668 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_764668 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_764668.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_764668 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_764668.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_264218 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_264218 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_264218 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_264218 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_264218.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_264218 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_264218.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_857273 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_857273 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_857273 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_857273.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_857273 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_857273.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_672673 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_672673 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_672673 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_672673.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_672673 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_672673.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_672673 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_672673.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_880175 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_880175 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_880175 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_880175.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_880175 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_880175.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_880175 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_880175.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_991264\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_991264 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_991264.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_991264 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_991264.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_991264 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_991264 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_991264 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_991264.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_312617\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_312617 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_312617.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_312617 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_312617.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_312617 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_312617 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_312617 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_312617.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_311444\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_311444 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_311444.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_311444 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_311444.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_311444 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_311444 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_311444 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_311444.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_182388\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_182388 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_182388.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_182388 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_182388.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_182388 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_182388 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_182388 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_182388.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_478056\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_478056 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_478056.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_478056 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_478056.next ();\n\n                                             // check object __DEC_message_message_478056 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_478056 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_478056 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_478056.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_478056 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_478056.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to operand\n                                    JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_64(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_320702 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_256262 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_373635 = null;\n      Interaction __DEC_operand_enclosingInteraction_506957 = null;\n      InteractionOperand __DEC_combo_fragment_362866 = null;\n      InteractionOperand __DEC_messageReceive_fragment_741371 = null;\n      InteractionOperand __DEC_messageSend_fragment_631172 = null;\n      InteractionOperand __DEC_operand_fragment_157361 = null;\n      Constraint __DEC_spec_specification_858594 = null;\n      InteractionOperand __DEC_guard_guard_842329 = null;\n      CombinedFragment __DEC_operand_operand_400815 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_77868 = null;\n      Message __DEC_messageReceive_receiveEvent_77868 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_366085 = null;\n      Message __DEC_messageSend_receiveEvent_366085 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_224669 = null;\n      Message __DEC_messageReceive_sendEvent_224669 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_391563 = null;\n      Message __DEC_messageSend_sendEvent_391563 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_690387 = null;\n      MessageEnd __DEC_message_message_690387 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterLineToParentOperand = null;\n      InteractionOperand parentOperand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to parentOperand\n         fujaba__Success = false;\n\n         fujaba__IterLineToParentOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToParentOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToParentOperand.next ();\n\n               // ensure correct type and really bound of object parentOperand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               parentOperand = (InteractionOperand) _TmpObject;\n               // check isomorphic binding between objects parentOperand and operand \n               JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link fragment from parentOperand to combo\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from parentOperand to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // bind object\n                                 message = messageSend.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // iterate to-many link src from line to _edge_coveredBy\n                                 fujaba__Success = false;\n\n                                 fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                                 while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                                       // check object _edge_coveredBy is really bound\n                                       JavaSDM.ensure ( _edge_coveredBy != null );\n                                       // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                       JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                       // check link trg from _edge_coveredBy to operand\n                                       JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_enclosingInteraction_320702 = combo.getEnclosingInteraction ();\n\n                                             // check object __DEC_combo_enclosingInteraction_320702 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_enclosingInteraction_320702 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_enclosingInteraction_320702 and interaction \n                                             JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_320702.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_enclosingInteraction_256262 = messageReceive.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageReceive_enclosingInteraction_256262 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_256262 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_256262 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_256262.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_enclosingInteraction_373635 = messageSend.getEnclosingInteraction ();\n\n                                             // check object __DEC_messageSend_enclosingInteraction_373635 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_373635 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_373635 and interaction \n                                             JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_373635.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_506957 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_506957 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_506957 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_506957 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_506957.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_362866 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_362866 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_362866 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_362866 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_362866.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_362866 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_362866.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_741371 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_741371 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_741371 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_741371 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_741371.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_741371 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_741371.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_631172 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_631172 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_631172 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_631172 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_631172.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_631172 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_631172.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_157361 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_157361 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_157361 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_157361 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_157361.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_157361 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_157361.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_858594 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_858594 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_858594 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_858594.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_858594 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_858594.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_842329 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_842329 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_842329 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_842329.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_842329 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_842329.equals (operand) );\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_842329 and parentOperand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_842329.equals (parentOperand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_400815 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_400815 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_400815 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_400815.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_400815 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_400815.equals (combo) );\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_400815 and parentCombo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_400815.equals (parentCombo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_77868\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_77868 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_77868.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_77868 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_77868.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_77868 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_77868 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_77868 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_77868.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_366085\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_366085 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_366085.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_366085 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_366085.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_366085 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_366085 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_366085 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_366085.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_224669\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_224669 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_224669.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_224669 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_224669.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_224669 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_224669 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_224669 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_224669.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_391563\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_391563 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_391563.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_391563 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_391563.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_391563 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_391563 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_391563 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_391563.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_690387\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_690387 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_690387.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_690387 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_690387.next ();\n\n                                                   // check object __DEC_message_message_690387 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_690387 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_690387 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_690387.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_690387 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_690387.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_covered is really bound\n                                          JavaSDM.ensure ( _edge_covered != null );\n                                          // check object _edge_coveredBy is really bound\n                                          JavaSDM.ensure ( _edge_coveredBy != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object parentCombo is really bound\n                                          JavaSDM.ensure ( parentCombo != null );\n                                          // check object parentOperand is really bound\n                                          JavaSDM.ensure ( parentOperand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                          JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                          // check isomorphic binding between objects parentCombo and combo \n                                          JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check isomorphic binding between objects parentOperand and operand \n                                          JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                          // check link fragment from combo to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageReceive to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from messageSend to parentOperand\n                                          JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                          ));\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to parentOperand\n                                          JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link guard from parentOperand to guard\n                                          JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                          )));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link operand from parentOperand to parentCombo\n                                          JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                          ));\n\n                                          // check link operand from operand to parentCombo\n                                          JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                          .contains (parentCombo)));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_covered to operand\n                                          JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_coveredBy to line\n                                          JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_covered to line\n                                          JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_coveredBy to operand\n                                          JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                          ));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // check link covered from parentCombo to line\n                                          JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                          // check link covered from line to parentOperand\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_65(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_470942 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_29498 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_721367 = null;\n      Interaction __DEC_operand_enclosingInteraction_668610 = null;\n      InteractionOperand __DEC_combo_fragment_460491 = null;\n      InteractionOperand __DEC_messageReceive_fragment_620992 = null;\n      InteractionOperand __DEC_messageSend_fragment_581384 = null;\n      InteractionOperand __DEC_operand_fragment_526974 = null;\n      Constraint __DEC_spec_specification_417662 = null;\n      InteractionOperand __DEC_guard_guard_156145 = null;\n      CombinedFragment __DEC_operand_operand_276155 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_267715 = null;\n      Message __DEC_messageReceive_receiveEvent_267715 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_48268 = null;\n      Message __DEC_messageSend_receiveEvent_48268 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_767360 = null;\n      Message __DEC_messageReceive_sendEvent_767360 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_730153 = null;\n      Message __DEC_messageSend_sendEvent_730153 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_589767 = null;\n      MessageEnd __DEC_message_message_589767 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_guard is really bound\n         JavaSDM.ensure ( _edge_guard != null );\n         // bind object\n         _TmpObject = _edge_guard.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         parentOperand = combo.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check isomorphic binding between objects parentCombo and combo \n         JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link trg from _edge_guard to guard\n         JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // check link covered from line to parentOperand\n               JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n               // iterate to-many link fragment from parentOperand to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link fragment from parentOperand to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_470942 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_470942 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_470942 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_470942 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_470942.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_29498 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_29498 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_29498 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_29498 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_29498.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_721367 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_721367 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_721367 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_721367 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_721367.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_668610 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_668610 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_668610 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_668610 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_668610.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_460491 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_460491 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_460491 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_460491 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_460491.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_460491 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_460491.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_620992 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_620992 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_620992 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_620992 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_620992.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_620992 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_620992.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_581384 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_581384 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_581384 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_581384 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_581384.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_581384 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_581384.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_526974 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_526974 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_526974 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_526974 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_526974.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_526974 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_526974.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_417662 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_417662 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_417662 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_417662.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_417662 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_417662.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_156145 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_156145 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_156145 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_156145.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_156145 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_156145.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_156145 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_156145.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_276155 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_276155 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_276155 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_276155.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_276155 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_276155.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_276155 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_276155.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_267715\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_267715 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_267715.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_267715 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_267715.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_267715 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_267715 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_267715 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_267715.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_48268\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_48268 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_48268.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_48268 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_48268.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_48268 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_48268 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_48268 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_48268.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_767360\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_767360 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_767360.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_767360 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_767360.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_767360 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_767360 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_767360 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_767360.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_730153\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_730153 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_730153.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_730153 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_730153.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_730153 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_730153 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_730153 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_730153.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_589767\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_589767 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_589767.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_589767 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_589767.next ();\n\n                                       // check object __DEC_message_message_589767 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_589767 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_589767 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_589767.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_589767 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_589767.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_guard is really bound\n                              JavaSDM.ensure ( _edge_guard != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_guard to operand\n                              JavaSDM.ensure (operand.equals (_edge_guard.getSrc ()\n                              ));\n\n                              // check link trg from _edge_guard to guard\n                              JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_66(EMoflonEdge _edge_guard);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_643469 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_97927 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_712857 = null;\n      Interaction __DEC_operand_enclosingInteraction_229409 = null;\n      InteractionOperand __DEC_combo_fragment_844242 = null;\n      InteractionOperand __DEC_messageReceive_fragment_81837 = null;\n      InteractionOperand __DEC_messageSend_fragment_757877 = null;\n      InteractionOperand __DEC_operand_fragment_36377 = null;\n      Constraint __DEC_spec_specification_241409 = null;\n      InteractionOperand __DEC_guard_guard_226656 = null;\n      CombinedFragment __DEC_operand_operand_102513 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_718438 = null;\n      Message __DEC_messageReceive_receiveEvent_718438 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_624321 = null;\n      Message __DEC_messageSend_receiveEvent_624321 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_377157 = null;\n      Message __DEC_messageReceive_sendEvent_377157 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_598717 = null;\n      Message __DEC_messageSend_sendEvent_598717 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_902233 = null;\n      MessageEnd __DEC_message_message_902233 = null;\n      Match match = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionOperand parentOperand = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      InteractionConstraint guard = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_specification is really bound\n         JavaSDM.ensure ( _edge_specification != null );\n         // bind object\n         _TmpObject = _edge_specification.getSrc ();\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n\n         // bind object\n         operand = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(guard.equals(operand.getGuard()));\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         parentOperand = combo.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check isomorphic binding between objects parentOperand and operand \n         JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n         // bind object\n         _TmpObject = _edge_specification.getTrg ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link specification from spec to guard\n         JavaSDM.ensure (guard.equals (spec.eContainer()\n         ));\n\n         // iterate to-many link fragment from parentOperand to messageSend\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n               // iterate to-many link fragment from parentOperand to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n               while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // bind object\n                     message = messageReceive.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from messageSend to message\n                     JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // bind object\n                     parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n                     // check object parentCombo is really bound\n                     JavaSDM.ensure ( parentCombo != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n                     // check isomorphic binding between objects parentCombo and combo \n                     JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                     // iterate to-many link covered from operand to line\n                     fujaba__Success = false;\n\n                     fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n                     while ( fujaba__IterOperandToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // bind object\n                           interaction = line.getInteraction ();\n\n                           // check object interaction is really bound\n                           JavaSDM.ensure ( interaction != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link covered from parentCombo to line\n                           JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                           // check link covered from line to parentOperand\n                           JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_643469 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_643469 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_643469 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_643469 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_643469.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_97927 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_97927 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_97927 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_97927 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_97927.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_712857 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_712857 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_712857 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_712857 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_712857.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_229409 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_229409 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_229409 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_229409 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_229409.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_844242 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_844242 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_844242 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_844242 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_844242.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_844242 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_844242.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_81837 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_81837 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_81837 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_81837 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_81837.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_81837 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_81837.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_757877 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_757877 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_757877 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_757877 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_757877.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_757877 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_757877.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_36377 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_36377 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_36377 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_36377 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_36377.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_36377 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_36377.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_241409 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_241409 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_241409 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_241409.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_241409 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_241409.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_226656 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_226656 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_226656 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_226656.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_226656 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_226656.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_226656 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_226656.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_102513 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_102513 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_102513 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_102513.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_102513 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_102513.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_102513 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_102513.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_718438\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_718438 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_718438.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_718438 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_718438.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_718438 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_718438 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_718438 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_718438.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_624321\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_624321 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_624321.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_624321 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_624321.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_624321 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_624321 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_624321 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_624321.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_377157\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_377157 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_377157.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_377157 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_377157.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_377157 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_377157 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_377157 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_377157.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_598717\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_598717 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_598717.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_598717 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_598717.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_598717 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_598717 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_598717 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_598717.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_902233\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_902233 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_902233.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_902233 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_902233.next ();\n\n                                       // check object __DEC_message_message_902233 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_902233 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_902233 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_902233.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_902233 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_902233.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_specification is really bound\n                              JavaSDM.ensure ( _edge_specification != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_specification to guard\n                              JavaSDM.ensure (guard.equals (_edge_specification.getSrc ()\n                              ));\n\n                              // check link trg from _edge_specification to spec\n                              JavaSDM.ensure (spec.equals (_edge_specification.getTrg ()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_67(
			EMoflonEdge _edge_specification);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_100631 = null;\n      NormalStep __DEC_alt_stepAlternative_174993 = null;\n      Flow __DEC_step_steps_173615 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_159834 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_159834 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      Actor actor = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_steps is really bound\n         JavaSDM.ensure ( _edge_steps != null );\n         // bind object\n         _TmpObject = _edge_steps.getSrc ();\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_steps.getTrg ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // check link steps from step to flow\n         JavaSDM.ensure (flow.equals (step.eContainer()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_100631 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_100631 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_100631 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_100631.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_100631 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_100631.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_174993 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_174993 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_174993 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_174993.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_174993 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_174993.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_173615 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_173615 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_173615 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_173615.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_173615 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_173615.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_173615 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_173615.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_159834\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_159834 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_159834.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_159834 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_159834.next ();\n\n                           // check object __DEC_altFlow_ref_159834 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_159834 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_159834 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_159834.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_steps is really bound\n                  JavaSDM.ensure ( _edge_steps != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_steps to flow\n                  JavaSDM.ensure (flow.equals (_edge_steps.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_steps to step\n                  JavaSDM.ensure (step.equals (_edge_steps.getTrg ()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_16(EMoflonEdge _edge_steps);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_420627 = null;\n      NormalStep __DEC_alt_stepAlternative_311545 = null;\n      Flow __DEC_step_steps_528507 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_901277 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_901277 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      UseCase useCase = null;\n      NamedFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_actor is really bound\n         JavaSDM.ensure ( _edge_actor != null );\n         // bind object\n         _TmpObject = _edge_actor.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof NamedFlow ? (NamedFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof NamedFlow );\n         flow = (NamedFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // check link trg from _edge_actor to actor\n         JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // check isomorphic binding between objects flow and altFlow \n               JavaSDM.ensure ( !flow.equals (altFlow) );\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_420627 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_420627 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_420627 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_420627.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_420627 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_420627.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_311545 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_311545 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_311545 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_311545.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_311545 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_311545.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_528507 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_528507 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_528507 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_528507.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_528507 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_528507.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_528507 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_528507.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_901277\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_901277 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_901277.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_901277 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_901277.next ();\n\n                           // check object __DEC_altFlow_ref_901277 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_901277 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_901277 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_901277.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_actor is really bound\n                  JavaSDM.ensure ( _edge_actor != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check isomorphic binding between objects flow and altFlow \n                  JavaSDM.ensure ( !flow.equals (altFlow) );\n\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_actor to step\n                  JavaSDM.ensure (step.equals (_edge_actor.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_actor to actor\n                  JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_17(EMoflonEdge _edge_actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_421506 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_491080 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_880697 = null;\n      Interaction __DEC_operand_enclosingInteraction_756566 = null;\n      InteractionOperand __DEC_combo_fragment_348128 = null;\n      InteractionOperand __DEC_messageReceive_fragment_619463 = null;\n      InteractionOperand __DEC_messageSend_fragment_480939 = null;\n      InteractionOperand __DEC_operand_fragment_866119 = null;\n      Constraint __DEC_spec_specification_436360 = null;\n      InteractionOperand __DEC_guard_guard_565507 = null;\n      CombinedFragment __DEC_operand_operand_929037 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_90505 = null;\n      Message __DEC_messageReceive_receiveEvent_90505 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_817442 = null;\n      Message __DEC_messageSend_receiveEvent_817442 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_990371 = null;\n      Message __DEC_messageReceive_sendEvent_990371 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_606236 = null;\n      Message __DEC_messageSend_sendEvent_606236 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_948299 = null;\n      MessageEnd __DEC_message_message_948299 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sendEvent is really bound\n         JavaSDM.ensure ( _edge_sendEvent != null );\n         // bind object\n         _TmpObject = _edge_sendEvent.getTrg ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link src from _edge_sendEvent to message\n         JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n         ));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_421506 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_421506 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_421506 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_421506 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_421506.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_491080 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_491080 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_491080 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_491080 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_491080.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_880697 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_880697 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_880697 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_880697 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_880697.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_756566 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_756566 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_756566 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_756566 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_756566.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_348128 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_348128 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_348128 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_348128 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_348128.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_348128 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_348128.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_619463 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_619463 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_619463 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_619463 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_619463.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_619463 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_619463.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_480939 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_480939 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_480939 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_480939 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_480939.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_480939 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_480939.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_866119 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_866119 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_866119 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_866119 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_866119.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_866119 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_866119.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_436360 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_436360 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_436360 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_436360.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_436360 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_436360.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_565507 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_565507 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_565507 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_565507.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_565507 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_565507.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_565507 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_565507.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_929037 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_929037 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_929037 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_929037.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_929037 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_929037.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_929037 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_929037.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_90505\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_90505 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_90505.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_90505 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_90505.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_90505 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_90505 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_90505 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_90505.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_817442\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_817442 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_817442.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_817442 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_817442.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_817442 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_817442 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_817442 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_817442.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_990371\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_990371 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_990371.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_990371 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_990371.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_990371 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_990371 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_990371 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_990371.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_606236\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_606236 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_606236.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_606236 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_606236.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_606236 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_606236 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_606236 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_606236.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_948299\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_948299 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_948299.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_948299 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_948299.next ();\n\n                                             // check object __DEC_message_message_948299 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_948299 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_948299 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_948299.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_948299 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_948299.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_sendEvent is really bound\n                                    JavaSDM.ensure ( _edge_sendEvent != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_sendEvent to message\n                                    JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_sendEvent to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_sendEvent.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_68(
			EMoflonEdge _edge_sendEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_774020 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_902844 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_565981 = null;\n      Interaction __DEC_operand_enclosingInteraction_13934 = null;\n      InteractionOperand __DEC_combo_fragment_484641 = null;\n      InteractionOperand __DEC_messageReceive_fragment_117686 = null;\n      InteractionOperand __DEC_messageSend_fragment_985509 = null;\n      InteractionOperand __DEC_operand_fragment_907681 = null;\n      Constraint __DEC_spec_specification_582647 = null;\n      InteractionOperand __DEC_guard_guard_323705 = null;\n      CombinedFragment __DEC_operand_operand_450989 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_136027 = null;\n      Message __DEC_messageReceive_receiveEvent_136027 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_244709 = null;\n      Message __DEC_messageSend_receiveEvent_244709 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_373874 = null;\n      Message __DEC_messageReceive_sendEvent_373874 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_222543 = null;\n      Message __DEC_messageSend_sendEvent_222543 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_788665 = null;\n      MessageEnd __DEC_message_message_788665 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      InteractionOperand parentOperand = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_receiveEvent is really bound\n         JavaSDM.ensure ( _edge_receiveEvent != null );\n         // bind object\n         _TmpObject = _edge_receiveEvent.getTrg ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         parentOperand = messageReceive.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // check link src from _edge_receiveEvent to message\n         JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to combo\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     interaction = line.getInteraction ();\n\n                     // check object interaction is really bound\n                     JavaSDM.ensure ( interaction != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_774020 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_774020 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_774020 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_774020 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_774020.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_902844 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_902844 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_902844 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_902844 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_902844.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_565981 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_565981 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_565981 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_565981 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_565981.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_13934 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_13934 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_13934 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_13934 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_13934.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_484641 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_484641 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_484641 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_484641 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_484641.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_484641 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_484641.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_117686 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_117686 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_117686 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_117686 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_117686.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_117686 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_117686.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_985509 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_985509 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_985509 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_985509 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_985509.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_985509 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_985509.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_907681 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_907681 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_907681 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_907681 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_907681.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_907681 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_907681.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_582647 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_582647 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_582647 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_582647.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_582647 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_582647.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_323705 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_323705 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_323705 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_323705.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_323705 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_323705.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_323705 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_323705.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_450989 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_450989 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_450989 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_450989.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_450989 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_450989.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_450989 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_450989.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_136027\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_136027 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_136027.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_136027 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_136027.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_136027 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_136027 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_136027 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_136027.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_244709\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_244709 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_244709.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_244709 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_244709.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_244709 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_244709 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_244709 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_244709.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_373874\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_373874 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_373874.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_373874 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_373874.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_373874 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_373874 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_373874 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_373874.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_222543\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_222543 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_222543.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_222543 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_222543.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_222543 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_222543 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_222543 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_222543.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_788665\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_788665 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_788665.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_788665 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_788665.next ();\n\n                                             // check object __DEC_message_message_788665 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_788665 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_788665 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_788665.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_788665 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_788665.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_receiveEvent is really bound\n                                    JavaSDM.ensure ( _edge_receiveEvent != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_receiveEvent to message\n                                    JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_receiveEvent to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_69(
			EMoflonEdge _edge_receiveEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_311568 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_727797 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_743353 = null;\n      Interaction __DEC_operand_enclosingInteraction_548522 = null;\n      InteractionOperand __DEC_combo_fragment_358334 = null;\n      InteractionOperand __DEC_messageReceive_fragment_212530 = null;\n      InteractionOperand __DEC_messageSend_fragment_446525 = null;\n      InteractionOperand __DEC_operand_fragment_444556 = null;\n      Constraint __DEC_spec_specification_193221 = null;\n      InteractionOperand __DEC_guard_guard_381981 = null;\n      CombinedFragment __DEC_operand_operand_654471 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_625364 = null;\n      Message __DEC_messageReceive_receiveEvent_625364 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_145793 = null;\n      Message __DEC_messageSend_receiveEvent_145793 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_298590 = null;\n      Message __DEC_messageReceive_sendEvent_298590 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_372261 = null;\n      Message __DEC_messageSend_sendEvent_372261 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_967952 = null;\n      MessageEnd __DEC_message_message_967952 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_interaction is really bound\n         JavaSDM.ensure ( _edge_interaction != null );\n         // bind object\n         _TmpObject = _edge_interaction.getSrc ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link trg from _edge_interaction to interaction\n         JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n         ));\n\n         // iterate to-many link fragment from parentOperand to combo\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n         while ( fujaba__IterParentOperandToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // bind object\n               parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n               // check object parentCombo is really bound\n               JavaSDM.ensure ( parentCombo != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n               // check isomorphic binding between objects parentCombo and combo \n               JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n               // iterate to-many link covered from parentOperand to line\n               fujaba__Success = false;\n\n               fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n               while ( fujaba__IterParentOperandToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check link lifeline from line to interaction\n                     JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                     ));\n\n                     // check link covered from parentCombo to line\n                     JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // check isomorphic binding between objects parentOperand and operand \n                           JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_enclosingInteraction_311568 = combo.getEnclosingInteraction ();\n\n                                 // check object __DEC_combo_enclosingInteraction_311568 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_enclosingInteraction_311568 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_enclosingInteraction_311568 and interaction \n                                 JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_311568.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_enclosingInteraction_727797 = messageReceive.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageReceive_enclosingInteraction_727797 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_727797 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_727797 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_727797.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_enclosingInteraction_743353 = messageSend.getEnclosingInteraction ();\n\n                                 // check object __DEC_messageSend_enclosingInteraction_743353 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_743353 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_743353 and interaction \n                                 JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_743353.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_548522 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_548522 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_548522 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_548522 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_548522.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_358334 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_358334 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_358334 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_358334 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_358334.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_358334 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_358334.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_212530 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_212530 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_212530 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_212530 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_212530.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_212530 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_212530.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_446525 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_446525 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_446525 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_446525 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_446525.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_446525 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_446525.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_444556 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_444556 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_444556 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_444556 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_444556.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_444556 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_444556.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_193221 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_193221 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_193221 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_193221.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_193221 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_193221.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_381981 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_381981 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_381981 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_381981.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_381981 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_381981.equals (operand) );\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_381981 and parentOperand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_381981.equals (parentOperand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_654471 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_654471 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_654471 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_654471.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_654471 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_654471.equals (combo) );\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_654471 and parentCombo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_654471.equals (parentCombo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_625364\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_625364 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_625364.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_625364 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_625364.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_625364 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_625364 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_625364 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_625364.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_145793\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_145793 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_145793.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_145793 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_145793.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_145793 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_145793 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_145793 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_145793.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_298590\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_298590 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_298590.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_298590 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_298590.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_298590 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_298590 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_298590 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_298590.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_372261\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_372261 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_372261.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_372261 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_372261.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_372261 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_372261 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_372261 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_372261.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_967952\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_967952 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_967952.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_967952 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_967952.next ();\n\n                                       // check object __DEC_message_message_967952 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_967952 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_967952 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_967952.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_967952 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_967952.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_interaction is really bound\n                              JavaSDM.ensure ( _edge_interaction != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object parentCombo is really bound\n                              JavaSDM.ensure ( parentCombo != null );\n                              // check object parentOperand is really bound\n                              JavaSDM.ensure ( parentOperand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects parentCombo and combo \n                              JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check isomorphic binding between objects parentOperand and operand \n                              JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                              // check link fragment from combo to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageReceive to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from messageSend to parentOperand\n                              JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                              ));\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to parentOperand\n                              JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link guard from parentOperand to guard\n                              JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                              )));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link operand from parentOperand to parentCombo\n                              JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                              ));\n\n                              // check link operand from operand to parentCombo\n                              JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                              .contains (parentCombo)));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_interaction to message\n                              JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                              ));\n\n                              // check link trg from _edge_interaction to interaction\n                              JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                              ));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // check link covered from parentCombo to line\n                              JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                              // check link covered from line to parentOperand\n                              JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_70(
			EMoflonEdge _edge_interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_943706 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_299076 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_474961 = null;\n      Interaction __DEC_operand_enclosingInteraction_44766 = null;\n      InteractionOperand __DEC_combo_fragment_651815 = null;\n      InteractionOperand __DEC_messageReceive_fragment_322200 = null;\n      InteractionOperand __DEC_messageSend_fragment_248625 = null;\n      InteractionOperand __DEC_operand_fragment_563836 = null;\n      Constraint __DEC_spec_specification_753545 = null;\n      InteractionOperand __DEC_guard_guard_156502 = null;\n      CombinedFragment __DEC_operand_operand_107924 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_835447 = null;\n      Message __DEC_messageReceive_receiveEvent_835447 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_991084 = null;\n      Message __DEC_messageSend_receiveEvent_991084 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_335467 = null;\n      Message __DEC_messageReceive_sendEvent_335467 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_10645 = null;\n      Message __DEC_messageSend_sendEvent_10645 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_298331 = null;\n      MessageEnd __DEC_message_message_298331 = null;\n      Match match = null;\n      Iterator fujaba__IterMessageTo_edge_interaction = null;\n      EMoflonEdge _edge_interaction = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getTrg ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // check link fragment from messageReceive to parentOperand\n         JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n         ));\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link src from _edge_message to interaction\n         JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n         ));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link lifeline from line to interaction\n               JavaSDM.ensure (interaction.equals (line.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link src from message to _edge_interaction\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo_edge_interaction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterMessageTo_edge_interaction.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_interaction = (EMoflonEdge) fujaba__IterMessageTo_edge_interaction.next ();\n\n                                 // check object _edge_interaction is really bound\n                                 JavaSDM.ensure ( _edge_interaction != null );\n                                 // check isomorphic binding between objects _edge_message and _edge_interaction \n                                 JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                 // check link trg from _edge_interaction to interaction\n                                 JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_943706 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_943706 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_943706 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_943706 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_943706.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_299076 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_299076 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_299076 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_299076 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_299076.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_474961 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_474961 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_474961 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_474961 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_474961.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_44766 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_44766 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_44766 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_44766 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_44766.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_651815 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_651815 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_651815 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_651815 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_651815.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_651815 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_651815.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_322200 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_322200 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_322200 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_322200 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_322200.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_322200 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_322200.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_248625 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_248625 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_248625 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_248625 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_248625.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_248625 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_248625.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_563836 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_563836 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_563836 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_563836 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_563836.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_563836 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_563836.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_753545 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_753545 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_753545 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_753545.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_753545 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_753545.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_156502 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_156502 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_156502 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_156502.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_156502 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_156502.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_156502 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_156502.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_107924 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_107924 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_107924 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_107924.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_107924 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_107924.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_107924 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_107924.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_835447\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_835447 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_835447.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_835447 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_835447.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_835447 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_835447 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_835447 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_835447.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_991084\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_991084 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_991084.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_991084 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_991084.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_991084 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_991084 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_991084 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_991084.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_335467\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_335467 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_335467.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_335467 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_335467.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_335467 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_335467 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_335467 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_335467.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_10645\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_10645 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_10645.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_10645 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_10645.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_10645 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_10645 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_10645 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_10645.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_298331\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_298331 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_298331.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_298331 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_298331.next ();\n\n                                             // check object __DEC_message_message_298331 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_298331 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_298331 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_298331.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_298331 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_298331.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_interaction is really bound\n                                    JavaSDM.ensure ( _edge_interaction != null );\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_message and _edge_interaction \n                                    JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_interaction to message\n                                    JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_message to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_interaction to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_71(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_525670 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_408334 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_108068 = null;\n      Interaction __DEC_operand_enclosingInteraction_381018 = null;\n      InteractionOperand __DEC_combo_fragment_879051 = null;\n      InteractionOperand __DEC_messageReceive_fragment_667085 = null;\n      InteractionOperand __DEC_messageSend_fragment_279604 = null;\n      InteractionOperand __DEC_operand_fragment_438848 = null;\n      Constraint __DEC_spec_specification_655264 = null;\n      InteractionOperand __DEC_guard_guard_298594 = null;\n      CombinedFragment __DEC_operand_operand_62157 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_652328 = null;\n      Message __DEC_messageReceive_receiveEvent_652328 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_679711 = null;\n      Message __DEC_messageSend_receiveEvent_679711 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_955935 = null;\n      Message __DEC_messageReceive_sendEvent_955935 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_129156 = null;\n      Message __DEC_messageSend_sendEvent_129156 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_649186 = null;\n      MessageEnd __DEC_message_message_649186 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageSend.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageReceive = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageReceive to message\n                                 JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_525670 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_525670 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_525670 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_525670 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_525670.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_408334 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_408334 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_408334 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_408334 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_408334.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_108068 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_108068 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_108068 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_108068 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_108068.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_381018 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_381018 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_381018 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_381018 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_381018.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_879051 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_879051 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_879051 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_879051 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_879051.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_879051 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_879051.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_667085 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_667085 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_667085 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_667085 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_667085.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_667085 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_667085.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_279604 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_279604 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_279604 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_279604 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_279604.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_279604 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_279604.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_438848 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_438848 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_438848 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_438848 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_438848.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_438848 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_438848.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_655264 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_655264 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_655264 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_655264.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_655264 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_655264.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_298594 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_298594 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_298594 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_298594.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_298594 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_298594.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_298594 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_298594.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_62157 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_62157 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_62157 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_62157.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_62157 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_62157.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_62157 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_62157.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_652328\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_652328 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_652328.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_652328 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_652328.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_652328 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_652328 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_652328 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_652328.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_679711\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_679711 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_679711.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_679711 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_679711.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_679711 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_679711 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_679711 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_679711.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_955935\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_955935 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_955935.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_955935 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_955935.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_955935 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_955935 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_955935 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_955935.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_129156\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_129156 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_129156.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_129156 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_129156.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_129156 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_129156 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_129156 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_129156.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_649186\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_649186 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_649186.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_649186 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_649186.next ();\n\n                                             // check object __DEC_message_message_649186 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_649186 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_649186 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_649186.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_649186 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_649186.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_72(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      Interaction __DEC_combo_enclosingInteraction_60356 = null;\n      Interaction __DEC_messageReceive_enclosingInteraction_340674 = null;\n      Interaction __DEC_messageSend_enclosingInteraction_764847 = null;\n      Interaction __DEC_operand_enclosingInteraction_75383 = null;\n      InteractionOperand __DEC_combo_fragment_183822 = null;\n      InteractionOperand __DEC_messageReceive_fragment_820173 = null;\n      InteractionOperand __DEC_messageSend_fragment_833842 = null;\n      InteractionOperand __DEC_operand_fragment_895687 = null;\n      Constraint __DEC_spec_specification_217739 = null;\n      InteractionOperand __DEC_guard_guard_439988 = null;\n      CombinedFragment __DEC_operand_operand_93217 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_758405 = null;\n      Message __DEC_messageReceive_receiveEvent_758405 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_498323 = null;\n      Message __DEC_messageSend_receiveEvent_498323 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_122332 = null;\n      Message __DEC_messageReceive_sendEvent_122332 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_596838 = null;\n      Message __DEC_messageSend_sendEvent_596838 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_752705 = null;\n      MessageEnd __DEC_message_message_752705 = null;\n      Match match = null;\n      Iterator fujaba__IterParentOperandToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterParentOperandToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterParentOperandToLine = null;\n      Lifeline line = null;\n      CombinedFragment parentCombo = null;\n      Message message = null;\n      InteractionOperand parentOperand = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         parentOperand = messageReceive.getEnclosingOperand ();\n\n         // check object parentOperand is really bound\n         JavaSDM.ensure ( parentOperand != null );\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // bind object\n         parentCombo = parentOperand.eContainer() instanceof CombinedFragment ? (CombinedFragment) parentOperand.eContainer() : null;\n\n         // check object parentCombo is really bound\n         JavaSDM.ensure ( parentCombo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(parentCombo.getOperand().contains(parentOperand));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link covered from parentOperand to line\n         fujaba__Success = false;\n\n         fujaba__IterParentOperandToLine = new ArrayList(parentOperand.getCovered()).iterator ();\n\n         while ( fujaba__IterParentOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterParentOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link covered from parentCombo to line\n               JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // check isomorphic binding between objects parentOperand and operand \n                     JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from parentOperand to combo\n                     fujaba__Success = false;\n\n                     fujaba__IterParentOperandToCombo = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                     while ( fujaba__IterParentOperandToCombo.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterParentOperandToCombo.next ();\n\n                           // ensure correct type and really bound of object combo\n                           JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                           combo = (CombinedFragment) _TmpObject;\n                           // check isomorphic binding between objects parentCombo and combo \n                           JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // iterate to-many link fragment from parentOperand to messageSend\n                           fujaba__Success = false;\n\n                           fujaba__IterParentOperandToMessageSend = new ArrayList(parentOperand.getFragment()).iterator ();\n\n                           while ( fujaba__IterParentOperandToMessageSend.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterParentOperandToMessageSend.next ();\n\n                                 // ensure correct type and really bound of object messageSend\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_enclosingInteraction_60356 = combo.getEnclosingInteraction ();\n\n                                       // check object __DEC_combo_enclosingInteraction_60356 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_enclosingInteraction_60356 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_enclosingInteraction_60356 and interaction \n                                       JavaSDM.ensure ( !__DEC_combo_enclosingInteraction_60356.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_enclosingInteraction_340674 = messageReceive.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageReceive_enclosingInteraction_340674 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_enclosingInteraction_340674 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_enclosingInteraction_340674 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageReceive_enclosingInteraction_340674.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_enclosingInteraction_764847 = messageSend.getEnclosingInteraction ();\n\n                                       // check object __DEC_messageSend_enclosingInteraction_764847 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_enclosingInteraction_764847 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_enclosingInteraction_764847 and interaction \n                                       JavaSDM.ensure ( !__DEC_messageSend_enclosingInteraction_764847.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_75383 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_75383 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_75383 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_75383 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_75383.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_183822 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_183822 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_183822 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_183822 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_183822.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_183822 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_183822.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_820173 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_820173 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_820173 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_820173 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_820173.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_820173 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_820173.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_833842 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_833842 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_833842 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_833842 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_833842.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_833842 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_833842.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_895687 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_895687 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_895687 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_895687 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_895687.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_895687 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_895687.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_217739 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_217739 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_217739 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_217739.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_217739 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_217739.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_439988 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_439988 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_439988 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_439988.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_439988 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_439988.equals (operand) );\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_439988 and parentOperand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_439988.equals (parentOperand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_93217 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_93217 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_93217 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_93217.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_93217 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_93217.equals (combo) );\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_93217 and parentCombo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_93217.equals (parentCombo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_758405\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_758405 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_758405.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_758405 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_758405.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_758405 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_758405 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_758405 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_758405.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_498323\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_498323 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_498323.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_498323 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_498323.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_498323 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_498323 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_498323 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_498323.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_122332\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_122332 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_122332.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_122332 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_122332.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_122332 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_122332 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_122332 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_122332.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_596838\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_596838 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_596838.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_596838 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_596838.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_596838 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_596838 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_596838 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_596838.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_752705\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_752705 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_752705.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_752705 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_752705.next ();\n\n                                             // check object __DEC_message_message_752705 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_752705 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_752705 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_752705.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_752705 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_752705.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object parentCombo is really bound\n                                    JavaSDM.ensure ( parentCombo != null );\n                                    // check object parentOperand is really bound\n                                    JavaSDM.ensure ( parentOperand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects parentCombo and combo \n                                    JavaSDM.ensure ( !parentCombo.equals (combo) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check isomorphic binding between objects parentOperand and operand \n                                    JavaSDM.ensure ( !parentOperand.equals (operand) );\n\n                                    // check link fragment from combo to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (combo.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageReceive to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageReceive.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from messageSend to parentOperand\n                                    JavaSDM.ensure (parentOperand.equals (messageSend.getEnclosingOperand ()\n                                    ));\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (!(interaction.equals (combo.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (!(interaction.equals (messageSend.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to parentOperand\n                                    JavaSDM.ensure (!(parentOperand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link guard from parentOperand to guard\n                                    JavaSDM.ensure (!(guard.equals (parentOperand.getGuard ()\n                                    )));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link operand from parentOperand to parentCombo\n                                    JavaSDM.ensure (parentCombo.equals (parentOperand.eContainer()\n                                    ));\n\n                                    // check link operand from operand to parentCombo\n                                    JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(operand,CombinedFragment.class,\"$eContainer\")\n                                    .contains (parentCombo)));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // check link covered from parentCombo to line\n                                    JavaSDM.ensure (parentCombo.getCovered ().contains (line));\n\n                                    // check link covered from line to parentOperand\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (parentOperand));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,parentOperand,messageSend,messageReceive,line,combo,parentCombo,operand,guard,spec,message,interaction);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_73(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // AltStepNFToComboRule
