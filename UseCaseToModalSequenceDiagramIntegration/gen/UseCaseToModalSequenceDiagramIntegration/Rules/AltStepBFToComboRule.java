/**
 */
package UseCaseToModalSequenceDiagramIntegration.Rules;

import ModalSequenceDiagram.CombinedFragment;
import ModalSequenceDiagram.Constraint;
import ModalSequenceDiagram.Interaction;
import ModalSequenceDiagram.InteractionConstraint;
import ModalSequenceDiagram.InteractionOperand;
import ModalSequenceDiagram.Lifeline;
import ModalSequenceDiagram.LiteralString;
import ModalSequenceDiagram.Message;
import ModalSequenceDiagram.MessageEnd;
import ModalSequenceDiagram.MessageOccurrenceSpecification;
import ModalSequenceDiagram.ModalSequenceDiagramFactory;
import ModalSequenceDiagram.Model;

import TGGLanguage.csp.*;

import TGGRuntime.AbstractRule;
import TGGRuntime.EMoflonEdge;
import TGGRuntime.EObjectContainer;
import TGGRuntime.IsApplicableMatch;
import TGGRuntime.IsApplicableRuleResult;
import TGGRuntime.Match;
import TGGRuntime.PerformRuleResult;
import TGGRuntime.RuleResult;
import TGGRuntime.TGGRuntimeFactory;
import TGGRuntime.TripleMatch;

import UseCaseDSL.Actor;
import UseCaseDSL.AlternativeFlow;
import UseCaseDSL.AlternativeFlowAlternative;
import UseCaseDSL.BasicFlow;
import UseCaseDSL.Flow;
import UseCaseDSL.NamedFlow;
import UseCaseDSL.NormalStep;
import UseCaseDSL.PackageDeclaration;
import UseCaseDSL.ParallelFlow;
import UseCaseDSL.ParallelStep;
import UseCaseDSL.UseCase;
import UseCaseDSL.UseCaseDSLFactory;
import UseCaseDSL.UseCasesModel;

import UseCaseToModalSequenceDiagramIntegration.ActorToLifeline;
import UseCaseToModalSequenceDiagramIntegration.FlowToInteractionFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.NormalStepToMessage;
import UseCaseToModalSequenceDiagramIntegration.PackageDeclarationToPackage;
import UseCaseToModalSequenceDiagramIntegration.ParallelStepToCombinedFragment;
import UseCaseToModalSequenceDiagramIntegration.StepAlternativeToInteractionOperand;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToInteraction;
import UseCaseToModalSequenceDiagramIntegration.UseCaseToModalSequenceDiagramIntegrationFactory;
import UseCaseToModalSequenceDiagramIntegration.UseCasesModelToModel;

import csp.constraints.*;

import de.upb.tools.sdm.*;

import java.util.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EOperation;

import org.moflon.csp.CSPFactoryHelper;
// <-- [user defined imports]
// [user defined imports] -->

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Alt Step BF To Combo Rule</b></em>'.
 * <!-- end-user-doc -->
 *
 *
 * @see UseCaseToModalSequenceDiagramIntegration.Rules.RulesPackage#getAltStepBFToComboRule()
 * @model
 * @generated
 */
public interface AltStepBFToComboRule extends AbstractRule, AltStepToComboRule {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      EMoflonEdge __useCase_flows_flow = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_FWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // create object __step_stepAlternative_alt\n            __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __step_actor_actor\n            __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __alt_ref_altFlow\n            __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __flow_steps_step\n            __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __step_stepAlternative_alt\n            __step_stepAlternative_alt.setName (\"stepAlternative\");\n            // assign attribute __alt_ref_altFlow\n            __alt_ref_altFlow.setName (\"ref\");\n            // assign attribute __flow_steps_step\n            __flow_steps_step.setName (\"steps\");\n            // assign attribute __step_actor_actor\n            __step_actor_actor.setName (\"actor\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_stepAlternative_alt,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,altFlow,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__step_actor_actor,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,alt,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__alt_ref_altFlow,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,step,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__flow_steps_step,\"toBeTranslatedEdges\");\n\n            // create link\n            __flow_steps_step.setSrc( flow);\n\n\n            // create link\n            __flow_steps_step.setTrg( step);\n\n\n            // create link\n            __step_actor_actor.setSrc( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setSrc( step);\n\n\n            // create link\n            __step_stepAlternative_alt.setTrg( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setSrc( alt);\n\n\n            // create link\n            __alt_ref_altFlow.setTrg( altFlow);\n\n\n            // create link\n            __step_actor_actor.setTrg( actor);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // create object __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __useCase_flows_flow\n            __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __useCase_flows_flow\n            __useCase_flows_flow.setName (\"flows\");\n            // assign attribute __packageDeclaration_actors_actor\n            __packageDeclaration_actors_actor.setName (\"actors\");\n            // assign attribute __packageDeclaration_useCases_useCase\n            __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,flow,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,actor,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_useCases_useCase,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,packageDeclaration,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__packageDeclaration_actors_actor,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__useCase_flows_flow,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,useCase,\"contextNodes\");\n\n            // create link\n            __useCase_flows_flow.setTrg( flow);\n\n\n            // create link\n            __useCase_flows_flow.setSrc( useCase);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n            // create link\n            __packageDeclaration_actors_actor.setTrg( actor);\n\n\n            // create link\n            __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n            // create link\n            __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_FWD(Match match, BasicFlow flow, NormalStep step,
			AlternativeFlowAlternative alt, AlternativeFlow altFlow,
			UseCase useCase, Actor actor, PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      BasicFlow flow = null;\n      FlowToInteractionFragment flowToInteraction = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      PackageDeclaration packageDeclaration = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      CombinedFragment combo = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      InteractionOperand operand = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      NormalStepToMessage stepToMessage = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      InteractionConstraint guard = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      LiteralString spec = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge message__sendEvent__messageSend = null;\n      EMoflonEdge line__coveredBy__combo = null;\n      EMoflonEdge interaction__message__message = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge operand__covered__line = null;\n      EMoflonEdge message__receiveEvent__messageReceive = null;\n      EMoflonEdge interaction__fragment__combo = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge messageSend__message__message = null;\n      EMoflonEdge line__coveredBy__messageReceive = null;\n      EMoflonEdge interaction__fragment__messageReceive = null;\n      EMoflonEdge combo__enclosingInteraction__interaction = null;\n      EMoflonEdge messageSend__enclosingInteraction__interaction = null;\n      EMoflonEdge guard__specification__spec = null;\n      EMoflonEdge message__interaction__interaction = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge messageReceive__enclosingInteraction__interaction = null;\n      EMoflonEdge operand__guard__guard = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge combo__operand__operand = null;\n      EMoflonEdge messageReceive__message__message = null;\n      EMoflonEdge interaction__fragment__messageSend = null;\n      EMoflonEdge combo__covered__line = null;\n      EMoflonEdge messageReceive__covered__line = null;\n      EMoflonEdge line__coveredBy__operand = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof BasicFlow );\n         flow = (BasicFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToInteraction\"));\n\n         // ensure correct type and really bound of object flowToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToInteraction = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object combo\n         combo = ModalSequenceDiagramFactory.eINSTANCE.createCombinedFragment();\n\n         // create object message\n         message = ModalSequenceDiagramFactory.eINSTANCE.createMessage();\n\n         // create object messageSend\n         messageSend = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object messageReceive\n         messageReceive = ModalSequenceDiagramFactory.eINSTANCE.createMessageOccurrenceSpecification();\n\n         // create object operand\n         operand = ModalSequenceDiagramFactory.eINSTANCE.createInteractionOperand();\n\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object guard\n         guard = ModalSequenceDiagramFactory.eINSTANCE.createInteractionConstraint();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // create object spec\n         spec = ModalSequenceDiagramFactory.eINSTANCE.createLiteralString();\n\n         // assign attribute combo\n         combo.setInteractionOperator ((ModalSequenceDiagram.InteractionOperatorKind)csp.getValue(\"combo\",\"interactionOperator\"));\n         // assign attribute guard\n         guard.setName ((java.lang.String)csp.getValue(\"guard\",\"name\"));\n         // assign attribute spec\n         spec.setValue ((java.lang.String)csp.getValue(\"spec\",\"value\"));\n         // assign attribute message\n         message.setName ((java.lang.String)csp.getValue(\"message\",\"name\"));\n\n         // create link\n         combo.setEnclosingInteraction( interaction);\n\n\n         // create link\n         message.setInteraction( interaction);\n\n\n         // create link\n         messageSend.setEnclosingInteraction( interaction);\n\n\n         // create link\n         messageReceive.setEnclosingInteraction( interaction);\n\n\n         // create link\n         \tcombo.getOperand().add(operand); // add link\n\n\n         // create link\n         line.getCoveredBy().add(combo);\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageSend,message,\"message\");\n\n         // create link\n         message.setSendEvent( messageSend);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(messageReceive,message,\"message\");\n\n         // create link\n         line.getCoveredBy().add(messageReceive);\n\n\n         // create link\n         message.setReceiveEvent( messageReceive);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         operand.getCovered().add(line);\n\n\n         // create link\n         \toperand.setGuard(guard); // add link to one\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         \tguard.setSpecification(spec); // add link to one\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n\n         // create link\n         stepToMessage.setTarget( message);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"translatedElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToInteraction is really bound\n         JavaSDM.ensure ( flowToInteraction != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToInteraction and actor \n         JavaSDM.ensure ( !flowToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlowToOperand and actorToLine \n         JavaSDM.ensure ( !altFlowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToInteraction and actorToLine \n         JavaSDM.ensure ( !flowToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects packageDeclaration and actorToLine \n         JavaSDM.ensure ( !packageDeclaration.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToInteraction and alt \n         JavaSDM.ensure ( !flowToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects packageDeclaration and alt \n         JavaSDM.ensure ( !packageDeclaration.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToInteraction and altFlow \n         JavaSDM.ensure ( !flowToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlow \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !flowToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !flowToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and alternative1ToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToInteraction and combo \n         JavaSDM.ensure ( !flowToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToInteraction and flow \n         JavaSDM.ensure ( !flowToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToInteraction \n         JavaSDM.ensure ( !guard.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects interaction and flowToInteraction \n         JavaSDM.ensure ( !interaction.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects line and flowToInteraction \n         JavaSDM.ensure ( !line.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects message and flowToInteraction \n         JavaSDM.ensure ( !message.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects messageReceive and flowToInteraction \n         JavaSDM.ensure ( !messageReceive.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects messageSend and flowToInteraction \n         JavaSDM.ensure ( !messageSend.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects operand and flowToInteraction \n         JavaSDM.ensure ( !operand.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToInteraction \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects spec and flowToInteraction \n         JavaSDM.ensure ( !spec.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects step and flowToInteraction \n         JavaSDM.ensure ( !step.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects stepToCombo and flowToInteraction \n         JavaSDM.ensure ( !stepToCombo.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects stepToMessage and flowToInteraction \n         JavaSDM.ensure ( !stepToMessage.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects useCase and flowToInteraction \n         JavaSDM.ensure ( !useCase.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToInteraction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects packageDeclaration and guard \n         JavaSDM.ensure ( !packageDeclaration.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects packageDeclaration and message \n         JavaSDM.ensure ( !packageDeclaration.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects spec and packageDeclaration \n         JavaSDM.ensure ( !spec.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToCombo and packageDeclaration \n         JavaSDM.ensure ( !stepToCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and packageDeclaration \n         JavaSDM.ensure ( !stepToMessage.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_stepAlternative_alt\n         __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__sendEvent__messageSend\n         message__sendEvent__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__combo\n         line__coveredBy__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__message__message\n         interaction__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __flow_steps_step\n         __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __step_actor_actor\n         __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__covered__line\n         operand__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__fragment__combo\n         interaction__fragment__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __alt_ref_altFlow\n         __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__message__message\n         messageSend__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__messageReceive\n         line__coveredBy__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__fragment__messageReceive\n         interaction__fragment__messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__enclosingInteraction__interaction\n         combo__enclosingInteraction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageSend__enclosingInteraction__interaction\n         messageSend__enclosingInteraction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object guard__specification__spec\n         guard__specification__spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object message__interaction__interaction\n         message__interaction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__enclosingInteraction__interaction\n         messageReceive__enclosingInteraction__interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object operand__guard__guard\n         operand__guard__guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__operand__operand\n         combo__operand__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__message__message\n         messageReceive__message__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object interaction__fragment__messageSend\n         interaction__fragment__messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object combo__covered__line\n         combo__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object messageReceive__covered__line\n         messageReceive__covered__line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object line__coveredBy__operand\n         line__coveredBy__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltStepBFToComboRule\");\n         // assign attribute combo__enclosingInteraction__interaction\n         combo__enclosingInteraction__interaction.setName (\"enclosingInteraction\");\n         // assign attribute interaction__fragment__combo\n         interaction__fragment__combo.setName (\"fragment\");\n         // assign attribute messageSend__enclosingInteraction__interaction\n         messageSend__enclosingInteraction__interaction.setName (\"enclosingInteraction\");\n         // assign attribute interaction__fragment__messageSend\n         interaction__fragment__messageSend.setName (\"fragment\");\n         // assign attribute messageReceive__enclosingInteraction__interaction\n         messageReceive__enclosingInteraction__interaction.setName (\"enclosingInteraction\");\n         // assign attribute interaction__fragment__messageReceive\n         interaction__fragment__messageReceive.setName (\"fragment\");\n         // assign attribute __step_stepAlternative_alt\n         __step_stepAlternative_alt.setName (\"stepAlternative\");\n         // assign attribute __alt_ref_altFlow\n         __alt_ref_altFlow.setName (\"ref\");\n         // assign attribute combo__operand__operand\n         combo__operand__operand.setName (\"operand\");\n         // assign attribute line__coveredBy__combo\n         line__coveredBy__combo.setName (\"coveredBy\");\n         // assign attribute combo__covered__line\n         combo__covered__line.setName (\"covered\");\n         // assign attribute line__coveredBy__operand\n         line__coveredBy__operand.setName (\"coveredBy\");\n         // assign attribute operand__covered__line\n         operand__covered__line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute operand__guard__guard\n         operand__guard__guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute guard__specification__spec\n         guard__specification__spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute __flow_steps_step\n         __flow_steps_step.setName (\"steps\");\n         // assign attribute __step_actor_actor\n         __step_actor_actor.setName (\"actor\");\n         // assign attribute message__sendEvent__messageSend\n         message__sendEvent__messageSend.setName (\"sendEvent\");\n         // assign attribute message__receiveEvent__messageReceive\n         message__receiveEvent__messageReceive.setName (\"receiveEvent\");\n         // assign attribute message__interaction__interaction\n         message__interaction__interaction.setName (\"interaction\");\n         // assign attribute interaction__message__message\n         interaction__message__message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute messageSend__message__message\n         messageSend__message__message.setName (\"message\");\n         // assign attribute messageReceive__message__message\n         messageReceive__message__message.setName (\"message\");\n         // assign attribute line__coveredBy__messageReceive\n         line__coveredBy__messageReceive.setName (\"coveredBy\");\n         // assign attribute messageReceive__covered__line\n         messageReceive__covered__line.setName (\"covered\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_stepAlternative_alt,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__sendEvent__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__flow_steps_step,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__step_actor_actor,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__receiveEvent__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__fragment__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__alt_ref_altFlow,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__fragment__messageReceive,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__enclosingInteraction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend__enclosingInteraction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard__specification__spec,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message__interaction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__enclosingInteraction__interaction,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand__guard__guard,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__operand__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__message__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,interaction__fragment__messageSend,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive__covered__line,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,line__coveredBy__operand,\"createdEdges\");\n\n         // create link\n         interaction__message__message.setSrc( interaction);\n\n\n         // create link\n         interaction__fragment__messageReceive.setSrc( interaction);\n\n\n         // create link\n         interaction__fragment__combo.setSrc( interaction);\n\n\n         // create link\n         messageReceive__enclosingInteraction__interaction.setTrg( interaction);\n\n\n         // create link\n         message__interaction__interaction.setTrg( interaction);\n\n\n         // create link\n         combo__enclosingInteraction__interaction.setTrg( interaction);\n\n\n         // create link\n         interaction__fragment__messageSend.setSrc( interaction);\n\n\n         // create link\n         messageSend__enclosingInteraction__interaction.setTrg( interaction);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         line__coveredBy__combo.setTrg( combo);\n\n\n         // create link\n         combo__covered__line.setSrc( combo);\n\n\n         // create link\n         interaction__fragment__combo.setTrg( combo);\n\n\n         // create link\n         combo__enclosingInteraction__interaction.setSrc( combo);\n\n\n         // create link\n         combo__operand__operand.setSrc( combo);\n\n\n         // create link\n         message__sendEvent__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__message__message.setSrc( messageSend);\n\n\n         // create link\n         interaction__fragment__messageSend.setTrg( messageSend);\n\n\n         // create link\n         messageSend__enclosingInteraction__interaction.setSrc( messageSend);\n\n\n         // create link\n         messageReceive__message__message.setSrc( messageReceive);\n\n\n         // create link\n         messageReceive__enclosingInteraction__interaction.setSrc( messageReceive);\n\n\n         // create link\n         interaction__fragment__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         messageReceive__covered__line.setSrc( messageReceive);\n\n\n         // create link\n         line__coveredBy__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __flow_steps_step.setSrc( flow);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         __step_stepAlternative_alt.setSrc( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         __step_actor_actor.setSrc( step);\n\n\n         // create link\n         __flow_steps_step.setTrg( step);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         __alt_ref_altFlow.setSrc( alt);\n\n\n         // create link\n         __step_stepAlternative_alt.setTrg( alt);\n\n\n         // create link\n         operand__covered__line.setTrg( line);\n\n\n         // create link\n         messageReceive__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__operand.setSrc( line);\n\n\n         // create link\n         line__coveredBy__messageReceive.setSrc( line);\n\n\n         // create link\n         combo__covered__line.setTrg( line);\n\n\n         // create link\n         line__coveredBy__combo.setSrc( line);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         line__coveredBy__operand.setTrg( operand);\n\n\n         // create link\n         combo__operand__operand.setTrg( operand);\n\n\n         // create link\n         operand__covered__line.setSrc( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         operand__guard__guard.setSrc( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         guard__specification__spec.setSrc( guard);\n\n\n         // create link\n         operand__guard__guard.setTrg( guard);\n\n\n         // create link\n         guard__specification__spec.setTrg( spec);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         __alt_ref_altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         messageSend__message__message.setTrg( message);\n\n\n         // create link\n         message__receiveEvent__messageReceive.setSrc( message);\n\n\n         // create link\n         interaction__message__message.setTrg( message);\n\n\n         // create link\n         message__interaction__interaction.setSrc( message);\n\n\n         // create link\n         messageReceive__message__message.setTrg( message);\n\n\n         // create link\n         message__sendEvent__messageSend.setSrc( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         __step_actor_actor.setTrg( actor);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_FWD(ruleresult,interaction,combo,flowToInteraction,messageSend,messageReceive,flow,step,alt,line,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,stepToMessage,actor,actorToLine,packageDeclaration);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_FWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      Actor actor = null;\n      AlternativeFlowAlternative alt = null;\n      AlternativeFlow altFlow = null;\n      BasicFlow flow = null;\n      PackageDeclaration packageDeclaration = null;\n      NormalStep step = null;\n      UseCase useCase = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __flowToInteraction_target_interaction = null;\n      EMoflonEdge __flowToInteraction_source_flow = null;\n      EMoflonEdge __flow_steps_step = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __step_stepAlternative_alt = null;\n      EMoflonEdge __step_actor_actor = null;\n      EMoflonEdge __alt_ref_altFlow = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      CSP csp = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterFlowToFlowToInteraction = null;\n      FlowToInteractionFragment flowToInteraction = null;\n      Iterator fujaba__IterUseCaseToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Lifeline line = null;\n      Iterator fujaba__IterActorToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltStepBFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (match.getObject(\"alt\"));\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n         _TmpObject = (match.getObject(\"altFlow\"));\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof BasicFlow );\n         flow = (BasicFlow) _TmpObject;\n         _TmpObject = (match.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (match.getObject(\"step\"));\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n         _TmpObject = (match.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // iterate to-many link source from actor to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterActorToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(actor,ActorToLifeline.class,\"source\")).iterator ();\n\n         while ( fujaba__IterActorToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterActorToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               line = actorToLine.getTarget ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n\n               // iterate to-many link source from useCase to useCaseToInteraction\n               fujaba__Success = false;\n\n               fujaba__IterUseCaseToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(useCase,UseCaseToInteraction.class,\"source\")).iterator ();\n\n               while ( fujaba__IterUseCaseToUseCaseToInteraction.hasNext () )\n               {\n                  try\n                  {\n                     useCaseToInteraction = (UseCaseToInteraction) fujaba__IterUseCaseToUseCaseToInteraction.next ();\n\n                     // check object useCaseToInteraction is really bound\n                     JavaSDM.ensure ( useCaseToInteraction != null );\n                     // iterate to-many link source from flow to flowToInteraction\n                     fujaba__Success = false;\n\n                     fujaba__IterFlowToFlowToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(flow,FlowToInteractionFragment.class,\"source\")).iterator ();\n\n                     while ( fujaba__IterFlowToFlowToInteraction.hasNext () )\n                     {\n                        try\n                        {\n                           flowToInteraction = (FlowToInteractionFragment) fujaba__IterFlowToFlowToInteraction.next ();\n\n                           // check object flowToInteraction is really bound\n                           JavaSDM.ensure ( flowToInteraction != null );\n                           // bind object\n                           _TmpObject = flowToInteraction.getTarget ();\n\n                           // ensure correct type and really bound of object interaction\n                           JavaSDM.ensure ( _TmpObject instanceof Interaction );\n                           interaction = (Interaction) _TmpObject;\n\n                           // check link target from useCaseToInteraction to interaction\n                           JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                           ));\n\n                           // story node \'find context\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object actor is really bound\n                              JavaSDM.ensure ( actor != null );\n                              // check object actorToLine is really bound\n                              JavaSDM.ensure ( actorToLine != null );\n                              // check object alt is really bound\n                              JavaSDM.ensure ( alt != null );\n                              // check object altFlow is really bound\n                              JavaSDM.ensure ( altFlow != null );\n                              // check object flow is really bound\n                              JavaSDM.ensure ( flow != null );\n                              // check object flowToInteraction is really bound\n                              JavaSDM.ensure ( flowToInteraction != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object packageDeclaration is really bound\n                              JavaSDM.ensure ( packageDeclaration != null );\n                              // check object step is really bound\n                              JavaSDM.ensure ( step != null );\n                              // check object useCase is really bound\n                              JavaSDM.ensure ( useCase != null );\n                              // check object useCaseToInteraction is really bound\n                              JavaSDM.ensure ( useCaseToInteraction != null );\n                              // check link actor from step to actor\n                              JavaSDM.ensure (actor.equals (step.getActor ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link ref from alt to altFlow\n                              JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                              ));\n\n                              // check link actors from actor to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                              ));\n\n                              // check link flows from flow to useCase\n                              JavaSDM.ensure (useCase.equals (flow.eContainer()\n                              ));\n\n                              // check link source from actorToLine to actor\n                              JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                              ));\n\n                              // check link source from flowToInteraction to flow\n                              JavaSDM.ensure (flow.equals (flowToInteraction.getSource ()\n                              ));\n\n                              // check link source from useCaseToInteraction to useCase\n                              JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                              ));\n\n                              // check link stepAlternative from alt to step\n                              JavaSDM.ensure (step.equals (alt.eContainer()\n                              ));\n\n                              // check link steps from step to flow\n                              JavaSDM.ensure (flow.equals (step.eContainer()\n                              ));\n\n                              // check link target from actorToLine to line\n                              JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                              ));\n\n                              // check link target from flowToInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (flowToInteraction.getTarget ()\n                              ));\n\n                              // check link target from useCaseToInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                              ));\n\n                              // check link useCases from useCase to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                              ));\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __flowToInteraction_target_interaction\n                              __flowToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToInteraction_source_flow\n                              __flowToInteraction_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flow_steps_step\n                              __flow_steps_step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __step_stepAlternative_alt\n                              __step_stepAlternative_alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __step_actor_actor\n                              __step_actor_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __alt_ref_altFlow\n                              __alt_ref_altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_target_line\n                              __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_source_actor\n                              __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __flowToInteraction_source_flow\n                              __flowToInteraction_source_flow.setName (\"source\");\n                              // assign attribute __flowToInteraction_target_interaction\n                              __flowToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __step_stepAlternative_alt\n                              __step_stepAlternative_alt.setName (\"stepAlternative\");\n                              // assign attribute __alt_ref_altFlow\n                              __alt_ref_altFlow.setName (\"ref\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __flow_steps_step\n                              __flow_steps_step.setName (\"steps\");\n                              // assign attribute __step_actor_actor\n                              __step_actor_actor.setName (\"actor\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n                              // assign attribute __actorToLine_source_actor\n                              __actorToLine_source_actor.setName (\"source\");\n                              // assign attribute __actorToLine_target_line\n                              __actorToLine_target_line.setName (\"target\");\n                              // assign attribute __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor.setName (\"actors\");\n                              // assign attribute __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              __flowToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __flowToInteraction_target_interaction.setSrc( flowToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flowToInteraction);\n\n\n                              // create link\n                              __flowToInteraction_source_flow.setSrc( flowToInteraction);\n\n\n                              // create link\n                              __flow_steps_step.setSrc( flow);\n\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              __flowToInteraction_source_flow.setTrg( flow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(step);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setSrc( step);\n\n\n                              // create link\n                              __flow_steps_step.setTrg( step);\n\n\n                              // create link\n                              __step_actor_actor.setSrc( step);\n\n\n                              // create link\n                              __alt_ref_altFlow.setSrc( alt);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(alt);\n\n\n                              // create link\n                              __step_stepAlternative_alt.setTrg( alt);\n\n\n                              // create link\n                              __actorToLine_target_line.setTrg( line);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              __alt_ref_altFlow.setTrg( altFlow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(altFlow);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __actorToLine_source_actor.setTrg( actor);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                              // create link\n                              __step_actor_actor.setTrg( actor);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __actorToLine_target_line.setSrc( actorToLine);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                              // create link\n                              __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_actor_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__step_stepAlternative_alt,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToInteraction_source_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flow_steps_step,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__alt_ref_altFlow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_FWD(isApplicableMatch,interaction,flowToInteraction,flow,step,alt,line,altFlow,useCase,useCaseToInteraction,actor,actorToLine,packageDeclaration));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_FWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"AltStepBFToComboRule\");\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n\n                                    // create link\n                                    ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"flow\", flow);\nmatch.registerObject(\"step\", step);\nmatch.registerObject(\"alt\", alt);\nmatch.registerObject(\"altFlow\", altFlow);\nmatch.registerObject(\"useCase\", useCase);\nmatch.registerObject(\"actor\", actor);\nmatch.registerObject(\"packageDeclaration\", packageDeclaration);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_FWD(Match match, BasicFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase, Actor actor,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\n\r\n\r\n\r\n\r\n// Solve CSP\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_FWD(Match match, BasicFlow flow,
			NormalStep step, AlternativeFlowAlternative alt,
			AlternativeFlow altFlow, UseCase useCase, Actor actor,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", true, csp);\r\nvar_altFlow_name.setValue(altFlow.getName());\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", true, csp);\r\nvar_alt_condition.setValue(alt.getCondition());\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", true, csp);\r\nvar_step_name.setValue(step.getName());\r\nvar_step_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", csp);\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", csp);\r\nvar_spec_value.setType(\"\");\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", csp);\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", csp);\r\nvar_message_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();EqInterOperKind eqInterOperKind = new EqInterOperKind();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eqInterOperKind);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"flowToInteraction\",flowToInteraction);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"step\",step);\r\nisApplicableMatch.registerObject(\"alt\",alt);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"altFlow\",altFlow);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_FWD(IsApplicableMatch isApplicableMatch,
			Interaction interaction,
			FlowToInteractionFragment flowToInteraction, BasicFlow flow,
			NormalStep step, AlternativeFlowAlternative alt, Lifeline line,
			AlternativeFlow altFlow, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction, Actor actor,
			ActorToLifeline actorToLine, PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_FWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"flowToInteraction\", flowToInteraction);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"actorToLine\", actorToLine);\nruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\n'"
	 * @generated
	 */
	void registerObjects_FWD(PerformRuleResult ruleresult, EObject interaction,
			EObject combo, EObject flowToInteraction, EObject messageSend,
			EObject messageReceive, EObject flow, EObject step, EObject alt,
			EObject line, EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message,
			EObject stepToMessage, EObject actor, EObject actorToLine,
			EObject packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"step\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getNormalStep()) && match.getObject(\"alt\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlowAlternative()) && match.getObject(\"altFlow\").eClass().equals(UseCaseDSL.UseCaseDSLPackage.eINSTANCE.getAlternativeFlow());'"
	 * @generated
	 */
	boolean checkTypes_FWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      CSP csp = null;\n      EMoflonEdge __interaction_fragment_messageReceive = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __combo_enclosingInteraction_interaction = null;\n      EMoflonEdge __line_coveredBy_combo = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __messageReceive_enclosingInteraction_interaction = null;\n      EMoflonEdge __messageSend_enclosingInteraction_interaction = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __interaction_fragment_messageSend = null;\n      EMoflonEdge __messageReceive_covered_line = null;\n      EMoflonEdge __combo_covered_line = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __interaction_fragment_combo = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __line_coveredBy_messageReceive = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __line_interaction_interaction = null;\n\n      // story node \'initial bindings\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'Solve CSP\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.isAppropriate_solveCsp_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message));\n\n         // ensure correct type and really bound of object csp\n         JavaSDM.ensure ( _TmpObject instanceof CSP );\n         csp = (CSP) _TmpObject;\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'Check CSP\'\n      fujaba__Success = this.isAppropriate_checkCsp_BWD(csp);\n      if (fujaba__Success)\n      {\n         // story node \'collect elements to be translated\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // create object __interaction_fragment_messageReceive\n            __interaction_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_enclosingInteraction_interaction\n            __combo_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_combo\n            __line_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_message_message\n            __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_interaction_interaction\n            __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_operand_operand\n            __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_enclosingInteraction_interaction\n            __messageReceive_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_enclosingInteraction_interaction\n            __messageSend_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageSend_message_message\n            __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_covered_line\n            __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __guard_specification_spec\n            __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_fragment_messageSend\n            __interaction_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __messageReceive_covered_line\n            __messageReceive_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __combo_covered_line\n            __combo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_operand\n            __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_message_message\n            __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __interaction_fragment_combo\n            __interaction_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __message_sendEvent_messageSend\n            __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_coveredBy_messageReceive\n            __line_coveredBy_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __operand_guard_guard\n            __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __combo_enclosingInteraction_interaction\n            __combo_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n            // assign attribute __interaction_fragment_combo\n            __interaction_fragment_combo.setName (\"fragment\");\n            // assign attribute __messageSend_enclosingInteraction_interaction\n            __messageSend_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n            // assign attribute __interaction_fragment_messageSend\n            __interaction_fragment_messageSend.setName (\"fragment\");\n            // assign attribute __messageReceive_enclosingInteraction_interaction\n            __messageReceive_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n            // assign attribute __interaction_fragment_messageReceive\n            __interaction_fragment_messageReceive.setName (\"fragment\");\n            // assign attribute __combo_operand_operand\n            __combo_operand_operand.setName (\"operand\");\n            // assign attribute __line_coveredBy_combo\n            __line_coveredBy_combo.setName (\"coveredBy\");\n            // assign attribute __combo_covered_line\n            __combo_covered_line.setName (\"covered\");\n            // assign attribute __line_coveredBy_operand\n            __line_coveredBy_operand.setName (\"coveredBy\");\n            // assign attribute __operand_covered_line\n            __operand_covered_line.setName (\"covered\");\n            // assign attribute __operand_guard_guard\n            __operand_guard_guard.setName (\"guard\");\n            // assign attribute __guard_specification_spec\n            __guard_specification_spec.setName (\"specification\");\n            // assign attribute __message_sendEvent_messageSend\n            __message_sendEvent_messageSend.setName (\"sendEvent\");\n            // assign attribute __message_receiveEvent_messageReceive\n            __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n            // assign attribute __message_interaction_interaction\n            __message_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_message_message\n            __interaction_message_message.setName (\"message\");\n            // assign attribute __messageSend_message_message\n            __messageSend_message_message.setName (\"message\");\n            // assign attribute __messageReceive_message_message\n            __messageReceive_message_message.setName (\"message\");\n            // assign attribute __line_coveredBy_messageReceive\n            __line_coveredBy_messageReceive.setName (\"coveredBy\");\n            // assign attribute __messageReceive_covered_line\n            __messageReceive_covered_line.setName (\"covered\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_fragment_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,combo,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_receiveEvent_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_enclosingInteraction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_interaction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,guard,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageReceive,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_operand_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,message,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,operand,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_enclosingInteraction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,messageSend,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,spec,\"toBeTranslatedNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_enclosingInteraction_interaction,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageSend_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__guard_specification_spec,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_fragment_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__messageReceive_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__combo_covered_line,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_operand,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_message_message,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_fragment_combo,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__message_sendEvent_messageSend,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_coveredBy_messageReceive,\"toBeTranslatedEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__operand_guard_guard,\"toBeTranslatedEdges\");\n\n            // create link\n            __interaction_fragment_combo.setSrc( interaction);\n\n\n            // create link\n            __messageSend_enclosingInteraction_interaction.setTrg( interaction);\n\n\n            // create link\n            __messageReceive_enclosingInteraction_interaction.setTrg( interaction);\n\n\n            // create link\n            __interaction_fragment_messageReceive.setSrc( interaction);\n\n\n            // create link\n            __combo_enclosingInteraction_interaction.setTrg( interaction);\n\n\n            // create link\n            __interaction_fragment_messageSend.setSrc( interaction);\n\n\n            // create link\n            __interaction_message_message.setSrc( interaction);\n\n\n            // create link\n            __message_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __line_coveredBy_combo.setTrg( combo);\n\n\n            // create link\n            __interaction_fragment_combo.setTrg( combo);\n\n\n            // create link\n            __combo_enclosingInteraction_interaction.setSrc( combo);\n\n\n            // create link\n            __combo_covered_line.setSrc( combo);\n\n\n            // create link\n            __combo_operand_operand.setSrc( combo);\n\n\n            // create link\n            __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageSend_message_message.setSrc( messageSend);\n\n\n            // create link\n            __messageSend_enclosingInteraction_interaction.setSrc( messageSend);\n\n\n            // create link\n            __interaction_fragment_messageSend.setTrg( messageSend);\n\n\n            // create link\n            __messageReceive_covered_line.setSrc( messageReceive);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __interaction_fragment_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __messageReceive_enclosingInteraction_interaction.setSrc( messageReceive);\n\n\n            // create link\n            __messageReceive_message_message.setSrc( messageReceive);\n\n\n            // create link\n            __line_coveredBy_messageReceive.setTrg( messageReceive);\n\n\n            // create link\n            __line_coveredBy_messageReceive.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_operand.setSrc( line);\n\n\n            // create link\n            __line_coveredBy_combo.setSrc( line);\n\n\n            // create link\n            __combo_covered_line.setTrg( line);\n\n\n            // create link\n            __messageReceive_covered_line.setTrg( line);\n\n\n            // create link\n            __operand_covered_line.setTrg( line);\n\n\n            // create link\n            __operand_covered_line.setSrc( operand);\n\n\n            // create link\n            __line_coveredBy_operand.setTrg( operand);\n\n\n            // create link\n            __combo_operand_operand.setTrg( operand);\n\n\n            // create link\n            __operand_guard_guard.setSrc( operand);\n\n\n            // create link\n            __guard_specification_spec.setSrc( guard);\n\n\n            // create link\n            __operand_guard_guard.setTrg( guard);\n\n\n            // create link\n            __guard_specification_spec.setTrg( spec);\n\n\n            // create link\n            __message_receiveEvent_messageReceive.setSrc( message);\n\n\n            // create link\n            __messageReceive_message_message.setTrg( message);\n\n\n            // create link\n            __interaction_message_message.setTrg( message);\n\n\n            // create link\n            __message_interaction_interaction.setSrc( message);\n\n\n            // create link\n            __message_sendEvent_messageSend.setSrc( message);\n\n\n            // create link\n            __messageSend_message_message.setTrg( message);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // story node \'collect context elements\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check object combo is really bound\n            JavaSDM.ensure ( combo != null );\n            // check object guard is really bound\n            JavaSDM.ensure ( guard != null );\n            // check object interaction is really bound\n            JavaSDM.ensure ( interaction != null );\n            // check object line is really bound\n            JavaSDM.ensure ( line != null );\n            // check object match is really bound\n            JavaSDM.ensure ( match != null );\n            // check object message is really bound\n            JavaSDM.ensure ( message != null );\n            // check object messageReceive is really bound\n            JavaSDM.ensure ( messageReceive != null );\n            // check object messageSend is really bound\n            JavaSDM.ensure ( messageSend != null );\n            // check object operand is really bound\n            JavaSDM.ensure ( operand != null );\n            // check object spec is really bound\n            JavaSDM.ensure ( spec != null );\n            // check isomorphic binding between objects messageSend and messageReceive \n            JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n            // create object __interaction_lifeline_line\n            __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // create object __line_interaction_interaction\n            __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n            // assign attribute __line_interaction_interaction\n            __line_interaction_interaction.setName (\"interaction\");\n            // assign attribute __interaction_lifeline_line\n            __interaction_lifeline_line.setName (\"lifeline\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__interaction_lifeline_line,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__line_interaction_interaction,\"contextEdges\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,line,\"contextNodes\");\n\n            // create link\n            org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,interaction,\"contextNodes\");\n\n            // create link\n            __interaction_lifeline_line.setSrc( interaction);\n\n\n            // create link\n            __line_interaction_interaction.setTrg( interaction);\n\n\n            // create link\n            __line_interaction_interaction.setSrc( line);\n\n\n            // create link\n            __interaction_lifeline_line.setTrg( line);\n\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n         // statement node \'register objects to match\'\n         this.registerObjectsToMatch_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n         return true;\n\n      }\n      else\n      {\n         return false;\n\n      }'"
	 * @generated
	 */
	boolean isAppropriate_BWD(Match match, Interaction interaction,
			CombinedFragment combo, MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      Actor actor = null;\n      ActorToLifeline actorToLine = null;\n      CombinedFragment combo = null;\n      BasicFlow flow = null;\n      FlowToInteractionFragment flowToInteraction = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      PackageDeclaration packageDeclaration = null;\n      LiteralString spec = null;\n      UseCase useCase = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      Iterator fujaba__IterIsApplicableMatchToCsp = null;\n      CSP csp = null;\n      NormalStepToCombinedFragment stepToCombo = null;\n      NormalStep step = null;\n      AlternativeFlowAlternative alt = null;\n      NormalStepToMessage stepToMessage = null;\n      AlternativeFlow altFlow = null;\n      StepAlternativeToInteractionOperand alternative1ToOperand = null;\n      FlowToInteractionFragment altFlowToOperand = null;\n      PerformRuleResult ruleresult = null;\n      EMoflonEdge __messageReceive_covered_line = null;\n      EMoflonEdge step__stepAlternative__alt = null;\n      EMoflonEdge __messageReceive_enclosingInteraction_interaction = null;\n      EMoflonEdge alternative1ToOperand__target__operand = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge altFlowToOperand__source__altFlow = null;\n      EMoflonEdge alt__ref__altFlow = null;\n      EMoflonEdge __messageSend_enclosingInteraction_interaction = null;\n      EMoflonEdge stepToMessage__target__message = null;\n      EMoflonEdge __combo_covered_line = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __interaction_fragment_combo = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge altFlowToOperand__target__operand = null;\n      EMoflonEdge __interaction_fragment_messageReceive = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __interaction_fragment_messageSend = null;\n      EMoflonEdge __line_coveredBy_messageReceive = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge stepToCombo__source__step = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __line_coveredBy_combo = null;\n      EMoflonEdge __combo_enclosingInteraction_interaction = null;\n      EMoflonEdge flow__steps__step = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge stepToMessage__source__step = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge stepToCombo__target__combo = null;\n      EMoflonEdge step__actor__actor = null;\n      EMoflonEdge alternative1ToOperand__source__alt = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n\n      // story node \'perform transformation\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (isApplicableMatch.getObject(\"actor\"));\n\n         // ensure correct type and really bound of object actor\n         JavaSDM.ensure ( _TmpObject instanceof Actor );\n         actor = (Actor) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"actorToLine\"));\n\n         // ensure correct type and really bound of object actorToLine\n         JavaSDM.ensure ( _TmpObject instanceof ActorToLifeline );\n         actorToLine = (ActorToLifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flow\"));\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof BasicFlow );\n         flow = (BasicFlow) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"flowToInteraction\"));\n\n         // ensure correct type and really bound of object flowToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof FlowToInteractionFragment );\n         flowToInteraction = (FlowToInteractionFragment) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"packageDeclaration\"));\n\n         // ensure correct type and really bound of object packageDeclaration\n         JavaSDM.ensure ( _TmpObject instanceof PackageDeclaration );\n         packageDeclaration = (PackageDeclaration) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCase\"));\n\n         // ensure correct type and really bound of object useCase\n         JavaSDM.ensure ( _TmpObject instanceof UseCase );\n         useCase = (UseCase) _TmpObject;\n         _TmpObject = (isApplicableMatch.getObject(\"useCaseToInteraction\"));\n\n         // ensure correct type and really bound of object useCaseToInteraction\n         JavaSDM.ensure ( _TmpObject instanceof UseCaseToInteraction );\n         useCaseToInteraction = (UseCaseToInteraction) _TmpObject;\n         // check object isApplicableMatch is really bound\n         JavaSDM.ensure ( isApplicableMatch != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // iterate to-many link attributeInfo from isApplicableMatch to csp\n         fujaba__Success = false;\n\n         fujaba__IterIsApplicableMatchToCsp = isApplicableMatch.getAttributeInfo().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterIsApplicableMatchToCsp.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterIsApplicableMatchToCsp.next ();\n\n               // ensure correct type and really bound of object csp\n               JavaSDM.ensure ( _TmpObject instanceof CSP );\n               csp = (CSP) _TmpObject;\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object stepToCombo\n         stepToCombo = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToCombinedFragment();\n\n         // create object step\n         step = UseCaseDSLFactory.eINSTANCE.createNormalStep();\n\n         // create object alt\n         alt = UseCaseDSLFactory.eINSTANCE.createAlternativeFlowAlternative();\n\n         // create object stepToMessage\n         stepToMessage = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createNormalStepToMessage();\n\n         // create object altFlow\n         altFlow = UseCaseDSLFactory.eINSTANCE.createAlternativeFlow();\n\n         // create object alternative1ToOperand\n         alternative1ToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createStepAlternativeToInteractionOperand();\n\n         // create object altFlowToOperand\n         altFlowToOperand = UseCaseToModalSequenceDiagramIntegrationFactory.eINSTANCE.createFlowToInteractionFragment();\n\n         // assign attribute step\n         step.setName ((java.lang.String)csp.getValue(\"step\",\"name\"));\n         // assign attribute alt\n         alt.setCondition ((java.lang.String)csp.getValue(\"alt\",\"condition\"));\n         // assign attribute altFlow\n         altFlow.setName ((java.lang.String)csp.getValue(\"altFlow\",\"name\"));\n\n         // create link\n         stepToMessage.setTarget( message);\n\n\n         // create link\n         stepToCombo.setTarget( combo);\n\n\n         // create link\n         \tflow.getSteps().add(step); // add link\n\n\n         // create link\n         \tstep.getStepAlternative().add(alt); // add link\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(step,actor,\"actor\");\n\n         // create link\n         stepToCombo.setSource( step);\n\n\n         // create link\n         stepToMessage.setSource( step);\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(alt,altFlow,\"ref\");\n\n         // create link\n         alternative1ToOperand.setSource( alt);\n\n\n         // create link\n         alternative1ToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setTarget( operand);\n\n\n         // create link\n         altFlowToOperand.setSource( altFlow);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'collect translated elements\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createPerformRuleResult();\n\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,message,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageSend,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,spec,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,combo,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlow,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,messageReceive,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,guard,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand,\"createdLinkElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,operand,\"translatedElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step,\"createdElements\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt,\"createdElements\");\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'bookkeeping for edges\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n         // check object actorToLine is really bound\n         JavaSDM.ensure ( actorToLine != null );\n         // check object alt is really bound\n         JavaSDM.ensure ( alt != null );\n         // check object altFlow is really bound\n         JavaSDM.ensure ( altFlow != null );\n         // check object altFlowToOperand is really bound\n         JavaSDM.ensure ( altFlowToOperand != null );\n         // check object alternative1ToOperand is really bound\n         JavaSDM.ensure ( alternative1ToOperand != null );\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n         // check object flow is really bound\n         JavaSDM.ensure ( flow != null );\n         // check object flowToInteraction is really bound\n         JavaSDM.ensure ( flowToInteraction != null );\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n         // check object line is really bound\n         JavaSDM.ensure ( line != null );\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n         // check object messageReceive is really bound\n         JavaSDM.ensure ( messageReceive != null );\n         // check object messageSend is really bound\n         JavaSDM.ensure ( messageSend != null );\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n         // check object ruleresult is really bound\n         JavaSDM.ensure ( ruleresult != null );\n         // check object spec is really bound\n         JavaSDM.ensure ( spec != null );\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n         // check object stepToCombo is really bound\n         JavaSDM.ensure ( stepToCombo != null );\n         // check object stepToMessage is really bound\n         JavaSDM.ensure ( stepToMessage != null );\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n         // check object useCaseToInteraction is really bound\n         JavaSDM.ensure ( useCaseToInteraction != null );\n         // check isomorphic binding between objects actorToLine and actor \n         JavaSDM.ensure ( !actorToLine.equals (actor) );\n\n         // check isomorphic binding between objects alt and actor \n         JavaSDM.ensure ( !alt.equals (actor) );\n\n         // check isomorphic binding between objects altFlow and actor \n         JavaSDM.ensure ( !altFlow.equals (actor) );\n\n         // check isomorphic binding between objects altFlowToOperand and actor \n         JavaSDM.ensure ( !altFlowToOperand.equals (actor) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actor \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actor) );\n\n         // check isomorphic binding between objects combo and actor \n         JavaSDM.ensure ( !combo.equals (actor) );\n\n         // check isomorphic binding between objects flow and actor \n         JavaSDM.ensure ( !flow.equals (actor) );\n\n         // check isomorphic binding between objects flowToInteraction and actor \n         JavaSDM.ensure ( !flowToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects guard and actor \n         JavaSDM.ensure ( !guard.equals (actor) );\n\n         // check isomorphic binding between objects interaction and actor \n         JavaSDM.ensure ( !interaction.equals (actor) );\n\n         // check isomorphic binding between objects line and actor \n         JavaSDM.ensure ( !line.equals (actor) );\n\n         // check isomorphic binding between objects message and actor \n         JavaSDM.ensure ( !message.equals (actor) );\n\n         // check isomorphic binding between objects messageReceive and actor \n         JavaSDM.ensure ( !messageReceive.equals (actor) );\n\n         // check isomorphic binding between objects messageSend and actor \n         JavaSDM.ensure ( !messageSend.equals (actor) );\n\n         // check isomorphic binding between objects operand and actor \n         JavaSDM.ensure ( !operand.equals (actor) );\n\n         // check isomorphic binding between objects packageDeclaration and actor \n         JavaSDM.ensure ( !packageDeclaration.equals (actor) );\n\n         // check isomorphic binding between objects spec and actor \n         JavaSDM.ensure ( !spec.equals (actor) );\n\n         // check isomorphic binding between objects step and actor \n         JavaSDM.ensure ( !step.equals (actor) );\n\n         // check isomorphic binding between objects stepToCombo and actor \n         JavaSDM.ensure ( !stepToCombo.equals (actor) );\n\n         // check isomorphic binding between objects stepToMessage and actor \n         JavaSDM.ensure ( !stepToMessage.equals (actor) );\n\n         // check isomorphic binding between objects useCase and actor \n         JavaSDM.ensure ( !useCase.equals (actor) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actor \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actor) );\n\n         // check isomorphic binding between objects alt and actorToLine \n         JavaSDM.ensure ( !alt.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and actorToLine \n         JavaSDM.ensure ( !altFlow.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlowToOperand and actorToLine \n         JavaSDM.ensure ( !altFlowToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects alternative1ToOperand and actorToLine \n         JavaSDM.ensure ( !alternative1ToOperand.equals (actorToLine) );\n\n         // check isomorphic binding between objects combo and actorToLine \n         JavaSDM.ensure ( !combo.equals (actorToLine) );\n\n         // check isomorphic binding between objects flow and actorToLine \n         JavaSDM.ensure ( !flow.equals (actorToLine) );\n\n         // check isomorphic binding between objects flowToInteraction and actorToLine \n         JavaSDM.ensure ( !flowToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects guard and actorToLine \n         JavaSDM.ensure ( !guard.equals (actorToLine) );\n\n         // check isomorphic binding between objects interaction and actorToLine \n         JavaSDM.ensure ( !interaction.equals (actorToLine) );\n\n         // check isomorphic binding between objects line and actorToLine \n         JavaSDM.ensure ( !line.equals (actorToLine) );\n\n         // check isomorphic binding between objects message and actorToLine \n         JavaSDM.ensure ( !message.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageReceive and actorToLine \n         JavaSDM.ensure ( !messageReceive.equals (actorToLine) );\n\n         // check isomorphic binding between objects messageSend and actorToLine \n         JavaSDM.ensure ( !messageSend.equals (actorToLine) );\n\n         // check isomorphic binding between objects operand and actorToLine \n         JavaSDM.ensure ( !operand.equals (actorToLine) );\n\n         // check isomorphic binding between objects packageDeclaration and actorToLine \n         JavaSDM.ensure ( !packageDeclaration.equals (actorToLine) );\n\n         // check isomorphic binding between objects spec and actorToLine \n         JavaSDM.ensure ( !spec.equals (actorToLine) );\n\n         // check isomorphic binding between objects step and actorToLine \n         JavaSDM.ensure ( !step.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToCombo and actorToLine \n         JavaSDM.ensure ( !stepToCombo.equals (actorToLine) );\n\n         // check isomorphic binding between objects stepToMessage and actorToLine \n         JavaSDM.ensure ( !stepToMessage.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCase and actorToLine \n         JavaSDM.ensure ( !useCase.equals (actorToLine) );\n\n         // check isomorphic binding between objects useCaseToInteraction and actorToLine \n         JavaSDM.ensure ( !useCaseToInteraction.equals (actorToLine) );\n\n         // check isomorphic binding between objects altFlow and alt \n         JavaSDM.ensure ( !altFlow.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and alt \n         JavaSDM.ensure ( !altFlowToOperand.equals (alt) );\n\n         // check isomorphic binding between objects alternative1ToOperand and alt \n         JavaSDM.ensure ( !alternative1ToOperand.equals (alt) );\n\n         // check isomorphic binding between objects combo and alt \n         JavaSDM.ensure ( !combo.equals (alt) );\n\n         // check isomorphic binding between objects flow and alt \n         JavaSDM.ensure ( !flow.equals (alt) );\n\n         // check isomorphic binding between objects flowToInteraction and alt \n         JavaSDM.ensure ( !flowToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects guard and alt \n         JavaSDM.ensure ( !guard.equals (alt) );\n\n         // check isomorphic binding between objects interaction and alt \n         JavaSDM.ensure ( !interaction.equals (alt) );\n\n         // check isomorphic binding between objects line and alt \n         JavaSDM.ensure ( !line.equals (alt) );\n\n         // check isomorphic binding between objects message and alt \n         JavaSDM.ensure ( !message.equals (alt) );\n\n         // check isomorphic binding between objects messageReceive and alt \n         JavaSDM.ensure ( !messageReceive.equals (alt) );\n\n         // check isomorphic binding between objects messageSend and alt \n         JavaSDM.ensure ( !messageSend.equals (alt) );\n\n         // check isomorphic binding between objects operand and alt \n         JavaSDM.ensure ( !operand.equals (alt) );\n\n         // check isomorphic binding between objects packageDeclaration and alt \n         JavaSDM.ensure ( !packageDeclaration.equals (alt) );\n\n         // check isomorphic binding between objects spec and alt \n         JavaSDM.ensure ( !spec.equals (alt) );\n\n         // check isomorphic binding between objects step and alt \n         JavaSDM.ensure ( !step.equals (alt) );\n\n         // check isomorphic binding between objects stepToCombo and alt \n         JavaSDM.ensure ( !stepToCombo.equals (alt) );\n\n         // check isomorphic binding between objects stepToMessage and alt \n         JavaSDM.ensure ( !stepToMessage.equals (alt) );\n\n         // check isomorphic binding between objects useCase and alt \n         JavaSDM.ensure ( !useCase.equals (alt) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alt \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alt) );\n\n         // check isomorphic binding between objects altFlowToOperand and altFlow \n         JavaSDM.ensure ( !altFlowToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlow \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlow) );\n\n         // check isomorphic binding between objects combo and altFlow \n         JavaSDM.ensure ( !combo.equals (altFlow) );\n\n         // check isomorphic binding between objects flow and altFlow \n         JavaSDM.ensure ( !flow.equals (altFlow) );\n\n         // check isomorphic binding between objects flowToInteraction and altFlow \n         JavaSDM.ensure ( !flowToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects guard and altFlow \n         JavaSDM.ensure ( !guard.equals (altFlow) );\n\n         // check isomorphic binding between objects interaction and altFlow \n         JavaSDM.ensure ( !interaction.equals (altFlow) );\n\n         // check isomorphic binding between objects line and altFlow \n         JavaSDM.ensure ( !line.equals (altFlow) );\n\n         // check isomorphic binding between objects message and altFlow \n         JavaSDM.ensure ( !message.equals (altFlow) );\n\n         // check isomorphic binding between objects messageReceive and altFlow \n         JavaSDM.ensure ( !messageReceive.equals (altFlow) );\n\n         // check isomorphic binding between objects messageSend and altFlow \n         JavaSDM.ensure ( !messageSend.equals (altFlow) );\n\n         // check isomorphic binding between objects operand and altFlow \n         JavaSDM.ensure ( !operand.equals (altFlow) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlow \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlow) );\n\n         // check isomorphic binding between objects spec and altFlow \n         JavaSDM.ensure ( !spec.equals (altFlow) );\n\n         // check isomorphic binding between objects step and altFlow \n         JavaSDM.ensure ( !step.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToCombo and altFlow \n         JavaSDM.ensure ( !stepToCombo.equals (altFlow) );\n\n         // check isomorphic binding between objects stepToMessage and altFlow \n         JavaSDM.ensure ( !stepToMessage.equals (altFlow) );\n\n         // check isomorphic binding between objects useCase and altFlow \n         JavaSDM.ensure ( !useCase.equals (altFlow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlow) );\n\n         // check isomorphic binding between objects alternative1ToOperand and altFlowToOperand \n         JavaSDM.ensure ( !alternative1ToOperand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and altFlowToOperand \n         JavaSDM.ensure ( !combo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flow and altFlowToOperand \n         JavaSDM.ensure ( !flow.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects flowToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !flowToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects guard and altFlowToOperand \n         JavaSDM.ensure ( !guard.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects interaction and altFlowToOperand \n         JavaSDM.ensure ( !interaction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects line and altFlowToOperand \n         JavaSDM.ensure ( !line.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects message and altFlowToOperand \n         JavaSDM.ensure ( !message.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageReceive and altFlowToOperand \n         JavaSDM.ensure ( !messageReceive.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects messageSend and altFlowToOperand \n         JavaSDM.ensure ( !messageSend.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects operand and altFlowToOperand \n         JavaSDM.ensure ( !operand.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and altFlowToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects spec and altFlowToOperand \n         JavaSDM.ensure ( !spec.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects step and altFlowToOperand \n         JavaSDM.ensure ( !step.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and altFlowToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and altFlowToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCase and altFlowToOperand \n         JavaSDM.ensure ( !useCase.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and altFlowToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (altFlowToOperand) );\n\n         // check isomorphic binding between objects combo and alternative1ToOperand \n         JavaSDM.ensure ( !combo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and alternative1ToOperand \n         JavaSDM.ensure ( !flow.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flowToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !flowToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects guard and alternative1ToOperand \n         JavaSDM.ensure ( !guard.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects interaction and alternative1ToOperand \n         JavaSDM.ensure ( !interaction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects line and alternative1ToOperand \n         JavaSDM.ensure ( !line.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects message and alternative1ToOperand \n         JavaSDM.ensure ( !message.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageReceive and alternative1ToOperand \n         JavaSDM.ensure ( !messageReceive.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects messageSend and alternative1ToOperand \n         JavaSDM.ensure ( !messageSend.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects operand and alternative1ToOperand \n         JavaSDM.ensure ( !operand.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects packageDeclaration and alternative1ToOperand \n         JavaSDM.ensure ( !packageDeclaration.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects spec and alternative1ToOperand \n         JavaSDM.ensure ( !spec.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects step and alternative1ToOperand \n         JavaSDM.ensure ( !step.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToCombo and alternative1ToOperand \n         JavaSDM.ensure ( !stepToCombo.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects stepToMessage and alternative1ToOperand \n         JavaSDM.ensure ( !stepToMessage.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCase and alternative1ToOperand \n         JavaSDM.ensure ( !useCase.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and alternative1ToOperand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (alternative1ToOperand) );\n\n         // check isomorphic binding between objects flow and combo \n         JavaSDM.ensure ( !flow.equals (combo) );\n\n         // check isomorphic binding between objects flowToInteraction and combo \n         JavaSDM.ensure ( !flowToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects guard and combo \n         JavaSDM.ensure ( !guard.equals (combo) );\n\n         // check isomorphic binding between objects interaction and combo \n         JavaSDM.ensure ( !interaction.equals (combo) );\n\n         // check isomorphic binding between objects line and combo \n         JavaSDM.ensure ( !line.equals (combo) );\n\n         // check isomorphic binding between objects message and combo \n         JavaSDM.ensure ( !message.equals (combo) );\n\n         // check isomorphic binding between objects messageReceive and combo \n         JavaSDM.ensure ( !messageReceive.equals (combo) );\n\n         // check isomorphic binding between objects messageSend and combo \n         JavaSDM.ensure ( !messageSend.equals (combo) );\n\n         // check isomorphic binding between objects operand and combo \n         JavaSDM.ensure ( !operand.equals (combo) );\n\n         // check isomorphic binding between objects packageDeclaration and combo \n         JavaSDM.ensure ( !packageDeclaration.equals (combo) );\n\n         // check isomorphic binding between objects spec and combo \n         JavaSDM.ensure ( !spec.equals (combo) );\n\n         // check isomorphic binding between objects step and combo \n         JavaSDM.ensure ( !step.equals (combo) );\n\n         // check isomorphic binding between objects stepToCombo and combo \n         JavaSDM.ensure ( !stepToCombo.equals (combo) );\n\n         // check isomorphic binding between objects stepToMessage and combo \n         JavaSDM.ensure ( !stepToMessage.equals (combo) );\n\n         // check isomorphic binding between objects useCase and combo \n         JavaSDM.ensure ( !useCase.equals (combo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and combo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (combo) );\n\n         // check isomorphic binding between objects flowToInteraction and flow \n         JavaSDM.ensure ( !flowToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flow \n         JavaSDM.ensure ( !guard.equals (flow) );\n\n         // check isomorphic binding between objects interaction and flow \n         JavaSDM.ensure ( !interaction.equals (flow) );\n\n         // check isomorphic binding between objects line and flow \n         JavaSDM.ensure ( !line.equals (flow) );\n\n         // check isomorphic binding between objects message and flow \n         JavaSDM.ensure ( !message.equals (flow) );\n\n         // check isomorphic binding between objects messageReceive and flow \n         JavaSDM.ensure ( !messageReceive.equals (flow) );\n\n         // check isomorphic binding between objects messageSend and flow \n         JavaSDM.ensure ( !messageSend.equals (flow) );\n\n         // check isomorphic binding between objects operand and flow \n         JavaSDM.ensure ( !operand.equals (flow) );\n\n         // check isomorphic binding between objects packageDeclaration and flow \n         JavaSDM.ensure ( !packageDeclaration.equals (flow) );\n\n         // check isomorphic binding between objects spec and flow \n         JavaSDM.ensure ( !spec.equals (flow) );\n\n         // check isomorphic binding between objects step and flow \n         JavaSDM.ensure ( !step.equals (flow) );\n\n         // check isomorphic binding between objects stepToCombo and flow \n         JavaSDM.ensure ( !stepToCombo.equals (flow) );\n\n         // check isomorphic binding between objects stepToMessage and flow \n         JavaSDM.ensure ( !stepToMessage.equals (flow) );\n\n         // check isomorphic binding between objects useCase and flow \n         JavaSDM.ensure ( !useCase.equals (flow) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flow \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flow) );\n\n         // check isomorphic binding between objects guard and flowToInteraction \n         JavaSDM.ensure ( !guard.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects interaction and flowToInteraction \n         JavaSDM.ensure ( !interaction.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects line and flowToInteraction \n         JavaSDM.ensure ( !line.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects message and flowToInteraction \n         JavaSDM.ensure ( !message.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects messageReceive and flowToInteraction \n         JavaSDM.ensure ( !messageReceive.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects messageSend and flowToInteraction \n         JavaSDM.ensure ( !messageSend.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects operand and flowToInteraction \n         JavaSDM.ensure ( !operand.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects packageDeclaration and flowToInteraction \n         JavaSDM.ensure ( !packageDeclaration.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects spec and flowToInteraction \n         JavaSDM.ensure ( !spec.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects step and flowToInteraction \n         JavaSDM.ensure ( !step.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects stepToCombo and flowToInteraction \n         JavaSDM.ensure ( !stepToCombo.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects stepToMessage and flowToInteraction \n         JavaSDM.ensure ( !stepToMessage.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects useCase and flowToInteraction \n         JavaSDM.ensure ( !useCase.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and flowToInteraction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (flowToInteraction) );\n\n         // check isomorphic binding between objects interaction and guard \n         JavaSDM.ensure ( !interaction.equals (guard) );\n\n         // check isomorphic binding between objects line and guard \n         JavaSDM.ensure ( !line.equals (guard) );\n\n         // check isomorphic binding between objects message and guard \n         JavaSDM.ensure ( !message.equals (guard) );\n\n         // check isomorphic binding between objects messageReceive and guard \n         JavaSDM.ensure ( !messageReceive.equals (guard) );\n\n         // check isomorphic binding between objects messageSend and guard \n         JavaSDM.ensure ( !messageSend.equals (guard) );\n\n         // check isomorphic binding between objects operand and guard \n         JavaSDM.ensure ( !operand.equals (guard) );\n\n         // check isomorphic binding between objects packageDeclaration and guard \n         JavaSDM.ensure ( !packageDeclaration.equals (guard) );\n\n         // check isomorphic binding between objects spec and guard \n         JavaSDM.ensure ( !spec.equals (guard) );\n\n         // check isomorphic binding between objects step and guard \n         JavaSDM.ensure ( !step.equals (guard) );\n\n         // check isomorphic binding between objects stepToCombo and guard \n         JavaSDM.ensure ( !stepToCombo.equals (guard) );\n\n         // check isomorphic binding between objects stepToMessage and guard \n         JavaSDM.ensure ( !stepToMessage.equals (guard) );\n\n         // check isomorphic binding between objects useCase and guard \n         JavaSDM.ensure ( !useCase.equals (guard) );\n\n         // check isomorphic binding between objects useCaseToInteraction and guard \n         JavaSDM.ensure ( !useCaseToInteraction.equals (guard) );\n\n         // check isomorphic binding between objects line and interaction \n         JavaSDM.ensure ( !line.equals (interaction) );\n\n         // check isomorphic binding between objects message and interaction \n         JavaSDM.ensure ( !message.equals (interaction) );\n\n         // check isomorphic binding between objects messageReceive and interaction \n         JavaSDM.ensure ( !messageReceive.equals (interaction) );\n\n         // check isomorphic binding between objects messageSend and interaction \n         JavaSDM.ensure ( !messageSend.equals (interaction) );\n\n         // check isomorphic binding between objects operand and interaction \n         JavaSDM.ensure ( !operand.equals (interaction) );\n\n         // check isomorphic binding between objects packageDeclaration and interaction \n         JavaSDM.ensure ( !packageDeclaration.equals (interaction) );\n\n         // check isomorphic binding between objects spec and interaction \n         JavaSDM.ensure ( !spec.equals (interaction) );\n\n         // check isomorphic binding between objects step and interaction \n         JavaSDM.ensure ( !step.equals (interaction) );\n\n         // check isomorphic binding between objects stepToCombo and interaction \n         JavaSDM.ensure ( !stepToCombo.equals (interaction) );\n\n         // check isomorphic binding between objects stepToMessage and interaction \n         JavaSDM.ensure ( !stepToMessage.equals (interaction) );\n\n         // check isomorphic binding between objects useCase and interaction \n         JavaSDM.ensure ( !useCase.equals (interaction) );\n\n         // check isomorphic binding between objects useCaseToInteraction and interaction \n         JavaSDM.ensure ( !useCaseToInteraction.equals (interaction) );\n\n         // check isomorphic binding between objects message and line \n         JavaSDM.ensure ( !message.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and line \n         JavaSDM.ensure ( !messageReceive.equals (line) );\n\n         // check isomorphic binding between objects messageSend and line \n         JavaSDM.ensure ( !messageSend.equals (line) );\n\n         // check isomorphic binding between objects operand and line \n         JavaSDM.ensure ( !operand.equals (line) );\n\n         // check isomorphic binding between objects packageDeclaration and line \n         JavaSDM.ensure ( !packageDeclaration.equals (line) );\n\n         // check isomorphic binding between objects spec and line \n         JavaSDM.ensure ( !spec.equals (line) );\n\n         // check isomorphic binding between objects step and line \n         JavaSDM.ensure ( !step.equals (line) );\n\n         // check isomorphic binding between objects stepToCombo and line \n         JavaSDM.ensure ( !stepToCombo.equals (line) );\n\n         // check isomorphic binding between objects stepToMessage and line \n         JavaSDM.ensure ( !stepToMessage.equals (line) );\n\n         // check isomorphic binding between objects useCase and line \n         JavaSDM.ensure ( !useCase.equals (line) );\n\n         // check isomorphic binding between objects useCaseToInteraction and line \n         JavaSDM.ensure ( !useCaseToInteraction.equals (line) );\n\n         // check isomorphic binding between objects messageReceive and message \n         JavaSDM.ensure ( !messageReceive.equals (message) );\n\n         // check isomorphic binding between objects messageSend and message \n         JavaSDM.ensure ( !messageSend.equals (message) );\n\n         // check isomorphic binding between objects operand and message \n         JavaSDM.ensure ( !operand.equals (message) );\n\n         // check isomorphic binding between objects packageDeclaration and message \n         JavaSDM.ensure ( !packageDeclaration.equals (message) );\n\n         // check isomorphic binding between objects spec and message \n         JavaSDM.ensure ( !spec.equals (message) );\n\n         // check isomorphic binding between objects step and message \n         JavaSDM.ensure ( !step.equals (message) );\n\n         // check isomorphic binding between objects stepToCombo and message \n         JavaSDM.ensure ( !stepToCombo.equals (message) );\n\n         // check isomorphic binding between objects stepToMessage and message \n         JavaSDM.ensure ( !stepToMessage.equals (message) );\n\n         // check isomorphic binding between objects useCase and message \n         JavaSDM.ensure ( !useCase.equals (message) );\n\n         // check isomorphic binding between objects useCaseToInteraction and message \n         JavaSDM.ensure ( !useCaseToInteraction.equals (message) );\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageReceive \n         JavaSDM.ensure ( !operand.equals (messageReceive) );\n\n         // check isomorphic binding between objects packageDeclaration and messageReceive \n         JavaSDM.ensure ( !packageDeclaration.equals (messageReceive) );\n\n         // check isomorphic binding between objects spec and messageReceive \n         JavaSDM.ensure ( !spec.equals (messageReceive) );\n\n         // check isomorphic binding between objects step and messageReceive \n         JavaSDM.ensure ( !step.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToCombo and messageReceive \n         JavaSDM.ensure ( !stepToCombo.equals (messageReceive) );\n\n         // check isomorphic binding between objects stepToMessage and messageReceive \n         JavaSDM.ensure ( !stepToMessage.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCase and messageReceive \n         JavaSDM.ensure ( !useCase.equals (messageReceive) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageReceive \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageReceive) );\n\n         // check isomorphic binding between objects operand and messageSend \n         JavaSDM.ensure ( !operand.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and messageSend \n         JavaSDM.ensure ( !packageDeclaration.equals (messageSend) );\n\n         // check isomorphic binding between objects spec and messageSend \n         JavaSDM.ensure ( !spec.equals (messageSend) );\n\n         // check isomorphic binding between objects step and messageSend \n         JavaSDM.ensure ( !step.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToCombo and messageSend \n         JavaSDM.ensure ( !stepToCombo.equals (messageSend) );\n\n         // check isomorphic binding between objects stepToMessage and messageSend \n         JavaSDM.ensure ( !stepToMessage.equals (messageSend) );\n\n         // check isomorphic binding between objects useCase and messageSend \n         JavaSDM.ensure ( !useCase.equals (messageSend) );\n\n         // check isomorphic binding between objects useCaseToInteraction and messageSend \n         JavaSDM.ensure ( !useCaseToInteraction.equals (messageSend) );\n\n         // check isomorphic binding between objects packageDeclaration and operand \n         JavaSDM.ensure ( !packageDeclaration.equals (operand) );\n\n         // check isomorphic binding between objects spec and operand \n         JavaSDM.ensure ( !spec.equals (operand) );\n\n         // check isomorphic binding between objects step and operand \n         JavaSDM.ensure ( !step.equals (operand) );\n\n         // check isomorphic binding between objects stepToCombo and operand \n         JavaSDM.ensure ( !stepToCombo.equals (operand) );\n\n         // check isomorphic binding between objects stepToMessage and operand \n         JavaSDM.ensure ( !stepToMessage.equals (operand) );\n\n         // check isomorphic binding between objects useCase and operand \n         JavaSDM.ensure ( !useCase.equals (operand) );\n\n         // check isomorphic binding between objects useCaseToInteraction and operand \n         JavaSDM.ensure ( !useCaseToInteraction.equals (operand) );\n\n         // check isomorphic binding between objects spec and packageDeclaration \n         JavaSDM.ensure ( !spec.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and packageDeclaration \n         JavaSDM.ensure ( !step.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToCombo and packageDeclaration \n         JavaSDM.ensure ( !stepToCombo.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects stepToMessage and packageDeclaration \n         JavaSDM.ensure ( !stepToMessage.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCase and packageDeclaration \n         JavaSDM.ensure ( !useCase.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects useCaseToInteraction and packageDeclaration \n         JavaSDM.ensure ( !useCaseToInteraction.equals (packageDeclaration) );\n\n         // check isomorphic binding between objects step and spec \n         JavaSDM.ensure ( !step.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and spec \n         JavaSDM.ensure ( !stepToCombo.equals (spec) );\n\n         // check isomorphic binding between objects stepToMessage and spec \n         JavaSDM.ensure ( !stepToMessage.equals (spec) );\n\n         // check isomorphic binding between objects useCase and spec \n         JavaSDM.ensure ( !useCase.equals (spec) );\n\n         // check isomorphic binding between objects useCaseToInteraction and spec \n         JavaSDM.ensure ( !useCaseToInteraction.equals (spec) );\n\n         // check isomorphic binding between objects stepToCombo and step \n         JavaSDM.ensure ( !stepToCombo.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and step \n         JavaSDM.ensure ( !stepToMessage.equals (step) );\n\n         // check isomorphic binding between objects useCase and step \n         JavaSDM.ensure ( !useCase.equals (step) );\n\n         // check isomorphic binding between objects useCaseToInteraction and step \n         JavaSDM.ensure ( !useCaseToInteraction.equals (step) );\n\n         // check isomorphic binding between objects stepToMessage and stepToCombo \n         JavaSDM.ensure ( !stepToMessage.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToCombo \n         JavaSDM.ensure ( !useCase.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToCombo \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToCombo) );\n\n         // check isomorphic binding between objects useCase and stepToMessage \n         JavaSDM.ensure ( !useCase.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and stepToMessage \n         JavaSDM.ensure ( !useCaseToInteraction.equals (stepToMessage) );\n\n         // check isomorphic binding between objects useCaseToInteraction and useCase \n         JavaSDM.ensure ( !useCaseToInteraction.equals (useCase) );\n\n         // create object __messageReceive_covered_line\n         __messageReceive_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__stepAlternative__alt\n         step__stepAlternative__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_enclosingInteraction_interaction\n         __messageReceive_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __guard_specification_spec\n         __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alt__ref__altFlow\n         alt__ref__altFlow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_enclosingInteraction_interaction\n         __messageSend_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__target__message\n         stepToMessage__target__message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_covered_line\n         __combo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_guard_guard\n         __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_fragment_combo\n         __interaction_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageSend_message_message\n         __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object altFlowToOperand__target__operand\n         altFlowToOperand__target__operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_fragment_messageReceive\n         __interaction_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_message_message\n         __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __interaction_fragment_messageSend\n         __interaction_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_messageReceive\n         __line_coveredBy_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __operand_covered_line\n         __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__source__step\n         stepToCombo__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_operand_operand\n         __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_interaction_interaction\n         __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_combo\n         __line_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __combo_enclosingInteraction_interaction\n         __combo_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object flow__steps__step\n         flow__steps__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __messageReceive_message_message\n         __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __line_coveredBy_operand\n         __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToMessage__source__step\n         stepToMessage__source__step = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object stepToCombo__target__combo\n         stepToCombo__target__combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object step__actor__actor\n         step__actor__actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // create object __message_sendEvent_messageSend\n         __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n         // assign attribute ruleresult\n         ruleresult.setRuleName (\"AltStepBFToComboRule\");\n         // assign attribute __combo_enclosingInteraction_interaction\n         __combo_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n         // assign attribute __interaction_fragment_combo\n         __interaction_fragment_combo.setName (\"fragment\");\n         // assign attribute __messageSend_enclosingInteraction_interaction\n         __messageSend_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n         // assign attribute __interaction_fragment_messageSend\n         __interaction_fragment_messageSend.setName (\"fragment\");\n         // assign attribute __messageReceive_enclosingInteraction_interaction\n         __messageReceive_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n         // assign attribute __interaction_fragment_messageReceive\n         __interaction_fragment_messageReceive.setName (\"fragment\");\n         // assign attribute step__stepAlternative__alt\n         step__stepAlternative__alt.setName (\"stepAlternative\");\n         // assign attribute alt__ref__altFlow\n         alt__ref__altFlow.setName (\"ref\");\n         // assign attribute __combo_operand_operand\n         __combo_operand_operand.setName (\"operand\");\n         // assign attribute __line_coveredBy_combo\n         __line_coveredBy_combo.setName (\"coveredBy\");\n         // assign attribute __combo_covered_line\n         __combo_covered_line.setName (\"covered\");\n         // assign attribute __line_coveredBy_operand\n         __line_coveredBy_operand.setName (\"coveredBy\");\n         // assign attribute __operand_covered_line\n         __operand_covered_line.setName (\"covered\");\n         // assign attribute stepToCombo__source__step\n         stepToCombo__source__step.setName (\"source\");\n         // assign attribute stepToCombo__target__combo\n         stepToCombo__target__combo.setName (\"target\");\n         // assign attribute __operand_guard_guard\n         __operand_guard_guard.setName (\"guard\");\n         // assign attribute alternative1ToOperand__source__alt\n         alternative1ToOperand__source__alt.setName (\"source\");\n         // assign attribute alternative1ToOperand__target__operand\n         alternative1ToOperand__target__operand.setName (\"target\");\n         // assign attribute __guard_specification_spec\n         __guard_specification_spec.setName (\"specification\");\n         // assign attribute altFlowToOperand__source__altFlow\n         altFlowToOperand__source__altFlow.setName (\"source\");\n         // assign attribute altFlowToOperand__target__operand\n         altFlowToOperand__target__operand.setName (\"target\");\n         // assign attribute flow__steps__step\n         flow__steps__step.setName (\"steps\");\n         // assign attribute step__actor__actor\n         step__actor__actor.setName (\"actor\");\n         // assign attribute __message_sendEvent_messageSend\n         __message_sendEvent_messageSend.setName (\"sendEvent\");\n         // assign attribute __message_receiveEvent_messageReceive\n         __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n         // assign attribute __message_interaction_interaction\n         __message_interaction_interaction.setName (\"interaction\");\n         // assign attribute __interaction_message_message\n         __interaction_message_message.setName (\"message\");\n         // assign attribute stepToMessage__source__step\n         stepToMessage__source__step.setName (\"source\");\n         // assign attribute stepToMessage__target__message\n         stepToMessage__target__message.setName (\"target\");\n         // assign attribute __messageSend_message_message\n         __messageSend_message_message.setName (\"message\");\n         // assign attribute __messageReceive_message_message\n         __messageReceive_message_message.setName (\"message\");\n         // assign attribute __line_coveredBy_messageReceive\n         __line_coveredBy_messageReceive.setName (\"coveredBy\");\n         // assign attribute __messageReceive_covered_line\n         __messageReceive_covered_line.setName (\"covered\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__stepAlternative__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_enclosingInteraction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__guard_specification_spec,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__source__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alt__ref__altFlow,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_enclosingInteraction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__target__message,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_guard_guard,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_fragment_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageSend_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,altFlowToOperand__target__operand,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_fragment_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__interaction_fragment_messageSend,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__operand_covered_line,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_operand_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_interaction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_combo,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__combo_enclosingInteraction_interaction,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,flow__steps__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__messageReceive_message_message,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__line_coveredBy_operand,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToMessage__source__step,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_receiveEvent_messageReceive,\"translatedEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,stepToCombo__target__combo,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,step__actor__actor,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,alternative1ToOperand__source__alt,\"createdEdges\");\n\n         // create link\n         org.moflon.util.eMoflonEMFUtil.addOppositeReference(ruleresult,__message_sendEvent_messageSend,\"translatedEdges\");\n\n         // create link\n         __message_interaction_interaction.setTrg( interaction);\n\n\n         // create link\n         __interaction_fragment_messageSend.setSrc( interaction);\n\n\n         // create link\n         __messageSend_enclosingInteraction_interaction.setTrg( interaction);\n\n\n         // create link\n         __interaction_message_message.setSrc( interaction);\n\n\n         // create link\n         __interaction_fragment_combo.setSrc( interaction);\n\n\n         // create link\n         __combo_enclosingInteraction_interaction.setTrg( interaction);\n\n\n         // create link\n         __interaction_fragment_messageReceive.setSrc( interaction);\n\n\n         // create link\n         __messageReceive_enclosingInteraction_interaction.setTrg( interaction);\n\n\n         // create link\n         __interaction_fragment_combo.setTrg( combo);\n\n\n         // create link\n         __combo_covered_line.setSrc( combo);\n\n\n         // create link\n         __line_coveredBy_combo.setTrg( combo);\n\n\n         // create link\n         stepToCombo__target__combo.setTrg( combo);\n\n\n         // create link\n         __combo_enclosingInteraction_interaction.setSrc( combo);\n\n\n         // create link\n         __combo_operand_operand.setSrc( combo);\n\n\n         // create link\n         __interaction_fragment_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n         // create link\n         __messageSend_message_message.setSrc( messageSend);\n\n\n         // create link\n         __messageSend_enclosingInteraction_interaction.setSrc( messageSend);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __messageReceive_message_message.setSrc( messageReceive);\n\n\n         // create link\n         __messageReceive_enclosingInteraction_interaction.setSrc( messageReceive);\n\n\n         // create link\n         __messageReceive_covered_line.setSrc( messageReceive);\n\n\n         // create link\n         __interaction_fragment_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         __line_coveredBy_messageReceive.setTrg( messageReceive);\n\n\n         // create link\n         flow__steps__step.setSrc( flow);\n\n\n         // create link\n         stepToMessage__source__step.setTrg( step);\n\n\n         // create link\n         stepToCombo__source__step.setTrg( step);\n\n\n         // create link\n         step__stepAlternative__alt.setSrc( step);\n\n\n         // create link\n         flow__steps__step.setTrg( step);\n\n\n         // create link\n         step__actor__actor.setSrc( step);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setTrg( alt);\n\n\n         // create link\n         step__stepAlternative__alt.setTrg( alt);\n\n\n         // create link\n         alt__ref__altFlow.setSrc( alt);\n\n\n         // create link\n         __line_coveredBy_operand.setSrc( line);\n\n\n         // create link\n         __line_coveredBy_messageReceive.setSrc( line);\n\n\n         // create link\n         __messageReceive_covered_line.setTrg( line);\n\n\n         // create link\n         __combo_covered_line.setTrg( line);\n\n\n         // create link\n         __line_coveredBy_combo.setSrc( line);\n\n\n         // create link\n         __operand_covered_line.setTrg( line);\n\n\n         // create link\n         stepToCombo__target__combo.setSrc( stepToCombo);\n\n\n         // create link\n         stepToCombo__source__step.setSrc( stepToCombo);\n\n\n         // create link\n         __line_coveredBy_operand.setTrg( operand);\n\n\n         // create link\n         altFlowToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setTrg( operand);\n\n\n         // create link\n         __operand_guard_guard.setSrc( operand);\n\n\n         // create link\n         __operand_covered_line.setSrc( operand);\n\n\n         // create link\n         __combo_operand_operand.setTrg( operand);\n\n\n         // create link\n         alternative1ToOperand__source__alt.setSrc( alternative1ToOperand);\n\n\n         // create link\n         alternative1ToOperand__target__operand.setSrc( alternative1ToOperand);\n\n\n         // create link\n         __operand_guard_guard.setTrg( guard);\n\n\n         // create link\n         __guard_specification_spec.setSrc( guard);\n\n\n         // create link\n         __guard_specification_spec.setTrg( spec);\n\n\n         // create link\n         alt__ref__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setTrg( altFlow);\n\n\n         // create link\n         altFlowToOperand__target__operand.setSrc( altFlowToOperand);\n\n\n         // create link\n         altFlowToOperand__source__altFlow.setSrc( altFlowToOperand);\n\n\n         // create link\n         __interaction_message_message.setTrg( message);\n\n\n         // create link\n         __messageSend_message_message.setTrg( message);\n\n\n         // create link\n         __message_sendEvent_messageSend.setSrc( message);\n\n\n         // create link\n         stepToMessage__target__message.setTrg( message);\n\n\n         // create link\n         __message_receiveEvent_messageReceive.setSrc( message);\n\n\n         // create link\n         __message_interaction_interaction.setSrc( message);\n\n\n         // create link\n         __messageReceive_message_message.setTrg( message);\n\n\n         // create link\n         stepToMessage__target__message.setSrc( stepToMessage);\n\n\n         // create link\n         stepToMessage__source__step.setSrc( stepToMessage);\n\n\n         // create link\n         step__actor__actor.setTrg( actor);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // statement node \'perform postprocessing\'\n      // No post processing method found\n      // statement node \'register objects\'\n      this.registerObjects_BWD(ruleresult,interaction,combo,flowToInteraction,messageSend,messageReceive,flow,step,alt,line,stepToCombo,operand,alternative1ToOperand,guard,spec,altFlow,altFlowToOperand,useCase,useCaseToInteraction,message,stepToMessage,actor,actorToLine,packageDeclaration);\n      return ruleresult;'"
	 * @generated
	 */
	PerformRuleResult perform_BWD(IsApplicableMatch isApplicableMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass eClass = null;\n      Iterator fujaba__IterEClassToPerformOperation = null;\n      EOperation performOperation = null;\n      IsApplicableRuleResult ruleresult = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      MessageOccurrenceSpecification messageSend = null;\n      InteractionOperand operand = null;\n      LiteralString spec = null;\n      EMoflonEdge __interaction_lifeline_line = null;\n      EMoflonEdge __messageSend_enclosingInteraction_interaction = null;\n      IsApplicableMatch isApplicableMatch = null;\n      EMoflonEdge __interaction_fragment_messageSend = null;\n      EMoflonEdge __interaction_message_message = null;\n      EMoflonEdge __combo_enclosingInteraction_interaction = null;\n      EMoflonEdge __interaction_fragment_combo = null;\n      EMoflonEdge __interaction_fragment_messageReceive = null;\n      EMoflonEdge __line_interaction_interaction = null;\n      EMoflonEdge __messageReceive_enclosingInteraction_interaction = null;\n      EMoflonEdge __message_interaction_interaction = null;\n      EMoflonEdge __flowToInteraction_target_interaction = null;\n      EMoflonEdge __useCaseToInteraction_target_interaction = null;\n      EMoflonEdge __combo_covered_line = null;\n      EMoflonEdge __combo_operand_operand = null;\n      EMoflonEdge __line_coveredBy_combo = null;\n      EMoflonEdge __flowToInteraction_source_flow = null;\n      EMoflonEdge __message_sendEvent_messageSend = null;\n      EMoflonEdge __messageSend_message_message = null;\n      EMoflonEdge __line_coveredBy_messageReceive = null;\n      EMoflonEdge __messageReceive_message_message = null;\n      EMoflonEdge __message_receiveEvent_messageReceive = null;\n      EMoflonEdge __messageReceive_covered_line = null;\n      EMoflonEdge __useCase_flows_flow = null;\n      EMoflonEdge __operand_covered_line = null;\n      EMoflonEdge __actorToLine_target_line = null;\n      EMoflonEdge __line_coveredBy_operand = null;\n      EMoflonEdge __operand_guard_guard = null;\n      EMoflonEdge __guard_specification_spec = null;\n      EMoflonEdge __useCaseToInteraction_source_useCase = null;\n      EMoflonEdge __packageDeclaration_useCases_useCase = null;\n      EMoflonEdge __actorToLine_source_actor = null;\n      EMoflonEdge __packageDeclaration_actors_actor = null;\n      CSP csp = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      Iterator fujaba__IterInteractionToUseCaseToInteraction = null;\n      UseCaseToInteraction useCaseToInteraction = null;\n      BasicFlow flow = null;\n      Iterator fujaba__IterInteractionToFlowToInteraction = null;\n      FlowToInteractionFragment flowToInteraction = null;\n      Actor actor = null;\n      Iterator fujaba__IterLineToActorToLine = null;\n      ActorToLifeline actorToLine = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from eClass to performOperation\n         fujaba__Success = false;\n\n         fujaba__IterEClassToPerformOperation = eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__IterEClassToPerformOperation.hasNext () )\n         {\n            try\n            {\n               performOperation = (EOperation) fujaba__IterEClassToPerformOperation.next ();\n\n               // check object performOperation is really bound\n               JavaSDM.ensure ( performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (performOperation.getName (), \"perform_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object ruleresult\n         ruleresult = TGGRuntimeFactory.eINSTANCE.createIsApplicableRuleResult();\n\n         // assign attribute ruleresult\n         ruleresult.setSuccess (false);\n         // assign attribute ruleresult\n         ruleresult.setRule (\"AltStepBFToComboRule\");\n\n         // create link\n         ruleresult.setPerformOperation( performOperation);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'core match\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (match.getObject(\"combo\"));\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n         _TmpObject = (match.getObject(\"guard\"));\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n         _TmpObject = (match.getObject(\"interaction\"));\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n         _TmpObject = (match.getObject(\"line\"));\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n         _TmpObject = (match.getObject(\"message\"));\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n         _TmpObject = (match.getObject(\"messageReceive\"));\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"messageSend\"));\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n         _TmpObject = (match.getObject(\"operand\"));\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n         _TmpObject = (match.getObject(\"spec\"));\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n         // check object match is really bound\n         JavaSDM.ensure ( match != null );\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // iterate to-many link target from line to actorToLine\n         fujaba__Success = false;\n\n         fujaba__IterLineToActorToLine = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,ActorToLifeline.class,\"target\")).iterator ();\n\n         while ( fujaba__IterLineToActorToLine.hasNext () )\n         {\n            try\n            {\n               actorToLine = (ActorToLifeline) fujaba__IterLineToActorToLine.next ();\n\n               // check object actorToLine is really bound\n               JavaSDM.ensure ( actorToLine != null );\n               // bind object\n               actor = actorToLine.getSource ();\n\n               // check object actor is really bound\n               JavaSDM.ensure ( actor != null );\n\n               // iterate to-many link target from interaction to flowToInteraction\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToFlowToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,FlowToInteractionFragment.class,\"target\")).iterator ();\n\n               while ( fujaba__IterInteractionToFlowToInteraction.hasNext () )\n               {\n                  try\n                  {\n                     flowToInteraction = (FlowToInteractionFragment) fujaba__IterInteractionToFlowToInteraction.next ();\n\n                     // check object flowToInteraction is really bound\n                     JavaSDM.ensure ( flowToInteraction != null );\n                     // bind object\n                     _TmpObject = flowToInteraction.getSource ();\n\n                     // ensure correct type and really bound of object flow\n                     JavaSDM.ensure ( _TmpObject instanceof BasicFlow );\n                     flow = (BasicFlow) _TmpObject;\n\n                     // iterate to-many link target from interaction to useCaseToInteraction\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToUseCaseToInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,UseCaseToInteraction.class,\"target\")).iterator ();\n\n                     while ( fujaba__IterInteractionToUseCaseToInteraction.hasNext () )\n                     {\n                        try\n                        {\n                           useCaseToInteraction = (UseCaseToInteraction) fujaba__IterInteractionToUseCaseToInteraction.next ();\n\n                           // check object useCaseToInteraction is really bound\n                           JavaSDM.ensure ( useCaseToInteraction != null );\n                           // bind object\n                           useCase = useCaseToInteraction.getSource ();\n\n                           // check object useCase is really bound\n                           JavaSDM.ensure ( useCase != null );\n\n                           // story node \'find context\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check object actor is really bound\n                              JavaSDM.ensure ( actor != null );\n                              // check object actorToLine is really bound\n                              JavaSDM.ensure ( actorToLine != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object flow is really bound\n                              JavaSDM.ensure ( flow != null );\n                              // check object flowToInteraction is really bound\n                              JavaSDM.ensure ( flowToInteraction != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check object useCase is really bound\n                              JavaSDM.ensure ( useCase != null );\n                              // check object useCaseToInteraction is really bound\n                              JavaSDM.ensure ( useCaseToInteraction != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link flows from flow to useCase\n                              JavaSDM.ensure (useCase.equals (flow.eContainer()\n                              ));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link source from actorToLine to actor\n                              JavaSDM.ensure (actor.equals (actorToLine.getSource ()\n                              ));\n\n                              // check link source from flowToInteraction to flow\n                              JavaSDM.ensure (flow.equals (flowToInteraction.getSource ()\n                              ));\n\n                              // check link source from useCaseToInteraction to useCase\n                              JavaSDM.ensure (useCase.equals (useCaseToInteraction.getSource ()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link target from actorToLine to line\n                              JavaSDM.ensure (line.equals (actorToLine.getTarget ()\n                              ));\n\n                              // check link target from flowToInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (flowToInteraction.getTarget ()\n                              ));\n\n                              // check link target from useCaseToInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (useCaseToInteraction.getTarget ()\n                              ));\n\n                              // bind object\n                              packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n                              // check object packageDeclaration is really bound\n                              JavaSDM.ensure ( packageDeclaration != null );\n\n                              // check if contained via correct reference\n                              JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n                              // check link actors from actor to packageDeclaration\n                              JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object __interaction_lifeline_line\n                              __interaction_lifeline_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_enclosingInteraction_interaction\n                              __messageSend_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object isApplicableMatch\n                              isApplicableMatch = TGGRuntimeFactory.eINSTANCE.createIsApplicableMatch();\n\n                              // create object __interaction_fragment_messageSend\n                              __interaction_fragment_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_message_message\n                              __interaction_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __combo_enclosingInteraction_interaction\n                              __combo_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_fragment_combo\n                              __interaction_fragment_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __interaction_fragment_messageReceive\n                              __interaction_fragment_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_interaction_interaction\n                              __line_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_enclosingInteraction_interaction\n                              __messageReceive_enclosingInteraction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_interaction_interaction\n                              __message_interaction_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToInteraction_target_interaction\n                              __flowToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __combo_covered_line\n                              __combo_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __combo_operand_operand\n                              __combo_operand_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_combo\n                              __line_coveredBy_combo = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __flowToInteraction_source_flow\n                              __flowToInteraction_source_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageSend_message_message\n                              __messageSend_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_messageReceive\n                              __line_coveredBy_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_message_message\n                              __messageReceive_message_message = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __messageReceive_covered_line\n                              __messageReceive_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCase_flows_flow\n                              __useCase_flows_flow = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_covered_line\n                              __operand_covered_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_target_line\n                              __actorToLine_target_line = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __line_coveredBy_operand\n                              __line_coveredBy_operand = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __operand_guard_guard\n                              __operand_guard_guard = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __guard_specification_spec\n                              __guard_specification_spec = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __actorToLine_source_actor\n                              __actorToLine_source_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // create object __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor = TGGRuntimeFactory.eINSTANCE.createEMoflonEdge();\n\n                              // assign attribute __combo_enclosingInteraction_interaction\n                              __combo_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n                              // assign attribute __interaction_fragment_combo\n                              __interaction_fragment_combo.setName (\"fragment\");\n                              // assign attribute __messageSend_enclosingInteraction_interaction\n                              __messageSend_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n                              // assign attribute __interaction_fragment_messageSend\n                              __interaction_fragment_messageSend.setName (\"fragment\");\n                              // assign attribute __messageReceive_enclosingInteraction_interaction\n                              __messageReceive_enclosingInteraction_interaction.setName (\"enclosingInteraction\");\n                              // assign attribute __interaction_fragment_messageReceive\n                              __interaction_fragment_messageReceive.setName (\"fragment\");\n                              // assign attribute __flowToInteraction_source_flow\n                              __flowToInteraction_source_flow.setName (\"source\");\n                              // assign attribute __flowToInteraction_target_interaction\n                              __flowToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __combo_operand_operand\n                              __combo_operand_operand.setName (\"operand\");\n                              // assign attribute __line_coveredBy_combo\n                              __line_coveredBy_combo.setName (\"coveredBy\");\n                              // assign attribute __combo_covered_line\n                              __combo_covered_line.setName (\"covered\");\n                              // assign attribute __line_coveredBy_operand\n                              __line_coveredBy_operand.setName (\"coveredBy\");\n                              // assign attribute __operand_covered_line\n                              __operand_covered_line.setName (\"covered\");\n                              // assign attribute __operand_guard_guard\n                              __operand_guard_guard.setName (\"guard\");\n                              // assign attribute __guard_specification_spec\n                              __guard_specification_spec.setName (\"specification\");\n                              // assign attribute __useCase_flows_flow\n                              __useCase_flows_flow.setName (\"flows\");\n                              // assign attribute __useCaseToInteraction_source_useCase\n                              __useCaseToInteraction_source_useCase.setName (\"source\");\n                              // assign attribute __useCaseToInteraction_target_interaction\n                              __useCaseToInteraction_target_interaction.setName (\"target\");\n                              // assign attribute __message_sendEvent_messageSend\n                              __message_sendEvent_messageSend.setName (\"sendEvent\");\n                              // assign attribute __message_receiveEvent_messageReceive\n                              __message_receiveEvent_messageReceive.setName (\"receiveEvent\");\n                              // assign attribute __message_interaction_interaction\n                              __message_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_message_message\n                              __interaction_message_message.setName (\"message\");\n                              // assign attribute __line_interaction_interaction\n                              __line_interaction_interaction.setName (\"interaction\");\n                              // assign attribute __interaction_lifeline_line\n                              __interaction_lifeline_line.setName (\"lifeline\");\n                              // assign attribute __messageSend_message_message\n                              __messageSend_message_message.setName (\"message\");\n                              // assign attribute __messageReceive_message_message\n                              __messageReceive_message_message.setName (\"message\");\n                              // assign attribute __line_coveredBy_messageReceive\n                              __line_coveredBy_messageReceive.setName (\"coveredBy\");\n                              // assign attribute __messageReceive_covered_line\n                              __messageReceive_covered_line.setName (\"covered\");\n                              // assign attribute __actorToLine_source_actor\n                              __actorToLine_source_actor.setName (\"source\");\n                              // assign attribute __actorToLine_target_line\n                              __actorToLine_target_line.setName (\"target\");\n                              // assign attribute __packageDeclaration_actors_actor\n                              __packageDeclaration_actors_actor.setName (\"actors\");\n                              // assign attribute __packageDeclaration_useCases_useCase\n                              __packageDeclaration_useCases_useCase.setName (\"useCases\");\n\n                              // create link\n                              __interaction_lifeline_line.setSrc( interaction);\n\n\n                              // create link\n                              __messageSend_enclosingInteraction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(interaction);\n\n\n                              // create link\n                              __interaction_fragment_messageSend.setSrc( interaction);\n\n\n                              // create link\n                              __interaction_message_message.setSrc( interaction);\n\n\n                              // create link\n                              __combo_enclosingInteraction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __interaction_fragment_combo.setSrc( interaction);\n\n\n                              // create link\n                              __interaction_fragment_messageReceive.setSrc( interaction);\n\n\n                              // create link\n                              __line_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __messageReceive_enclosingInteraction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __message_interaction_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __flowToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setTrg( interaction);\n\n\n                              // create link\n                              __interaction_fragment_combo.setTrg( combo);\n\n\n                              // create link\n                              __combo_covered_line.setSrc( combo);\n\n\n                              // create link\n                              __combo_operand_operand.setSrc( combo);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(combo);\n\n\n                              // create link\n                              __line_coveredBy_combo.setTrg( combo);\n\n\n                              // create link\n                              __combo_enclosingInteraction_interaction.setSrc( combo);\n\n\n                              // create link\n                              __flowToInteraction_source_flow.setSrc( flowToInteraction);\n\n\n                              // create link\n                              __flowToInteraction_target_interaction.setSrc( flowToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flowToInteraction);\n\n\n                              // create link\n                              __messageSend_enclosingInteraction_interaction.setSrc( messageSend);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageSend);\n\n\n                              // create link\n                              __interaction_fragment_messageSend.setTrg( messageSend);\n\n\n                              // create link\n                              __messageSend_message_message.setSrc( messageSend);\n\n\n                              // create link\n                              __interaction_fragment_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(messageReceive);\n\n\n                              // create link\n                              __messageReceive_enclosingInteraction_interaction.setSrc( messageReceive);\n\n\n                              // create link\n                              __line_coveredBy_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              __messageReceive_message_message.setSrc( messageReceive);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setTrg( messageReceive);\n\n\n                              // create link\n                              __messageReceive_covered_line.setSrc( messageReceive);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(flow);\n\n\n                              // create link\n                              __flowToInteraction_source_flow.setTrg( flow);\n\n\n                              // create link\n                              __useCase_flows_flow.setTrg( flow);\n\n\n                              // create link\n                              __interaction_lifeline_line.setTrg( line);\n\n\n                              // create link\n                              __operand_covered_line.setTrg( line);\n\n\n                              // create link\n                              __actorToLine_target_line.setTrg( line);\n\n\n                              // create link\n                              __line_interaction_interaction.setSrc( line);\n\n\n                              // create link\n                              __line_coveredBy_operand.setSrc( line);\n\n\n                              // create link\n                              __line_coveredBy_combo.setSrc( line);\n\n\n                              // create link\n                              __combo_covered_line.setTrg( line);\n\n\n                              // create link\n                              __line_coveredBy_messageReceive.setSrc( line);\n\n\n                              // create link\n                              __messageReceive_covered_line.setTrg( line);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(line);\n\n\n                              // create link\n                              __operand_guard_guard.setSrc( operand);\n\n\n                              // create link\n                              __combo_operand_operand.setTrg( operand);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(operand);\n\n\n                              // create link\n                              __line_coveredBy_operand.setTrg( operand);\n\n\n                              // create link\n                              __operand_covered_line.setSrc( operand);\n\n\n                              // create link\n                              __operand_guard_guard.setTrg( guard);\n\n\n                              // create link\n                              __guard_specification_spec.setSrc( guard);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(guard);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(spec);\n\n\n                              // create link\n                              __guard_specification_spec.setTrg( spec);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setTrg( useCase);\n\n\n                              // create link\n                              __useCase_flows_flow.setSrc( useCase);\n\n\n                              // create link\n                              __useCaseToInteraction_source_useCase.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(useCaseToInteraction);\n\n\n                              // create link\n                              __useCaseToInteraction_target_interaction.setSrc( useCaseToInteraction);\n\n\n                              // create link\n                              __messageSend_message_message.setTrg( message);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(message);\n\n\n                              // create link\n                              __message_interaction_interaction.setSrc( message);\n\n\n                              // create link\n                              __messageReceive_message_message.setTrg( message);\n\n\n                              // create link\n                              __message_sendEvent_messageSend.setSrc( message);\n\n\n                              // create link\n                              __interaction_message_message.setTrg( message);\n\n\n                              // create link\n                              __message_receiveEvent_messageReceive.setSrc( message);\n\n\n                              // create link\n                              __actorToLine_source_actor.setTrg( actor);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actor);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setTrg( actor);\n\n\n                              // create link\n                              __actorToLine_source_actor.setSrc( actorToLine);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(actorToLine);\n\n\n                              // create link\n                              __actorToLine_target_line.setSrc( actorToLine);\n\n\n                              // create link\n                              __packageDeclaration_useCases_useCase.setSrc( packageDeclaration);\n\n\n                              // create link\n                              __packageDeclaration_actors_actor.setSrc( packageDeclaration);\n\n\n                              // create link\n                              isApplicableMatch.getAllContextElements().add(packageDeclaration);\n\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_sendEvent_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_operand_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_fragment_messageSend,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_interaction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_enclosingInteraction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_guard_guard,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_fragment_combo,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_actors_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__guard_specification_spec,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_enclosingInteraction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_source_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_combo,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCaseToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToInteraction_source_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__operand_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__packageDeclaration_useCases_useCase,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_fragment_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__combo_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__flowToInteraction_target_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_lifeline_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_enclosingInteraction_interaction,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageSend_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_target_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__interaction_message_message,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__actorToLine_source_actor,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__message_receiveEvent_messageReceive,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_coveredBy_operand,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__messageReceive_covered_line,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__useCase_flows_flow,\"allContextElements\");\n\n                              // create link\n                              org.moflon.util.eMoflonEMFUtil.addOppositeReference(isApplicableMatch,__line_interaction_interaction,\"allContextElements\");\n                              // story node \'solve CSP\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 _TmpObject = (this.isApplicable_solveCsp_BWD(isApplicableMatch,interaction,combo,flowToInteraction,messageSend,messageReceive,flow,line,operand,guard,spec,useCase,useCaseToInteraction,message,actor,actorToLine,packageDeclaration));\n\n                                 // ensure correct type and really bound of object csp\n                                 JavaSDM.ensure ( _TmpObject instanceof CSP );\n                                 csp = (CSP) _TmpObject;\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              // statement node \'check CSP\'\n                              fujaba__Success = this.isApplicable_checkCsp_BWD(csp);\n                              if (fujaba__Success)\n                              {\n                                 // story node \'add match to rule result\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check object isApplicableMatch is really bound\n                                    JavaSDM.ensure ( isApplicableMatch != null );\n                                    // check object ruleresult is really bound\n                                    JavaSDM.ensure ( ruleresult != null );\n                                    // assign attribute isApplicableMatch\n                                    isApplicableMatch.setRuleName (\"AltStepBFToComboRule\");\n                                    // assign attribute ruleresult\n                                    ruleresult.setSuccess (true);\n\n                                    // create link\n                                    ruleresult.getIsApplicableMatch().add(isApplicableMatch);\n\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                              }\n                              else\n                              {\n\n                              }\n\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return ruleresult;'"
	 * @generated
	 */
	IsApplicableRuleResult isApplicable_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='match.registerObject(\"interaction\", interaction);\nmatch.registerObject(\"combo\", combo);\nmatch.registerObject(\"messageSend\", messageSend);\nmatch.registerObject(\"messageReceive\", messageReceive);\nmatch.registerObject(\"line\", line);\nmatch.registerObject(\"operand\", operand);\nmatch.registerObject(\"guard\", guard);\nmatch.registerObject(\"spec\", spec);\nmatch.registerObject(\"message\", message);\n'"
	 * @generated
	 */
	void registerObjectsToMatch_BWD(Match match, Interaction interaction,
			CombinedFragment combo, MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\n\r\n// Create literals\r\nVariable literal0 = CSPFactoryHelper.eINSTANCE.createVariable(\"literal0\", true, csp);\r\nliteral0.setValue(\"alt\");\r\nliteral0.setType(\"String\");\r\n\r\n// Create attribute variables\r\nVariable var_combo_interactionOperator = CSPFactoryHelper.eINSTANCE.createVariable(\"combo.interactionOperator\", true, csp);\r\nvar_combo_interactionOperator.setValue(combo.getInteractionOperator());\r\nvar_combo_interactionOperator.setType(\"EObject\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\n\r\n// Create constraints\r\nEqInterOperKind eqInterOperKind = new EqInterOperKind();\r\n\r\ncsp.getConstraints().add(eqInterOperKind);\r\n\r\n// Solve CSP\r\neqInterOperKind.setRuleName(\"\");\r\neqInterOperKind.solve(var_combo_interactionOperator,literal0);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isAppropriate_solveCsp_BWD(Match match, Interaction interaction,
			CombinedFragment combo, MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, Lifeline line,
			InteractionOperand operand, InteractionConstraint guard,
			LiteralString spec, Message message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isAppropriate_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='// Create CSP\r\nCSP csp = CspFactory.eINSTANCE.createCSP();\r\nisApplicableMatch.getAttributeInfo().add(csp);\r\n\r\n// Create literals\r\n\r\n// Create attribute variables\r\nVariable var_guard_name = CSPFactoryHelper.eINSTANCE.createVariable(\"guard.name\", true, csp);\r\nvar_guard_name.setValue(guard.getName());\r\nvar_guard_name.setType(\"\");\r\nVariable var_spec_value = CSPFactoryHelper.eINSTANCE.createVariable(\"spec.value\", true, csp);\r\nvar_spec_value.setValue(spec.getValue());\r\nvar_spec_value.setType(\"\");\r\nVariable var_message_name = CSPFactoryHelper.eINSTANCE.createVariable(\"message.name\", true, csp);\r\nvar_message_name.setValue(message.getName());\r\nvar_message_name.setType(\"\");\r\n\r\n// Create explicit parameters\r\n\r\n// Create unbound variables\r\nVariable var_altFlow_name = CSPFactoryHelper.eINSTANCE.createVariable(\"altFlow.name\", csp);\r\nvar_altFlow_name.setType(\"\");\r\nVariable var_alt_condition = CSPFactoryHelper.eINSTANCE.createVariable(\"alt.condition\", csp);\r\nvar_alt_condition.setType(\"\");\r\nVariable var_step_name = CSPFactoryHelper.eINSTANCE.createVariable(\"step.name\", csp);\r\nvar_step_name.setType(\"\");\r\n\r\n// Create constraints\r\nEq eq = new Eq();Eq eq_0 = new Eq();Eq eq_1 = new Eq();\r\n\r\ncsp.getConstraints().add(eq);\r\ncsp.getConstraints().add(eq_0);\r\ncsp.getConstraints().add(eq_1);\r\n\r\n// Solve CSP\r\neq.setRuleName(\"\");\r\neq.solve(var_altFlow_name,var_guard_name);\r\neq_0.setRuleName(\"\");\r\neq_0.solve(var_alt_condition,var_spec_value);\r\neq_1.setRuleName(\"\");\r\neq_1.solve(var_step_name,var_message_name);\r\n\r\n// Snapshot pattern match on which CSP is solved\r\nisApplicableMatch.registerObject(\"interaction\",interaction);\r\nisApplicableMatch.registerObject(\"combo\",combo);\r\nisApplicableMatch.registerObject(\"flowToInteraction\",flowToInteraction);\r\nisApplicableMatch.registerObject(\"messageSend\",messageSend);\r\nisApplicableMatch.registerObject(\"messageReceive\",messageReceive);\r\nisApplicableMatch.registerObject(\"flow\",flow);\r\nisApplicableMatch.registerObject(\"line\",line);\r\nisApplicableMatch.registerObject(\"operand\",operand);\r\nisApplicableMatch.registerObject(\"guard\",guard);\r\nisApplicableMatch.registerObject(\"spec\",spec);\r\nisApplicableMatch.registerObject(\"useCase\",useCase);\r\nisApplicableMatch.registerObject(\"useCaseToInteraction\",useCaseToInteraction);\r\nisApplicableMatch.registerObject(\"message\",message);\r\nisApplicableMatch.registerObject(\"actor\",actor);\r\nisApplicableMatch.registerObject(\"actorToLine\",actorToLine);\r\nisApplicableMatch.registerObject(\"packageDeclaration\",packageDeclaration);\r\nreturn csp;'"
	 * @generated
	 */
	CSP isApplicable_solveCsp_BWD(IsApplicableMatch isApplicableMatch,
			Interaction interaction, CombinedFragment combo,
			FlowToInteractionFragment flowToInteraction,
			MessageOccurrenceSpecification messageSend,
			MessageOccurrenceSpecification messageReceive, BasicFlow flow,
			Lifeline line, InteractionOperand operand,
			InteractionConstraint guard, LiteralString spec, UseCase useCase,
			UseCaseToInteraction useCaseToInteraction, Message message,
			Actor actor, ActorToLifeline actorToLine,
			PackageDeclaration packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return csp.check();'"
	 * @generated
	 */
	boolean isApplicable_checkCsp_BWD(CSP csp);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='ruleresult.registerObject(\"interaction\", interaction);\nruleresult.registerObject(\"combo\", combo);\nruleresult.registerObject(\"flowToInteraction\", flowToInteraction);\nruleresult.registerObject(\"messageSend\", messageSend);\nruleresult.registerObject(\"messageReceive\", messageReceive);\nruleresult.registerObject(\"flow\", flow);\nruleresult.registerObject(\"step\", step);\nruleresult.registerObject(\"alt\", alt);\nruleresult.registerObject(\"line\", line);\nruleresult.registerObject(\"stepToCombo\", stepToCombo);\nruleresult.registerObject(\"operand\", operand);\nruleresult.registerObject(\"alternative1ToOperand\", alternative1ToOperand);\nruleresult.registerObject(\"guard\", guard);\nruleresult.registerObject(\"spec\", spec);\nruleresult.registerObject(\"altFlow\", altFlow);\nruleresult.registerObject(\"altFlowToOperand\", altFlowToOperand);\nruleresult.registerObject(\"useCase\", useCase);\nruleresult.registerObject(\"useCaseToInteraction\", useCaseToInteraction);\nruleresult.registerObject(\"message\", message);\nruleresult.registerObject(\"stepToMessage\", stepToMessage);\nruleresult.registerObject(\"actor\", actor);\nruleresult.registerObject(\"actorToLine\", actorToLine);\nruleresult.registerObject(\"packageDeclaration\", packageDeclaration);\n'"
	 * @generated
	 */
	void registerObjects_BWD(PerformRuleResult ruleresult, EObject interaction,
			EObject combo, EObject flowToInteraction, EObject messageSend,
			EObject messageReceive, EObject flow, EObject step, EObject alt,
			EObject line, EObject stepToCombo, EObject operand,
			EObject alternative1ToOperand, EObject guard, EObject spec,
			EObject altFlow, EObject altFlowToOperand, EObject useCase,
			EObject useCaseToInteraction, EObject message,
			EObject stepToMessage, EObject actor, EObject actorToLine,
			EObject packageDeclaration);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='return true && match.getObject(\"combo\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getCombinedFragment()) && match.getObject(\"messageSend\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"messageReceive\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessageOccurrenceSpecification()) && match.getObject(\"operand\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionOperand()) && match.getObject(\"guard\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getInteractionConstraint()) && match.getObject(\"spec\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getLiteralString()) && match.getObject(\"message\").eClass().equals(ModalSequenceDiagram.ModalSequenceDiagramPackage.eINSTANCE.getMessage());'"
	 * @generated
	 */
	boolean checkTypes_BWD(Match match);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_275861 = null;\n      InteractionOperand __DEC_messageReceive_fragment_698978 = null;\n      InteractionOperand __DEC_messageSend_fragment_987051 = null;\n      Interaction __DEC_operand_enclosingInteraction_159240 = null;\n      InteractionOperand __DEC_operand_fragment_21435 = null;\n      InteractionOperand __DEC_guard_guard_903764 = null;\n      CombinedFragment __DEC_operand_operand_920346 = null;\n      Constraint __DEC_spec_specification_814121 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_144177 = null;\n      Message __DEC_messageReceive_receiveEvent_144177 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_697002 = null;\n      Message __DEC_messageSend_receiveEvent_697002 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_478788 = null;\n      Message __DEC_messageReceive_sendEvent_478788 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_36873 = null;\n      Message __DEC_messageSend_sendEvent_36873 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_678162 = null;\n      MessageEnd __DEC_message_message_678162 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingInteraction is really bound\n         JavaSDM.ensure ( _edge_enclosingInteraction != null );\n         // bind object\n         _TmpObject = _edge_enclosingInteraction.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_enclosingInteraction.getTrg ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // check link fragment from combo to interaction\n         JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n         ));\n\n         // iterate to-many link fragment from interaction to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToMessageReceive = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               message = messageReceive.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link receiveEvent from message to messageReceive\n               JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n               ));\n\n               // bind object\n               _TmpObject = message.getSendEvent ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link fragment from messageSend to interaction\n               JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n               ));\n\n               // check link message from messageSend to message\n               JavaSDM.ensure (message.equals (messageSend.getMessage ()\n               ));\n\n               // iterate to-many link lifeline from interaction to line\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n               while ( fujaba__IterInteractionToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check link covered from line to combo\n                     JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                     // check link covered from line to messageReceive\n                     JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_275861 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_275861 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_275861 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_275861 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_275861.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_698978 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_698978 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_698978 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_698978 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_698978.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_987051 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_987051 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_987051 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_987051 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_987051.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_159240 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_159240 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_159240 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_159240 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_159240.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_21435 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_21435 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_21435 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_21435 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_21435.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_903764 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_903764 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_903764 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_903764.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_903764 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_903764.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_920346 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_920346 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_920346 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_920346.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_920346 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_920346.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_814121 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_814121 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_814121 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_814121.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_814121 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_814121.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_144177\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_144177 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_144177.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_144177 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_144177.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_144177 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_144177 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_144177 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_144177.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_697002\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_697002 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_697002.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_697002 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_697002.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_697002 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_697002 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_697002 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_697002.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_478788\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_478788 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_478788.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_478788 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_478788.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_478788 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_478788 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_478788 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_478788.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_36873\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_36873 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_36873.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_36873 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_36873.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_36873 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_36873 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_36873 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_36873.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_678162\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_678162 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_678162.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_678162 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_678162.next ();\n\n                                       // check object __DEC_message_message_678162 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_678162 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_678162 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_678162.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_678162 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_678162.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_enclosingInteraction is really bound\n                              JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_enclosingInteraction to combo\n                              JavaSDM.ensure (combo.equals (_edge_enclosingInteraction.getSrc ()\n                              ));\n\n                              // check link trg from _edge_enclosingInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_109(
			EMoflonEdge _edge_enclosingInteraction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_740317 = null;\n      InteractionOperand __DEC_messageReceive_fragment_221393 = null;\n      InteractionOperand __DEC_messageSend_fragment_212237 = null;\n      Interaction __DEC_operand_enclosingInteraction_721790 = null;\n      InteractionOperand __DEC_operand_fragment_120735 = null;\n      InteractionOperand __DEC_guard_guard_557061 = null;\n      CombinedFragment __DEC_operand_operand_823054 = null;\n      Constraint __DEC_spec_specification_799432 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_62139 = null;\n      Message __DEC_messageReceive_receiveEvent_62139 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_974496 = null;\n      Message __DEC_messageSend_receiveEvent_974496 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_207357 = null;\n      Message __DEC_messageReceive_sendEvent_207357 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_45647 = null;\n      Message __DEC_messageSend_sendEvent_45647 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_998613 = null;\n      MessageEnd __DEC_message_message_998613 = null;\n      Match match = null;\n      Iterator fujaba__IterInteractionTo_edge_enclosingInteraction = null;\n      EMoflonEdge _edge_enclosingInteraction = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterInteractionToMessage = null;\n      Message message = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_fragment.getTrg ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // check link fragment from combo to interaction\n         JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n         ));\n\n         // iterate to-many link lifeline from interaction to line\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n         while ( fujaba__IterInteractionToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link covered from line to combo\n               JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link message from interaction to message\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToMessage = new ArrayList(interaction.getMessage()).iterator ();\n\n                     while ( fujaba__IterInteractionToMessage.hasNext () )\n                     {\n                        try\n                        {\n                           message = (Message) fujaba__IterInteractionToMessage.next ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check link fragment from messageReceive to interaction\n                           JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getSendEvent ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageSend to interaction\n                           JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                           ));\n\n                           // check link message from messageSend to message\n                           JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                           ));\n\n                           // check link covered from line to messageReceive\n                           JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                           // iterate to-many link trg from interaction to _edge_enclosingInteraction\n                           fujaba__Success = false;\n\n                           fujaba__IterInteractionTo_edge_enclosingInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,EMoflonEdge.class,\"trg\")).iterator ();\n\n                           while ( fujaba__IterInteractionTo_edge_enclosingInteraction.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_enclosingInteraction = (EMoflonEdge) fujaba__IterInteractionTo_edge_enclosingInteraction.next ();\n\n                                 // check object _edge_enclosingInteraction is really bound\n                                 JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                                 // check isomorphic binding between objects _edge_fragment and _edge_enclosingInteraction \n                                 JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingInteraction) );\n\n                                 // check link src from _edge_enclosingInteraction to combo\n                                 JavaSDM.ensure (combo.equals (_edge_enclosingInteraction.getSrc ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_740317 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_740317 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_740317 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_740317 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_740317.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_221393 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_221393 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_221393 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_221393 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_221393.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_212237 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_212237 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_212237 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_212237 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_212237.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_721790 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_721790 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_721790 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_721790 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_721790.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_120735 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_120735 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_120735 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_120735 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_120735.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_557061 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_557061 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_557061 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_557061.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_557061 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_557061.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_823054 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_823054 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_823054 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_823054.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_823054 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_823054.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_799432 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_799432 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_799432 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_799432.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_799432 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_799432.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_62139\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_62139 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_62139.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_62139 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_62139.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_62139 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_62139 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_62139 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_62139.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_974496\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_974496 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_974496.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_974496 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_974496.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_974496 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_974496 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_974496 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_974496.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_207357\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_207357 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_207357.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_207357 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_207357.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_207357 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_207357 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_207357 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_207357.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_45647\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_45647 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_45647.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_45647 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_45647.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_45647 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_45647 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_45647 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_45647.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_998613\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_998613 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_998613.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_998613 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_998613.next ();\n\n                                             // check object __DEC_message_message_998613 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_998613 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_998613 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_998613.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_998613 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_998613.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_enclosingInteraction is really bound\n                                    JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                                    // check object _edge_fragment is really bound\n                                    JavaSDM.ensure ( _edge_fragment != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_fragment and _edge_enclosingInteraction \n                                    JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingInteraction) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_enclosingInteraction to combo\n                                    JavaSDM.ensure (combo.equals (_edge_enclosingInteraction.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_fragment to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_fragment.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_enclosingInteraction to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_fragment to combo\n                                    JavaSDM.ensure (combo.equals (_edge_fragment.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from line to messageReceive\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_110(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_592431 = null;\n      InteractionOperand __DEC_messageReceive_fragment_740320 = null;\n      InteractionOperand __DEC_messageSend_fragment_703148 = null;\n      Interaction __DEC_operand_enclosingInteraction_82067 = null;\n      InteractionOperand __DEC_operand_fragment_240437 = null;\n      InteractionOperand __DEC_guard_guard_989773 = null;\n      CombinedFragment __DEC_operand_operand_669403 = null;\n      Constraint __DEC_spec_specification_492990 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_313078 = null;\n      Message __DEC_messageReceive_receiveEvent_313078 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_847197 = null;\n      Message __DEC_messageSend_receiveEvent_847197 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_128945 = null;\n      Message __DEC_messageReceive_sendEvent_128945 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_691961 = null;\n      Message __DEC_messageSend_sendEvent_691961 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_946735 = null;\n      MessageEnd __DEC_message_message_946735 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingInteraction is really bound\n         JavaSDM.ensure ( _edge_enclosingInteraction != null );\n         // bind object\n         _TmpObject = _edge_enclosingInteraction.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_enclosingInteraction.getTrg ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // check link fragment from messageReceive to interaction\n         JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n         ));\n\n         // check link fragment from messageSend to interaction\n         JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n         ));\n\n         // check link message from message to interaction\n         JavaSDM.ensure (interaction.equals (message.getInteraction ()\n         ));\n\n         // iterate to-many link fragment from interaction to combo\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link lifeline from interaction to line\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n               while ( fujaba__IterInteractionToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check link covered from line to combo\n                     JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                     // check link covered from line to messageReceive\n                     JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_592431 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_592431 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_592431 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_592431 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_592431.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_740320 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_740320 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_740320 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_740320 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_740320.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_703148 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_703148 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_703148 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_703148 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_703148.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_82067 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_82067 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_82067 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_82067 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_82067.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_240437 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_240437 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_240437 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_240437 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_240437.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_989773 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_989773 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_989773 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_989773.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_989773 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_989773.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_669403 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_669403 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_669403 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_669403.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_669403 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_669403.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_492990 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_492990 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_492990 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_492990.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_492990 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_492990.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_313078\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_313078 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_313078.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_313078 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_313078.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_313078 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_313078 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_313078 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_313078.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_847197\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_847197 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_847197.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_847197 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_847197.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_847197 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_847197 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_847197 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_847197.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_128945\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_128945 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_128945.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_128945 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_128945.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_128945 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_128945 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_128945 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_128945.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_691961\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_691961 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_691961.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_691961 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_691961.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_691961 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_691961 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_691961 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_691961.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_946735\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_946735 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_946735.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_946735 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_946735.next ();\n\n                                       // check object __DEC_message_message_946735 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_946735 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_946735 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_946735.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_946735 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_946735.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_enclosingInteraction is really bound\n                              JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_enclosingInteraction to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_enclosingInteraction.getSrc ()\n                              ));\n\n                              // check link trg from _edge_enclosingInteraction to interaction\n                              JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_111(
			EMoflonEdge _edge_enclosingInteraction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_997859 = null;\n      InteractionOperand __DEC_messageReceive_fragment_480850 = null;\n      InteractionOperand __DEC_messageSend_fragment_149138 = null;\n      Interaction __DEC_operand_enclosingInteraction_641217 = null;\n      InteractionOperand __DEC_operand_fragment_56572 = null;\n      InteractionOperand __DEC_guard_guard_934223 = null;\n      CombinedFragment __DEC_operand_operand_145529 = null;\n      Constraint __DEC_spec_specification_884977 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_958500 = null;\n      Message __DEC_messageReceive_receiveEvent_958500 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_779988 = null;\n      Message __DEC_messageSend_receiveEvent_779988 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_872218 = null;\n      Message __DEC_messageReceive_sendEvent_872218 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_588340 = null;\n      Message __DEC_messageSend_sendEvent_588340 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_430224 = null;\n      MessageEnd __DEC_message_message_430224 = null;\n      Match match = null;\n      Iterator fujaba__IterInteractionTo_edge_enclosingInteraction = null;\n      EMoflonEdge _edge_enclosingInteraction = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link fragment from interaction to combo\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link lifeline from interaction to line\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n               while ( fujaba__IterInteractionToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // bind object\n                     _TmpObject = _edge_fragment.getTrg ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check link fragment from messageSend to interaction\n                     JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                     ));\n\n                     // check link covered from line to combo\n                     JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // iterate to-many link fragment from interaction to messageReceive\n                           fujaba__Success = false;\n\n                           fujaba__IterInteractionToMessageReceive = new ArrayList(interaction.getFragment()).iterator ();\n\n                           while ( fujaba__IterInteractionToMessageReceive.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterInteractionToMessageReceive.next ();\n\n                                 // ensure correct type and really bound of object messageReceive\n                                 JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                 messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                                 // check isomorphic binding between objects messageSend and messageReceive \n                                 JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                 // bind object\n                                 message = messageReceive.getMessage ();\n\n                                 // check object message is really bound\n                                 JavaSDM.ensure ( message != null );\n\n                                 // check link message from message to interaction\n                                 JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                 ));\n\n                                 // check link message from messageSend to message\n                                 JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                 ));\n\n                                 // check link receiveEvent from message to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                 ));\n\n                                 // check link sendEvent from message to messageSend\n                                 JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                 ));\n\n                                 // check link covered from line to messageReceive\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                 // iterate to-many link trg from interaction to _edge_enclosingInteraction\n                                 fujaba__Success = false;\n\n                                 fujaba__IterInteractionTo_edge_enclosingInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                 while ( fujaba__IterInteractionTo_edge_enclosingInteraction.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _edge_enclosingInteraction = (EMoflonEdge) fujaba__IterInteractionTo_edge_enclosingInteraction.next ();\n\n                                       // check object _edge_enclosingInteraction is really bound\n                                       JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                                       // check isomorphic binding between objects _edge_fragment and _edge_enclosingInteraction \n                                       JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingInteraction) );\n\n                                       // check link src from _edge_enclosingInteraction to messageSend\n                                       JavaSDM.ensure (messageSend.equals (_edge_enclosingInteraction.getSrc ()\n                                       ));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_997859 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_997859 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_997859 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_997859 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_997859.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_480850 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_480850 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_480850 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_480850 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_480850.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_149138 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_149138 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_149138 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_149138 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_149138.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_641217 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_641217 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_641217 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_641217 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_641217.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_56572 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_56572 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_56572 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_56572 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_56572.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_934223 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_934223 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_934223 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_934223.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_934223 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_934223.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_145529 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_145529 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_145529 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_145529.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_145529 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_145529.equals (combo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_884977 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_884977 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_884977 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_884977.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_884977 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_884977.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_958500\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_958500 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_958500.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_958500 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_958500.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_958500 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_958500 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_958500 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_958500.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_779988\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_779988 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_779988.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_779988 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_779988.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_779988 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_779988 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_779988 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_779988.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_872218\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_872218 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_872218.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_872218 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_872218.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_872218 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_872218 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_872218 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_872218.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_588340\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_588340 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_588340.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_588340 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_588340.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_588340 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_588340 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_588340 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_588340.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_430224\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_430224 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_430224.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_430224 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_430224.next ();\n\n                                                   // check object __DEC_message_message_430224 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_430224 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_430224 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_430224.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_430224 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_430224.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_enclosingInteraction is really bound\n                                          JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                                          // check object _edge_fragment is really bound\n                                          JavaSDM.ensure ( _edge_fragment != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_fragment and _edge_enclosingInteraction \n                                          JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingInteraction) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_enclosingInteraction to messageSend\n                                          JavaSDM.ensure (messageSend.equals (_edge_enclosingInteraction.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_fragment to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_fragment.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_enclosingInteraction to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_fragment to messageSend\n                                          JavaSDM.ensure (messageSend.equals (_edge_fragment.getTrg ()\n                                          ));\n\n                                          // check link covered from line to combo\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                          // check link covered from line to messageReceive\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_112(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_278175 = null;\n      InteractionOperand __DEC_messageReceive_fragment_770636 = null;\n      InteractionOperand __DEC_messageSend_fragment_56630 = null;\n      Interaction __DEC_operand_enclosingInteraction_752624 = null;\n      InteractionOperand __DEC_operand_fragment_659494 = null;\n      InteractionOperand __DEC_guard_guard_268558 = null;\n      CombinedFragment __DEC_operand_operand_119893 = null;\n      Constraint __DEC_spec_specification_229481 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_53645 = null;\n      Message __DEC_messageReceive_receiveEvent_53645 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_698929 = null;\n      Message __DEC_messageSend_receiveEvent_698929 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_248487 = null;\n      Message __DEC_messageReceive_sendEvent_248487 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_761149 = null;\n      Message __DEC_messageSend_sendEvent_761149 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_664526 = null;\n      MessageEnd __DEC_message_message_664526 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Message message = null;\n      MessageOccurrenceSpecification messageReceive = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_enclosingInteraction is really bound\n         JavaSDM.ensure ( _edge_enclosingInteraction != null );\n         // bind object\n         _TmpObject = _edge_enclosingInteraction.getSrc ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         message = messageReceive.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link receiveEvent from message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n         ));\n\n         // bind object\n         _TmpObject = _edge_enclosingInteraction.getTrg ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // check link fragment from messageReceive to interaction\n         JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n         ));\n\n         // check link message from message to interaction\n         JavaSDM.ensure (interaction.equals (message.getInteraction ()\n         ));\n\n         // iterate to-many link fragment from interaction to combo\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link fragment from interaction to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n               while ( fujaba__IterInteractionToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link message from messageSend to message\n                     JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // iterate to-many link lifeline from interaction to line\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n                     while ( fujaba__IterInteractionToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check link covered from line to combo\n                           JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                           // check link covered from line to messageReceive\n                           JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_278175 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_278175 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_278175 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_278175 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_278175.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_770636 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_770636 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_770636 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_770636 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_770636.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_56630 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_56630 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_56630 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_56630 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_56630.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_752624 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_752624 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_752624 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_752624 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_752624.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_659494 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_659494 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_659494 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_659494 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_659494.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_268558 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_268558 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_268558 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_268558.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_268558 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_268558.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_119893 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_119893 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_119893 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_119893.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_119893 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_119893.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_229481 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_229481 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_229481 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_229481.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_229481 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_229481.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_53645\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_53645 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_53645.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_53645 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_53645.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_53645 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_53645 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_53645 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_53645.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_698929\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_698929 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_698929.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_698929 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_698929.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_698929 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_698929 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_698929 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_698929.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_248487\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_248487 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_248487.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_248487 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_248487.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_248487 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_248487 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_248487 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_248487.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_761149\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_761149 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_761149.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_761149 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_761149.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_761149 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_761149 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_761149 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_761149.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_664526\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_664526 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_664526.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_664526 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_664526.next ();\n\n                                             // check object __DEC_message_message_664526 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_664526 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_664526 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_664526.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_664526 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_664526.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_enclosingInteraction is really bound\n                                    JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_enclosingInteraction to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_enclosingInteraction.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_enclosingInteraction to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from line to messageReceive\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_113(
			EMoflonEdge _edge_enclosingInteraction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_938480 = null;\n      InteractionOperand __DEC_messageReceive_fragment_688713 = null;\n      InteractionOperand __DEC_messageSend_fragment_649896 = null;\n      Interaction __DEC_operand_enclosingInteraction_449415 = null;\n      InteractionOperand __DEC_operand_fragment_793130 = null;\n      InteractionOperand __DEC_guard_guard_863553 = null;\n      CombinedFragment __DEC_operand_operand_752738 = null;\n      Constraint __DEC_spec_specification_670509 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_960599 = null;\n      Message __DEC_messageReceive_receiveEvent_960599 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_841401 = null;\n      Message __DEC_messageSend_receiveEvent_841401 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_311289 = null;\n      Message __DEC_messageReceive_sendEvent_311289 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_847088 = null;\n      Message __DEC_messageSend_sendEvent_847088 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_167960 = null;\n      MessageEnd __DEC_message_message_167960 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterInteractionTo_edge_enclosingInteraction = null;\n      EMoflonEdge _edge_enclosingInteraction = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_fragment is really bound\n         JavaSDM.ensure ( _edge_fragment != null );\n         // bind object\n         _TmpObject = _edge_fragment.getSrc ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link trg from interaction to _edge_enclosingInteraction\n         fujaba__Success = false;\n\n         fujaba__IterInteractionTo_edge_enclosingInteraction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,EMoflonEdge.class,\"trg\")).iterator ();\n\n         while ( fujaba__IterInteractionTo_edge_enclosingInteraction.hasNext () )\n         {\n            try\n            {\n               _edge_enclosingInteraction = (EMoflonEdge) fujaba__IterInteractionTo_edge_enclosingInteraction.next ();\n\n               // check object _edge_enclosingInteraction is really bound\n               JavaSDM.ensure ( _edge_enclosingInteraction != null );\n               // check isomorphic binding between objects _edge_fragment and _edge_enclosingInteraction \n               JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingInteraction) );\n\n               // iterate to-many link fragment from interaction to combo\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n               while ( fujaba__IterInteractionToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link lifeline from interaction to line\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n                     while ( fujaba__IterInteractionToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check link covered from line to combo\n                           JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // iterate to-many link fragment from interaction to messageSend\n                                 fujaba__Success = false;\n\n                                 fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n                                 while ( fujaba__IterInteractionToMessageSend.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                                       // ensure correct type and really bound of object messageSend\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                                       // bind object\n                                       message = messageSend.getMessage ();\n\n                                       // check object message is really bound\n                                       JavaSDM.ensure ( message != null );\n\n                                       // check link message from message to interaction\n                                       JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                       ));\n\n                                       // bind object\n                                       _TmpObject = message.getReceiveEvent ();\n\n                                       // ensure correct type and really bound of object messageReceive\n                                       JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                                       messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                                       // check isomorphic binding between objects messageSend and messageReceive \n                                       JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                       // check link fragment from messageReceive to interaction\n                                       JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                       ));\n\n                                       // check link message from messageReceive to message\n                                       JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                       ));\n\n                                       // check link sendEvent from message to messageSend\n                                       JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                       ));\n\n                                       // check link src from _edge_enclosingInteraction to messageReceive\n                                       JavaSDM.ensure (messageReceive.equals (_edge_enclosingInteraction.getSrc ()\n                                       ));\n\n                                       // check link trg from _edge_fragment to messageReceive\n                                       JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                       ));\n\n                                       // check link covered from line to messageReceive\n                                       JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                       // story node \'test core match and DECs\'\n                                       try \n                                       {\n                                          fujaba__Success = false; \n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_combo_fragment_938480 = combo.getEnclosingOperand ();\n\n                                             // check object __DEC_combo_fragment_938480 is really bound\n                                             JavaSDM.ensure ( __DEC_combo_fragment_938480 != null );\n\n                                             // check isomorphic binding between objects __DEC_combo_fragment_938480 and operand \n                                             JavaSDM.ensure ( !__DEC_combo_fragment_938480.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageReceive_fragment_688713 = messageReceive.getEnclosingOperand ();\n\n                                             // check object __DEC_messageReceive_fragment_688713 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_fragment_688713 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageReceive_fragment_688713 and operand \n                                             JavaSDM.ensure ( !__DEC_messageReceive_fragment_688713.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_messageSend_fragment_649896 = messageSend.getEnclosingOperand ();\n\n                                             // check object __DEC_messageSend_fragment_649896 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_fragment_649896 != null );\n\n                                             // check isomorphic binding between objects __DEC_messageSend_fragment_649896 and operand \n                                             JavaSDM.ensure ( !__DEC_messageSend_fragment_649896.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_enclosingInteraction_449415 = operand.getEnclosingInteraction ();\n\n                                             // check object __DEC_operand_enclosingInteraction_449415 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_enclosingInteraction_449415 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_enclosingInteraction_449415 and interaction \n                                             JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_449415.equals (interaction) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_fragment_793130 = operand.getEnclosingOperand ();\n\n                                             // check object __DEC_operand_fragment_793130 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_fragment_793130 != null );\n\n                                             // check isomorphic binding between objects __DEC_operand_fragment_793130 and operand \n                                             JavaSDM.ensure ( !__DEC_operand_fragment_793130.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // negative check for link packagedElement from guard\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // negative check for link packagedElement from spec\n                                          JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_guard_guard_863553 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                             // check object __DEC_guard_guard_863553 is really bound\n                                             JavaSDM.ensure ( __DEC_guard_guard_863553 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(guard.equals(__DEC_guard_guard_863553.getGuard()));\n\n                                             // check isomorphic binding between objects __DEC_guard_guard_863553 and operand \n                                             JavaSDM.ensure ( !__DEC_guard_guard_863553.equals (operand) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_operand_operand_752738 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                             // check object __DEC_operand_operand_752738 is really bound\n                                             JavaSDM.ensure ( __DEC_operand_operand_752738 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(__DEC_operand_operand_752738.getOperand().contains(operand));\n\n                                             // check isomorphic binding between objects __DEC_operand_operand_752738 and combo \n                                             JavaSDM.ensure ( !__DEC_operand_operand_752738.equals (combo) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // bind object\n                                             __DEC_spec_specification_670509 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                             // check object __DEC_spec_specification_670509 is really bound\n                                             JavaSDM.ensure ( __DEC_spec_specification_670509 != null );\n\n                                             // check if contained via correct reference\n                                             JavaSDM.ensure(spec.equals(__DEC_spec_specification_670509.getSpecification()));\n\n                                             // check isomorphic binding between objects __DEC_spec_specification_670509 and guard \n                                             JavaSDM.ensure ( !__DEC_spec_specification_670509.equals (guard) );\n\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_960599\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_960599 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_960599.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_receiveEvent_960599 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_960599.next ();\n\n                                                   // check object __DEC_messageReceive_receiveEvent_960599 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_960599 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_960599 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_960599.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_841401\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_841401 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_841401.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_receiveEvent_841401 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_841401.next ();\n\n                                                   // check object __DEC_messageSend_receiveEvent_841401 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_receiveEvent_841401 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_receiveEvent_841401 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_841401.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_311289\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_311289 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_311289.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageReceive_sendEvent_311289 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_311289.next ();\n\n                                                   // check object __DEC_messageReceive_sendEvent_311289 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_sendEvent_311289 != null );\n                                                   // check isomorphic binding between objects __DEC_messageReceive_sendEvent_311289 and message \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_311289.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_847088\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_847088 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_847088.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_messageSend_sendEvent_847088 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_847088.next ();\n\n                                                   // check object __DEC_messageSend_sendEvent_847088 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_sendEvent_847088 != null );\n                                                   // check isomorphic binding between objects __DEC_messageSend_sendEvent_847088 and message \n                                                   JavaSDM.ensure ( !__DEC_messageSend_sendEvent_847088.equals (message) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check negative bindings\n                                          try\n                                          {\n                                             fujaba__Success = false;\n\n                                             // iterate to-many link message from message to __DEC_message_message_167960\n                                             fujaba__Success = false;\n\n                                             fujaba__IterMessageTo__DEC_message_message_167960 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                             while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_167960.hasNext () )\n                                             {\n                                                try\n                                                {\n                                                   __DEC_message_message_167960 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_167960.next ();\n\n                                                   // check object __DEC_message_message_167960 is really bound\n                                                   JavaSDM.ensure ( __DEC_message_message_167960 != null );\n                                                   // check isomorphic binding between objects __DEC_message_message_167960 and messageReceive \n                                                   JavaSDM.ensure ( !__DEC_message_message_167960.equals (messageReceive) );\n\n                                                   // check isomorphic binding between objects __DEC_message_message_167960 and messageSend \n                                                   JavaSDM.ensure ( !__DEC_message_message_167960.equals (messageSend) );\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n                                             }\n                                             JavaSDM.ensure (fujaba__Success);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n                                          fujaba__Success = !(fujaba__Success);\n\n                                          JavaSDM.ensure ( fujaba__Success );\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from operand to operand\n                                          JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                          )));\n\n                                          // check object _edge_enclosingInteraction is really bound\n                                          JavaSDM.ensure ( _edge_enclosingInteraction != null );\n                                          // check object _edge_fragment is really bound\n                                          JavaSDM.ensure ( _edge_fragment != null );\n                                          // check object combo is really bound\n                                          JavaSDM.ensure ( combo != null );\n                                          // check object guard is really bound\n                                          JavaSDM.ensure ( guard != null );\n                                          // check object interaction is really bound\n                                          JavaSDM.ensure ( interaction != null );\n                                          // check object line is really bound\n                                          JavaSDM.ensure ( line != null );\n                                          // check object message is really bound\n                                          JavaSDM.ensure ( message != null );\n                                          // check object messageReceive is really bound\n                                          JavaSDM.ensure ( messageReceive != null );\n                                          // check object messageSend is really bound\n                                          JavaSDM.ensure ( messageSend != null );\n                                          // check object operand is really bound\n                                          JavaSDM.ensure ( operand != null );\n                                          // check object spec is really bound\n                                          JavaSDM.ensure ( spec != null );\n                                          // check isomorphic binding between objects _edge_fragment and _edge_enclosingInteraction \n                                          JavaSDM.ensure ( !_edge_fragment.equals (_edge_enclosingInteraction) );\n\n                                          // check isomorphic binding between objects messageSend and messageReceive \n                                          JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                          // check link fragment from combo to interaction\n                                          JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from messageReceive to interaction\n                                          JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from messageSend to interaction\n                                          JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                                          ));\n\n                                          // check link fragment from operand to interaction\n                                          JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                          )));\n\n                                          // check link fragment from combo to operand\n                                          JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageReceive to operand\n                                          JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                          )));\n\n                                          // check link fragment from messageSend to operand\n                                          JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                          )));\n\n                                          // check link guard from operand to guard\n                                          JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                          ));\n\n                                          // check link lifeline from line to interaction\n                                          JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                          ));\n\n                                          // check link message from message to interaction\n                                          JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                          ));\n\n                                          // check link message from messageReceive to message\n                                          JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                          ));\n\n                                          // check link message from messageSend to message\n                                          JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                          ));\n\n                                          // check link receiveEvent from message to messageSend\n                                          JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                          )));\n\n                                          // check link sendEvent from message to messageSend\n                                          JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                          ));\n\n                                          // check link sendEvent from message to messageReceive\n                                          JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                          )));\n\n                                          // check link operand from operand to combo\n                                          JavaSDM.ensure (combo.equals (operand.eContainer()\n                                          ));\n\n                                          // check link specification from spec to guard\n                                          JavaSDM.ensure (guard.equals (spec.eContainer()\n                                          ));\n\n                                          // check link src from _edge_enclosingInteraction to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (_edge_enclosingInteraction.getSrc ()\n                                          ));\n\n                                          // check link src from _edge_fragment to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_fragment.getSrc ()\n                                          ));\n\n                                          // check link trg from _edge_enclosingInteraction to interaction\n                                          JavaSDM.ensure (interaction.equals (_edge_enclosingInteraction.getTrg ()\n                                          ));\n\n                                          // check link trg from _edge_fragment to messageReceive\n                                          JavaSDM.ensure (messageReceive.equals (_edge_fragment.getTrg ()\n                                          ));\n\n                                          // check link covered from line to combo\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                          // check link covered from line to messageReceive\n                                          JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                          // check link covered from operand to line\n                                          JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                          // create object match\n                                          match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                          // assign attribute match\n                                          match.setRuleName (__eClass.getName());\n                                          // statement node \'bookkeeping with generic isAppropriate method\'\n                                          fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                                          if (fujaba__Success)\n                                          {\n                                             // statement node \'Ensure that the correct types of elements are matched\'\n                                             fujaba__Success = this.checkTypes_BWD(match);\n                                             if (fujaba__Success)\n                                             {\n                                                // story node \'Add match to rule result\'\n                                                try \n                                                {\n                                                   fujaba__Success = false; \n\n                                                   // check object __performOperation is really bound\n                                                   JavaSDM.ensure ( __performOperation != null );\n                                                   // check object __result is really bound\n                                                   JavaSDM.ensure ( __result != null );\n                                                   // check object match is really bound\n                                                   JavaSDM.ensure ( match != null );\n\n                                                   // create link\n                                                   org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                   // create link\n                                                   __result.getContents().add(match);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n\n                                             }\n                                             else\n                                             {\n\n                                             }\n\n                                          }\n                                          else\n                                          {\n\n                                          }\n                                          fujaba__Success = true;\n                                       }\n                                       catch ( JavaSDMException fujaba__InternalException )\n                                       {\n                                          fujaba__Success = false;\n                                       }\n\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_114(
			EMoflonEdge _edge_fragment);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_800243 = null;\n      NormalStep __DEC_alt_stepAlternative_343600 = null;\n      Flow __DEC_step_steps_738673 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_314140 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_314140 = null;\n      Match match = null;\n      PackageDeclaration packageDeclaration = null;\n      AlternativeFlow altFlow = null;\n      AlternativeFlowAlternative alt = null;\n      UseCase useCase = null;\n      BasicFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_stepAlternative is really bound\n         JavaSDM.ensure ( _edge_stepAlternative != null );\n         // bind object\n         _TmpObject = _edge_stepAlternative.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof BasicFlow ? (BasicFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof BasicFlow );\n         flow = (BasicFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         _TmpObject = _edge_stepAlternative.getTrg ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         _TmpObject = alt.getRef ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // check link stepAlternative from alt to step\n         JavaSDM.ensure (step.equals (alt.eContainer()\n         ));\n\n         // bind object\n         packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n         // check link actors from actor to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_800243 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_800243 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_800243 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_800243.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_800243 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_800243.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_343600 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_343600 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_343600 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_343600.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_343600 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_343600.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_738673 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_738673 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_738673 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_738673.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_738673 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_738673.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_738673 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_738673.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_314140\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_314140 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_314140.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_314140 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_314140.next ();\n\n                     // check object __DEC_altFlow_ref_314140 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_314140 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_314140 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_314140.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_stepAlternative is really bound\n            JavaSDM.ensure ( _edge_stepAlternative != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link actors from actor to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_stepAlternative to step\n            JavaSDM.ensure (step.equals (_edge_stepAlternative.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_stepAlternative to alt\n            JavaSDM.ensure (alt.equals (_edge_stepAlternative.getTrg ()\n            ));\n\n            // check link useCases from useCase to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_29(
			EMoflonEdge _edge_stepAlternative);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_960182 = null;\n      NormalStep __DEC_alt_stepAlternative_240912 = null;\n      Flow __DEC_step_steps_282810 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_483547 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_483547 = null;\n      Match match = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      BasicFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n      AlternativeFlow altFlow = null;\n      AlternativeFlowAlternative alt = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_ref is really bound\n         JavaSDM.ensure ( _edge_ref != null );\n         // bind object\n         _TmpObject = _edge_ref.getSrc ();\n\n         // ensure correct type and really bound of object alt\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n         alt = (AlternativeFlowAlternative) _TmpObject;\n\n         // bind object\n         _TmpObject = alt.getRef ();\n\n         // ensure correct type and really bound of object altFlow\n         JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n         altFlow = (AlternativeFlow) _TmpObject;\n\n         // bind object\n         step = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n         // check object step is really bound\n         JavaSDM.ensure ( step != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(step.getStepAlternative().contains(alt));\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof BasicFlow ? (BasicFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof BasicFlow );\n         flow = (BasicFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // check link trg from _edge_ref to altFlow\n         JavaSDM.ensure (altFlow.equals (_edge_ref.getTrg ()\n         ));\n\n         // bind object\n         packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n         // check link actors from actor to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n         ));\n\n         // story node \'test core match and DECs\'\n         try \n         {\n            fujaba__Success = false; \n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_altFlow_flows_960182 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n               // check object __DEC_altFlow_flows_960182 is really bound\n               JavaSDM.ensure ( __DEC_altFlow_flows_960182 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_altFlow_flows_960182.getFlows().contains(altFlow));\n\n               // check isomorphic binding between objects __DEC_altFlow_flows_960182 and useCase \n               JavaSDM.ensure ( !__DEC_altFlow_flows_960182.equals (useCase) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_alt_stepAlternative_240912 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n               // check object __DEC_alt_stepAlternative_240912 is really bound\n               JavaSDM.ensure ( __DEC_alt_stepAlternative_240912 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_alt_stepAlternative_240912.getStepAlternative().contains(alt));\n\n               // check isomorphic binding between objects __DEC_alt_stepAlternative_240912 and step \n               JavaSDM.ensure ( !__DEC_alt_stepAlternative_240912.equals (step) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // bind object\n               __DEC_step_steps_282810 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n               // check object __DEC_step_steps_282810 is really bound\n               JavaSDM.ensure ( __DEC_step_steps_282810 != null );\n\n               // check if contained via correct reference\n               JavaSDM.ensure(__DEC_step_steps_282810.getSteps().contains(step));\n\n               // check isomorphic binding between objects __DEC_step_steps_282810 and altFlow \n               JavaSDM.ensure ( !__DEC_step_steps_282810.equals (altFlow) );\n\n               // check isomorphic binding between objects __DEC_step_steps_282810 and flow \n               JavaSDM.ensure ( !__DEC_step_steps_282810.equals (flow) );\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check negative bindings\n            try\n            {\n               fujaba__Success = false;\n\n               // iterate to-many link ref from altFlow to __DEC_altFlow_ref_483547\n               fujaba__Success = false;\n\n               fujaba__IterAltFlowTo__DEC_altFlow_ref_483547 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n               while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_483547.hasNext () )\n               {\n                  try\n                  {\n                     __DEC_altFlow_ref_483547 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_483547.next ();\n\n                     // check object __DEC_altFlow_ref_483547 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_ref_483547 != null );\n                     // check isomorphic binding between objects __DEC_altFlow_ref_483547 and alt \n                     JavaSDM.ensure ( !__DEC_altFlow_ref_483547.equals (alt) );\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n\n            fujaba__Success = !(fujaba__Success);\n\n            JavaSDM.ensure ( fujaba__Success );\n\n            // check object _edge_ref is really bound\n            JavaSDM.ensure ( _edge_ref != null );\n            // check object actor is really bound\n            JavaSDM.ensure ( actor != null );\n            // check object alt is really bound\n            JavaSDM.ensure ( alt != null );\n            // check object altFlow is really bound\n            JavaSDM.ensure ( altFlow != null );\n            // check object flow is really bound\n            JavaSDM.ensure ( flow != null );\n            // check object packageDeclaration is really bound\n            JavaSDM.ensure ( packageDeclaration != null );\n            // check object step is really bound\n            JavaSDM.ensure ( step != null );\n            // check object useCase is really bound\n            JavaSDM.ensure ( useCase != null );\n            // check link actor from step to actor\n            JavaSDM.ensure (actor.equals (step.getActor ()\n            ));\n\n            // check link ref from alt to altFlow\n            JavaSDM.ensure (altFlow.equals (alt.getRef ()\n            ));\n\n            // check link actors from actor to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n            ));\n\n            // check link flows from flow to useCase\n            JavaSDM.ensure (useCase.equals (flow.eContainer()\n            ));\n\n            // check link flows from altFlow to useCase\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n            .contains (useCase)));\n\n            // check link src from _edge_ref to alt\n            JavaSDM.ensure (alt.equals (_edge_ref.getSrc ()\n            ));\n\n            // check link stepAlternative from alt to step\n            JavaSDM.ensure (step.equals (alt.eContainer()\n            ));\n\n            // check link steps from step to flow\n            JavaSDM.ensure (flow.equals (step.eContainer()\n            ));\n\n            // check link steps from step to altFlow\n            JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n            .contains (altFlow)));\n\n            // check link trg from _edge_ref to altFlow\n            JavaSDM.ensure (altFlow.equals (_edge_ref.getTrg ()\n            ));\n\n            // check link useCases from useCase to packageDeclaration\n            JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n            ));\n\n            // create object match\n            match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n            // assign attribute match\n            match.setRuleName (__eClass.getName());\n            // statement node \'bookkeeping with generic isAppropriate method\'\n            fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n            if (fujaba__Success)\n            {\n               // statement node \'Ensure that the correct types of elements are matched\'\n               fujaba__Success = this.checkTypes_FWD(match);\n               if (fujaba__Success)\n               {\n                  // story node \'Add match to rule result\'\n                  try \n                  {\n                     fujaba__Success = false; \n\n                     // check object __performOperation is really bound\n                     JavaSDM.ensure ( __performOperation != null );\n                     // check object __result is really bound\n                     JavaSDM.ensure ( __result != null );\n                     // check object match is really bound\n                     JavaSDM.ensure ( match != null );\n\n                     // create link\n                     org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                     // create link\n                     __result.getContents().add(match);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n\n               }\n               else\n               {\n\n               }\n\n            }\n            else\n            {\n\n            }\n            fujaba__Success = true;\n         }\n         catch ( JavaSDMException fujaba__InternalException )\n         {\n            fujaba__Success = false;\n         }\n\n\n\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_30(EMoflonEdge _edge_ref);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_406841 = null;\n      InteractionOperand __DEC_messageReceive_fragment_581563 = null;\n      InteractionOperand __DEC_messageSend_fragment_821970 = null;\n      Interaction __DEC_operand_enclosingInteraction_541124 = null;\n      InteractionOperand __DEC_operand_fragment_439971 = null;\n      InteractionOperand __DEC_guard_guard_488946 = null;\n      CombinedFragment __DEC_operand_operand_984049 = null;\n      Constraint __DEC_spec_specification_3257 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_388850 = null;\n      Message __DEC_messageReceive_receiveEvent_388850 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_237073 = null;\n      Message __DEC_messageSend_receiveEvent_237073 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_765561 = null;\n      Message __DEC_messageReceive_sendEvent_765561 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_627554 = null;\n      Message __DEC_messageSend_sendEvent_627554 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_327509 = null;\n      MessageEnd __DEC_message_message_327509 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterInteractionToMessage = null;\n      Message message = null;\n      Iterator fujaba__IterComboToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Interaction interaction = null;\n      InteractionOperand operand = null;\n      CombinedFragment combo = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_operand is really bound\n         JavaSDM.ensure ( _edge_operand != null );\n         // bind object\n         _TmpObject = _edge_operand.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_operand.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         interaction = combo.getEnclosingInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // check link operand from operand to combo\n         JavaSDM.ensure (combo.equals (operand.eContainer()\n         ));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // iterate to-many link covered from combo to line\n         fujaba__Success = false;\n\n         fujaba__IterComboToLine = new ArrayList(combo.getCovered()).iterator ();\n\n         while ( fujaba__IterComboToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterComboToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link lifeline from line to interaction\n               JavaSDM.ensure (interaction.equals (line.getInteraction ()\n               ));\n\n               // check link covered from operand to line\n               JavaSDM.ensure (operand.getCovered ().contains (line));\n\n               // iterate to-many link message from interaction to message\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToMessage = new ArrayList(interaction.getMessage()).iterator ();\n\n               while ( fujaba__IterInteractionToMessage.hasNext () )\n               {\n                  try\n                  {\n                     message = (Message) fujaba__IterInteractionToMessage.next ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check link fragment from messageReceive to interaction\n                     JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getSendEvent ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageSend to interaction\n                     JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                     ));\n\n                     // check link message from messageSend to message\n                     JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                     ));\n\n                     // check link covered from line to messageReceive\n                     JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_406841 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_406841 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_406841 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_406841 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_406841.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_581563 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_581563 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_581563 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_581563 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_581563.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_821970 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_821970 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_821970 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_821970 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_821970.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_541124 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_541124 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_541124 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_541124 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_541124.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_439971 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_439971 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_439971 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_439971 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_439971.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_488946 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_488946 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_488946 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_488946.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_488946 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_488946.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_984049 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_984049 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_984049 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_984049.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_984049 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_984049.equals (combo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_3257 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_3257 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_3257 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_3257.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_3257 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_3257.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_388850\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_388850 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_388850.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_388850 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_388850.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_388850 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_388850 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_388850 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_388850.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_237073\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_237073 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_237073.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_237073 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_237073.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_237073 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_237073 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_237073 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_237073.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_765561\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_765561 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_765561.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_765561 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_765561.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_765561 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_765561 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_765561 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_765561.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_627554\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_627554 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_627554.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_627554 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_627554.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_627554 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_627554 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_627554 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_627554.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_327509\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_327509 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_327509.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_327509 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_327509.next ();\n\n                                 // check object __DEC_message_message_327509 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_327509 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_327509 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_327509.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_327509 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_327509.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_operand is really bound\n                        JavaSDM.ensure ( _edge_operand != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                        ));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                        ));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                        ));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_operand to combo\n                        JavaSDM.ensure (combo.equals (_edge_operand.getSrc ()\n                        ));\n\n                        // check link trg from _edge_operand to operand\n                        JavaSDM.ensure (operand.equals (_edge_operand.getTrg ()\n                        ));\n\n                        // check link covered from line to combo\n                        JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                        // check link covered from line to messageReceive\n                        JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_115(EMoflonEdge _edge_operand);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_714970 = null;\n      InteractionOperand __DEC_messageReceive_fragment_274621 = null;\n      InteractionOperand __DEC_messageSend_fragment_230186 = null;\n      Interaction __DEC_operand_enclosingInteraction_90964 = null;\n      InteractionOperand __DEC_operand_fragment_458557 = null;\n      InteractionOperand __DEC_guard_guard_613846 = null;\n      CombinedFragment __DEC_operand_operand_951955 = null;\n      Constraint __DEC_spec_specification_635190 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_760383 = null;\n      Message __DEC_messageReceive_receiveEvent_760383 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_480659 = null;\n      Message __DEC_messageSend_receiveEvent_480659 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_848210 = null;\n      Message __DEC_messageReceive_sendEvent_848210 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_124040 = null;\n      Message __DEC_messageSend_sendEvent_124040 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_267645 = null;\n      MessageEnd __DEC_message_message_267645 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // check link fragment from combo to interaction\n         JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n         ));\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // check link operand from operand to combo\n               JavaSDM.ensure (combo.equals (operand.eContainer()\n               ));\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link fragment from interaction to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n               while ( fujaba__IterInteractionToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link covered from line to messageReceive\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToMessageReceive.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to interaction\n                           JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                           ));\n\n                           // bind object\n                           message = messageReceive.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageSend to message\n                           JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_714970 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_714970 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_714970 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_714970 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_714970.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_274621 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_274621 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_274621 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_274621 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_274621.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_230186 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_230186 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_230186 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_230186 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_230186.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_90964 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_90964 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_90964 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_90964 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_90964.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_458557 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_458557 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_458557 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_458557 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_458557.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_613846 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_613846 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_613846 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_613846.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_613846 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_613846.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_951955 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_951955 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_951955 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_951955.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_951955 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_951955.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_635190 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_635190 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_635190 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_635190.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_635190 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_635190.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_760383\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_760383 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_760383.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_760383 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_760383.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_760383 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_760383 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_760383 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_760383.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_480659\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_480659 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_480659.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_480659 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_480659.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_480659 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_480659 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_480659 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_480659.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_848210\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_848210 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_848210.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_848210 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_848210.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_848210 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_848210 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_848210 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_848210.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_124040\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_124040 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_124040.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_124040 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_124040.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_124040 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_124040 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_124040 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_124040.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_267645\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_267645 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_267645.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_267645 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_267645.next ();\n\n                                       // check object __DEC_message_message_267645 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_267645 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_267645 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_267645.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_267645 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_267645.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to combo\n                              JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_116(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_908950 = null;\n      InteractionOperand __DEC_messageReceive_fragment_257989 = null;\n      InteractionOperand __DEC_messageSend_fragment_651103 = null;\n      Interaction __DEC_operand_enclosingInteraction_508101 = null;\n      InteractionOperand __DEC_operand_fragment_493523 = null;\n      InteractionOperand __DEC_guard_guard_798864 = null;\n      CombinedFragment __DEC_operand_operand_595975 = null;\n      Constraint __DEC_spec_specification_989289 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_986660 = null;\n      Message __DEC_messageReceive_receiveEvent_986660 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_10334 = null;\n      Message __DEC_messageSend_receiveEvent_10334 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_406411 = null;\n      Message __DEC_messageReceive_sendEvent_406411 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_415490 = null;\n      Message __DEC_messageSend_sendEvent_415490 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_43445 = null;\n      MessageEnd __DEC_message_message_43445 = null;\n      Match match = null;\n      Iterator fujaba__IterComboTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      CombinedFragment combo = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object combo\n         JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n         combo = (CombinedFragment) _TmpObject;\n\n         // bind object\n         interaction = combo.getEnclosingInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link lifeline from line to interaction\n         JavaSDM.ensure (interaction.equals (line.getInteraction ()\n         ));\n\n         // check link covered from line to combo\n         JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // check link operand from operand to combo\n               JavaSDM.ensure (combo.equals (operand.eContainer()\n               ));\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // iterate to-many link fragment from interaction to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n               while ( fujaba__IterInteractionToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to interaction\n                     JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // check link covered from line to messageReceive\n                     JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                     // iterate to-many link trg from combo to _edge_coveredBy\n                     fujaba__Success = false;\n\n                     fujaba__IterComboTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(combo,EMoflonEdge.class,\"trg\")).iterator ();\n\n                     while ( fujaba__IterComboTo_edge_coveredBy.hasNext () )\n                     {\n                        try\n                        {\n                           _edge_coveredBy = (EMoflonEdge) fujaba__IterComboTo_edge_coveredBy.next ();\n\n                           // check object _edge_coveredBy is really bound\n                           JavaSDM.ensure ( _edge_coveredBy != null );\n                           // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                           JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                           // check link src from _edge_coveredBy to line\n                           JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_908950 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_908950 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_908950 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_908950 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_908950.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_257989 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_257989 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_257989 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_257989 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_257989.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_651103 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_651103 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_651103 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_651103 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_651103.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_508101 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_508101 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_508101 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_508101 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_508101.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_493523 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_493523 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_493523 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_493523 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_493523.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_798864 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_798864 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_798864 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_798864.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_798864 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_798864.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_595975 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_595975 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_595975 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_595975.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_595975 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_595975.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_989289 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_989289 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_989289 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_989289.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_989289 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_989289.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_986660\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_986660 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_986660.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_986660 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_986660.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_986660 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_986660 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_986660 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_986660.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_10334\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_10334 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_10334.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_10334 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_10334.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_10334 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_10334 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_10334 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_10334.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_406411\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_406411 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_406411.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_406411 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_406411.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_406411 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_406411 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_406411 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_406411.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_415490\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_415490 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_415490.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_415490 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_415490.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_415490 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_415490 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_415490 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_415490.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_43445\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_43445 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_43445.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_43445 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_43445.next ();\n\n                                       // check object __DEC_message_message_43445 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_43445 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_43445 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_43445.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_43445 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_43445.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_covered is really bound\n                              JavaSDM.ensure ( _edge_covered != null );\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                              JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_covered to combo\n                              JavaSDM.ensure (combo.equals (_edge_covered.getSrc ()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_covered to line\n                              JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to combo\n                              JavaSDM.ensure (combo.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_117(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_34112 = null;\n      InteractionOperand __DEC_messageReceive_fragment_834163 = null;\n      InteractionOperand __DEC_messageSend_fragment_215399 = null;\n      Interaction __DEC_operand_enclosingInteraction_854476 = null;\n      InteractionOperand __DEC_operand_fragment_930226 = null;\n      InteractionOperand __DEC_guard_guard_672600 = null;\n      CombinedFragment __DEC_operand_operand_872536 = null;\n      Constraint __DEC_spec_specification_706033 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_972711 = null;\n      Message __DEC_messageReceive_receiveEvent_972711 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_470766 = null;\n      Message __DEC_messageSend_receiveEvent_470766 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_547095 = null;\n      Message __DEC_messageReceive_sendEvent_547095 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_589018 = null;\n      Message __DEC_messageSend_sendEvent_589018 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_591385 = null;\n      MessageEnd __DEC_message_message_591385 = null;\n      Match match = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_coveredBy.getTrg ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to combo\n         fujaba__Success = false;\n\n         fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // check link fragment from combo to interaction\n               JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n               ));\n\n               // check link operand from operand to combo\n               JavaSDM.ensure (combo.equals (operand.eContainer()\n               ));\n\n               // iterate to-many link covered from line to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // check link fragment from messageReceive to interaction\n                     JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                     ));\n\n                     // bind object\n                     message = messageReceive.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // check link receiveEvent from message to messageReceive\n                     JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                     ));\n\n                     // iterate to-many link fragment from interaction to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n                     while ( fujaba__IterInteractionToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link message from messageSend to message\n                           JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_34112 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_34112 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_34112 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_34112 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_34112.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_834163 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_834163 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_834163 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_834163 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_834163.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_215399 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_215399 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_215399 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_215399 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_215399.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_854476 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_854476 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_854476 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_854476 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_854476.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_930226 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_930226 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_930226 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_930226 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_930226.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_672600 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_672600 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_672600 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_672600.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_672600 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_672600.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_872536 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_872536 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_872536 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_872536.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_872536 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_872536.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_706033 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_706033 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_706033 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_706033.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_706033 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_706033.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_972711\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_972711 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_972711.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_972711 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_972711.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_972711 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_972711 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_972711 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_972711.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_470766\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_470766 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_470766.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_470766 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_470766.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_470766 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_470766 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_470766 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_470766.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_547095\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_547095 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_547095.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_547095 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_547095.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_547095 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_547095 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_547095 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_547095.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_589018\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_589018 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_589018.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_589018 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_589018.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_589018 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_589018 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_589018 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_589018.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_591385\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_591385 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_591385.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_591385 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_591385.next ();\n\n                                       // check object __DEC_message_message_591385 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_591385 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_591385 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_591385.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_591385 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_591385.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to operand\n                              JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_118(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_952411 = null;\n      InteractionOperand __DEC_messageReceive_fragment_159615 = null;\n      InteractionOperand __DEC_messageSend_fragment_188001 = null;\n      Interaction __DEC_operand_enclosingInteraction_312665 = null;\n      InteractionOperand __DEC_operand_fragment_40055 = null;\n      InteractionOperand __DEC_guard_guard_237274 = null;\n      CombinedFragment __DEC_operand_operand_814959 = null;\n      Constraint __DEC_spec_specification_290136 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_781617 = null;\n      Message __DEC_messageReceive_receiveEvent_781617 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_164832 = null;\n      Message __DEC_messageSend_receiveEvent_164832 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_699636 = null;\n      Message __DEC_messageReceive_sendEvent_699636 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_874532 = null;\n      Message __DEC_messageSend_sendEvent_874532 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_431648 = null;\n      MessageEnd __DEC_message_message_431648 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // check link covered from operand to line\n         JavaSDM.ensure (operand.getCovered ().contains (line));\n\n         // iterate to-many link covered from line to combo\n         fujaba__Success = false;\n\n         fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // check link fragment from combo to interaction\n               JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n               ));\n\n               // check link operand from operand to combo\n               JavaSDM.ensure (combo.equals (operand.eContainer()\n               ));\n\n               // iterate to-many link covered from line to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterLineToMessageReceive = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // check link fragment from messageReceive to interaction\n                     JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                     ));\n\n                     // iterate to-many link fragment from interaction to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n                     while ( fujaba__IterInteractionToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // iterate to-many link src from line to _edge_coveredBy\n                           fujaba__Success = false;\n\n                           fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                                 // check object _edge_coveredBy is really bound\n                                 JavaSDM.ensure ( _edge_coveredBy != null );\n                                 // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                 JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                 // check link trg from _edge_coveredBy to operand\n                                 JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_952411 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_952411 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_952411 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_952411 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_952411.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_159615 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_159615 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_159615 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_159615 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_159615.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_188001 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_188001 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_188001 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_188001 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_188001.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_312665 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_312665 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_312665 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_312665 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_312665.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_40055 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_40055 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_40055 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_40055 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_40055.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_237274 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_237274 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_237274 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_237274.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_237274 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_237274.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_814959 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_814959 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_814959 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_814959.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_814959 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_814959.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_290136 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_290136 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_290136 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_290136.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_290136 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_290136.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_781617\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_781617 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_781617.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_781617 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_781617.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_781617 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_781617 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_781617 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_781617.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_164832\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_164832 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_164832.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_164832 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_164832.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_164832 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_164832 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_164832 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_164832.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_699636\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_699636 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_699636.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_699636 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_699636.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_699636 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_699636 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_699636 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_699636.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_874532\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_874532 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_874532.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_874532 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_874532.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_874532 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_874532 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_874532 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_874532.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_431648\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_431648 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_431648.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_431648 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_431648.next ();\n\n                                             // check object __DEC_message_message_431648 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_431648 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_431648 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_431648.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_431648 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_431648.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to operand\n                                    JavaSDM.ensure (operand.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to line\n                                    JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to operand\n                                    JavaSDM.ensure (operand.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from line to messageReceive\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_119(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_934830 = null;\n      InteractionOperand __DEC_messageReceive_fragment_879715 = null;\n      InteractionOperand __DEC_messageSend_fragment_124535 = null;\n      Interaction __DEC_operand_enclosingInteraction_351541 = null;\n      InteractionOperand __DEC_operand_fragment_205022 = null;\n      InteractionOperand __DEC_guard_guard_492602 = null;\n      CombinedFragment __DEC_operand_operand_658176 = null;\n      Constraint __DEC_spec_specification_394418 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_366331 = null;\n      Message __DEC_messageReceive_receiveEvent_366331 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_351198 = null;\n      Message __DEC_messageSend_receiveEvent_351198 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_335431 = null;\n      Message __DEC_messageReceive_sendEvent_335431 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_582633 = null;\n      Message __DEC_messageSend_sendEvent_582633 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_508874 = null;\n      MessageEnd __DEC_message_message_508874 = null;\n      Match match = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Interaction interaction = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      CombinedFragment combo = null;\n      InteractionConstraint guard = null;\n      InteractionOperand operand = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_guard is really bound\n         JavaSDM.ensure ( _edge_guard != null );\n         // bind object\n         _TmpObject = _edge_guard.getSrc ();\n\n         // ensure correct type and really bound of object operand\n         JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n         operand = (InteractionOperand) _TmpObject;\n\n         // bind object\n         guard = operand.getGuard ();\n\n         // check object guard is really bound\n         JavaSDM.ensure ( guard != null );\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         _TmpObject = guard.getSpecification ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link trg from _edge_guard to guard\n         JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // check link fragment from combo to interaction\n               JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n               ));\n\n               // check link covered from line to combo\n               JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n               // iterate to-many link fragment from interaction to messageSend\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n               while ( fujaba__IterInteractionToMessageSend.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                     // ensure correct type and really bound of object messageSend\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                     // bind object\n                     message = messageSend.getMessage ();\n\n                     // check object message is really bound\n                     JavaSDM.ensure ( message != null );\n\n                     // check link message from message to interaction\n                     JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                     ));\n\n                     // bind object\n                     _TmpObject = message.getReceiveEvent ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                     // check isomorphic binding between objects messageSend and messageReceive \n                     JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                     // check link fragment from messageReceive to interaction\n                     JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                     ));\n\n                     // check link message from messageReceive to message\n                     JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                     ));\n\n                     // check link sendEvent from message to messageSend\n                     JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                     ));\n\n                     // check link covered from line to messageReceive\n                     JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                     // story node \'test core match and DECs\'\n                     try \n                     {\n                        fujaba__Success = false; \n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_combo_fragment_934830 = combo.getEnclosingOperand ();\n\n                           // check object __DEC_combo_fragment_934830 is really bound\n                           JavaSDM.ensure ( __DEC_combo_fragment_934830 != null );\n\n                           // check isomorphic binding between objects __DEC_combo_fragment_934830 and operand \n                           JavaSDM.ensure ( !__DEC_combo_fragment_934830.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageReceive_fragment_879715 = messageReceive.getEnclosingOperand ();\n\n                           // check object __DEC_messageReceive_fragment_879715 is really bound\n                           JavaSDM.ensure ( __DEC_messageReceive_fragment_879715 != null );\n\n                           // check isomorphic binding between objects __DEC_messageReceive_fragment_879715 and operand \n                           JavaSDM.ensure ( !__DEC_messageReceive_fragment_879715.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_messageSend_fragment_124535 = messageSend.getEnclosingOperand ();\n\n                           // check object __DEC_messageSend_fragment_124535 is really bound\n                           JavaSDM.ensure ( __DEC_messageSend_fragment_124535 != null );\n\n                           // check isomorphic binding between objects __DEC_messageSend_fragment_124535 and operand \n                           JavaSDM.ensure ( !__DEC_messageSend_fragment_124535.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_enclosingInteraction_351541 = operand.getEnclosingInteraction ();\n\n                           // check object __DEC_operand_enclosingInteraction_351541 is really bound\n                           JavaSDM.ensure ( __DEC_operand_enclosingInteraction_351541 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_enclosingInteraction_351541 and interaction \n                           JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_351541.equals (interaction) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_fragment_205022 = operand.getEnclosingOperand ();\n\n                           // check object __DEC_operand_fragment_205022 is really bound\n                           JavaSDM.ensure ( __DEC_operand_fragment_205022 != null );\n\n                           // check isomorphic binding between objects __DEC_operand_fragment_205022 and operand \n                           JavaSDM.ensure ( !__DEC_operand_fragment_205022.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // negative check for link packagedElement from guard\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // negative check for link packagedElement from spec\n                        JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_guard_guard_492602 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                           // check object __DEC_guard_guard_492602 is really bound\n                           JavaSDM.ensure ( __DEC_guard_guard_492602 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(guard.equals(__DEC_guard_guard_492602.getGuard()));\n\n                           // check isomorphic binding between objects __DEC_guard_guard_492602 and operand \n                           JavaSDM.ensure ( !__DEC_guard_guard_492602.equals (operand) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_operand_operand_658176 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                           // check object __DEC_operand_operand_658176 is really bound\n                           JavaSDM.ensure ( __DEC_operand_operand_658176 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(__DEC_operand_operand_658176.getOperand().contains(operand));\n\n                           // check isomorphic binding between objects __DEC_operand_operand_658176 and combo \n                           JavaSDM.ensure ( !__DEC_operand_operand_658176.equals (combo) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // bind object\n                           __DEC_spec_specification_394418 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                           // check object __DEC_spec_specification_394418 is really bound\n                           JavaSDM.ensure ( __DEC_spec_specification_394418 != null );\n\n                           // check if contained via correct reference\n                           JavaSDM.ensure(spec.equals(__DEC_spec_specification_394418.getSpecification()));\n\n                           // check isomorphic binding between objects __DEC_spec_specification_394418 and guard \n                           JavaSDM.ensure ( !__DEC_spec_specification_394418.equals (guard) );\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_366331\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_366331 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_366331.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_receiveEvent_366331 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_366331.next ();\n\n                                 // check object __DEC_messageReceive_receiveEvent_366331 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_366331 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_366331 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_366331.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_351198\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_351198 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_351198.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_receiveEvent_351198 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_351198.next ();\n\n                                 // check object __DEC_messageSend_receiveEvent_351198 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_receiveEvent_351198 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_receiveEvent_351198 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_351198.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_335431\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_335431 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_335431.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageReceive_sendEvent_335431 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_335431.next ();\n\n                                 // check object __DEC_messageReceive_sendEvent_335431 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_sendEvent_335431 != null );\n                                 // check isomorphic binding between objects __DEC_messageReceive_sendEvent_335431 and message \n                                 JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_335431.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_582633\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_582633 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_582633.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_messageSend_sendEvent_582633 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_582633.next ();\n\n                                 // check object __DEC_messageSend_sendEvent_582633 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_sendEvent_582633 != null );\n                                 // check isomorphic binding between objects __DEC_messageSend_sendEvent_582633 and message \n                                 JavaSDM.ensure ( !__DEC_messageSend_sendEvent_582633.equals (message) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check negative bindings\n                        try\n                        {\n                           fujaba__Success = false;\n\n                           // iterate to-many link message from message to __DEC_message_message_508874\n                           fujaba__Success = false;\n\n                           fujaba__IterMessageTo__DEC_message_message_508874 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                           while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_508874.hasNext () )\n                           {\n                              try\n                              {\n                                 __DEC_message_message_508874 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_508874.next ();\n\n                                 // check object __DEC_message_message_508874 is really bound\n                                 JavaSDM.ensure ( __DEC_message_message_508874 != null );\n                                 // check isomorphic binding between objects __DEC_message_message_508874 and messageReceive \n                                 JavaSDM.ensure ( !__DEC_message_message_508874.equals (messageReceive) );\n\n                                 // check isomorphic binding between objects __DEC_message_message_508874 and messageSend \n                                 JavaSDM.ensure ( !__DEC_message_message_508874.equals (messageSend) );\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n                        fujaba__Success = !(fujaba__Success);\n\n                        JavaSDM.ensure ( fujaba__Success );\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from operand to operand\n                        JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                        )));\n\n                        // check object _edge_guard is really bound\n                        JavaSDM.ensure ( _edge_guard != null );\n                        // check object combo is really bound\n                        JavaSDM.ensure ( combo != null );\n                        // check object guard is really bound\n                        JavaSDM.ensure ( guard != null );\n                        // check object interaction is really bound\n                        JavaSDM.ensure ( interaction != null );\n                        // check object line is really bound\n                        JavaSDM.ensure ( line != null );\n                        // check object message is really bound\n                        JavaSDM.ensure ( message != null );\n                        // check object messageReceive is really bound\n                        JavaSDM.ensure ( messageReceive != null );\n                        // check object messageSend is really bound\n                        JavaSDM.ensure ( messageSend != null );\n                        // check object operand is really bound\n                        JavaSDM.ensure ( operand != null );\n                        // check object spec is really bound\n                        JavaSDM.ensure ( spec != null );\n                        // check isomorphic binding between objects messageSend and messageReceive \n                        JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                        // check link fragment from combo to interaction\n                        JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                        ));\n\n                        // check link fragment from messageReceive to interaction\n                        JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                        ));\n\n                        // check link fragment from messageSend to interaction\n                        JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                        ));\n\n                        // check link fragment from operand to interaction\n                        JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                        )));\n\n                        // check link fragment from combo to operand\n                        JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageReceive to operand\n                        JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                        )));\n\n                        // check link fragment from messageSend to operand\n                        JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                        )));\n\n                        // check link guard from operand to guard\n                        JavaSDM.ensure (guard.equals (operand.getGuard ()\n                        ));\n\n                        // check link lifeline from line to interaction\n                        JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                        ));\n\n                        // check link message from message to interaction\n                        JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                        ));\n\n                        // check link message from messageReceive to message\n                        JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                        ));\n\n                        // check link message from messageSend to message\n                        JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                        ));\n\n                        // check link receiveEvent from message to messageReceive\n                        JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                        ));\n\n                        // check link receiveEvent from message to messageSend\n                        JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                        )));\n\n                        // check link sendEvent from message to messageSend\n                        JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                        ));\n\n                        // check link sendEvent from message to messageReceive\n                        JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                        )));\n\n                        // check link operand from operand to combo\n                        JavaSDM.ensure (combo.equals (operand.eContainer()\n                        ));\n\n                        // check link specification from spec to guard\n                        JavaSDM.ensure (guard.equals (spec.eContainer()\n                        ));\n\n                        // check link src from _edge_guard to operand\n                        JavaSDM.ensure (operand.equals (_edge_guard.getSrc ()\n                        ));\n\n                        // check link trg from _edge_guard to guard\n                        JavaSDM.ensure (guard.equals (_edge_guard.getTrg ()\n                        ));\n\n                        // check link covered from line to combo\n                        JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                        // check link covered from line to messageReceive\n                        JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                        // check link covered from operand to line\n                        JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                        // create object match\n                        match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                        // assign attribute match\n                        match.setRuleName (__eClass.getName());\n                        // statement node \'bookkeeping with generic isAppropriate method\'\n                        fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                        if (fujaba__Success)\n                        {\n                           // statement node \'Ensure that the correct types of elements are matched\'\n                           fujaba__Success = this.checkTypes_BWD(match);\n                           if (fujaba__Success)\n                           {\n                              // story node \'Add match to rule result\'\n                              try \n                              {\n                                 fujaba__Success = false; \n\n                                 // check object __performOperation is really bound\n                                 JavaSDM.ensure ( __performOperation != null );\n                                 // check object __result is really bound\n                                 JavaSDM.ensure ( __result != null );\n                                 // check object match is really bound\n                                 JavaSDM.ensure ( match != null );\n\n                                 // create link\n                                 org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                 // create link\n                                 __result.getContents().add(match);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n\n                           }\n                           else\n                           {\n\n                           }\n\n                        }\n                        else\n                        {\n\n                        }\n                        fujaba__Success = true;\n                     }\n                     catch ( JavaSDMException fujaba__InternalException )\n                     {\n                        fujaba__Success = false;\n                     }\n\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_120(EMoflonEdge _edge_guard);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_848504 = null;\n      InteractionOperand __DEC_messageReceive_fragment_126214 = null;\n      InteractionOperand __DEC_messageSend_fragment_285921 = null;\n      Interaction __DEC_operand_enclosingInteraction_919998 = null;\n      InteractionOperand __DEC_operand_fragment_590426 = null;\n      InteractionOperand __DEC_guard_guard_335999 = null;\n      CombinedFragment __DEC_operand_operand_458222 = null;\n      Constraint __DEC_spec_specification_313362 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_137821 = null;\n      Message __DEC_messageReceive_receiveEvent_137821 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_504564 = null;\n      Message __DEC_messageSend_receiveEvent_504564 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_688510 = null;\n      Message __DEC_messageReceive_sendEvent_688510 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_88417 = null;\n      Message __DEC_messageSend_sendEvent_88417 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_20833 = null;\n      MessageEnd __DEC_message_message_20833 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterInteractionToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterOperandToLine = null;\n      Lifeline line = null;\n      LiteralString spec = null;\n      Interaction interaction = null;\n      CombinedFragment combo = null;\n      InteractionOperand operand = null;\n      InteractionConstraint guard = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_specification is really bound\n         JavaSDM.ensure ( _edge_specification != null );\n         // bind object\n         _TmpObject = _edge_specification.getSrc ();\n\n         // ensure correct type and really bound of object guard\n         JavaSDM.ensure ( _TmpObject instanceof InteractionConstraint );\n         guard = (InteractionConstraint) _TmpObject;\n\n         // bind object\n         operand = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n         // check object operand is really bound\n         JavaSDM.ensure ( operand != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(guard.equals(operand.getGuard()));\n\n         // bind object\n         combo = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n         // check object combo is really bound\n         JavaSDM.ensure ( combo != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(combo.getOperand().contains(operand));\n\n         // bind object\n         interaction = combo.getEnclosingInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = _edge_specification.getTrg ();\n\n         // ensure correct type and really bound of object spec\n         JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n         spec = (LiteralString) _TmpObject;\n\n         // check link specification from spec to guard\n         JavaSDM.ensure (guard.equals (spec.eContainer()\n         ));\n\n         // iterate to-many link covered from operand to line\n         fujaba__Success = false;\n\n         fujaba__IterOperandToLine = new ArrayList(operand.getCovered()).iterator ();\n\n         while ( fujaba__IterOperandToLine.hasNext () )\n         {\n            try\n            {\n               line = (Lifeline) fujaba__IterOperandToLine.next ();\n\n               // check object line is really bound\n               JavaSDM.ensure ( line != null );\n               // check link lifeline from line to interaction\n               JavaSDM.ensure (interaction.equals (line.getInteraction ()\n               ));\n\n               // check link covered from line to combo\n               JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n               // iterate to-many link fragment from interaction to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToMessageReceive = new ArrayList(interaction.getFragment()).iterator ();\n\n               while ( fujaba__IterInteractionToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInteractionToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // check link covered from line to messageReceive\n                     JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                     // iterate to-many link fragment from interaction to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n                     while ( fujaba__IterInteractionToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_848504 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_848504 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_848504 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_848504 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_848504.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_126214 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_126214 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_126214 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_126214 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_126214.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_285921 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_285921 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_285921 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_285921 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_285921.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_919998 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_919998 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_919998 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_919998 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_919998.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_590426 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_590426 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_590426 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_590426 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_590426.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_335999 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_335999 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_335999 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_335999.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_335999 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_335999.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_458222 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_458222 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_458222 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_458222.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_458222 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_458222.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_313362 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_313362 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_313362 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_313362.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_313362 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_313362.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_137821\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_137821 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_137821.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_137821 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_137821.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_137821 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_137821 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_137821 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_137821.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_504564\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_504564 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_504564.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_504564 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_504564.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_504564 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_504564 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_504564 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_504564.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_688510\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_688510 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_688510.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_688510 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_688510.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_688510 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_688510 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_688510 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_688510.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_88417\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_88417 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_88417.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_88417 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_88417.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_88417 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_88417 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_88417 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_88417.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_20833\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_20833 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_20833.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_20833 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_20833.next ();\n\n                                       // check object __DEC_message_message_20833 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_20833 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_20833 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_20833.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_20833 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_20833.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_specification is really bound\n                              JavaSDM.ensure ( _edge_specification != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_specification to guard\n                              JavaSDM.ensure (guard.equals (_edge_specification.getSrc ()\n                              ));\n\n                              // check link trg from _edge_specification to spec\n                              JavaSDM.ensure (spec.equals (_edge_specification.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_121(
			EMoflonEdge _edge_specification);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_899828 = null;\n      NormalStep __DEC_alt_stepAlternative_920891 = null;\n      Flow __DEC_step_steps_329057 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_122212 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_122212 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      Actor actor = null;\n      NormalStep step = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      BasicFlow flow = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_steps is really bound\n         JavaSDM.ensure ( _edge_steps != null );\n         // bind object\n         _TmpObject = _edge_steps.getSrc ();\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof BasicFlow );\n         flow = (BasicFlow) _TmpObject;\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // bind object\n         packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n         // bind object\n         _TmpObject = _edge_steps.getTrg ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // check link actors from actor to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n         ));\n\n         // check link steps from step to flow\n         JavaSDM.ensure (flow.equals (step.eContainer()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_899828 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_899828 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_899828 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_899828.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_899828 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_899828.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_920891 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_920891 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_920891 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_920891.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_920891 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_920891.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_329057 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_329057 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_329057 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_329057.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_329057 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_329057.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_329057 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_329057.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_122212\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_122212 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_122212.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_122212 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_122212.next ();\n\n                           // check object __DEC_altFlow_ref_122212 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_122212 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_122212 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_122212.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_steps is really bound\n                  JavaSDM.ensure ( _edge_steps != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object packageDeclaration is really bound\n                  JavaSDM.ensure ( packageDeclaration != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link actors from actor to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_steps to flow\n                  JavaSDM.ensure (flow.equals (_edge_steps.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_steps to step\n                  JavaSDM.ensure (step.equals (_edge_steps.getTrg ()\n                  ));\n\n                  // check link useCases from useCase to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_31(EMoflonEdge _edge_steps);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      UseCase __DEC_altFlow_flows_286774 = null;\n      NormalStep __DEC_alt_stepAlternative_736902 = null;\n      Flow __DEC_step_steps_680005 = null;\n      Iterator fujaba__IterAltFlowTo__DEC_altFlow_ref_924626 = null;\n      AlternativeFlowAlternative __DEC_altFlow_ref_924626 = null;\n      Match match = null;\n      AlternativeFlow altFlow = null;\n      Iterator fujaba__IterStepToAlt = null;\n      AlternativeFlowAlternative alt = null;\n      PackageDeclaration packageDeclaration = null;\n      UseCase useCase = null;\n      BasicFlow flow = null;\n      Actor actor = null;\n      NormalStep step = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_FWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_actor is really bound\n         JavaSDM.ensure ( _edge_actor != null );\n         // bind object\n         _TmpObject = _edge_actor.getSrc ();\n\n         // ensure correct type and really bound of object step\n         JavaSDM.ensure ( _TmpObject instanceof NormalStep );\n         step = (NormalStep) _TmpObject;\n\n         // bind object\n         actor = step.getActor ();\n\n         // check object actor is really bound\n         JavaSDM.ensure ( actor != null );\n\n         // bind object\n         _TmpObject = step.eContainer() instanceof BasicFlow ? (BasicFlow) step.eContainer() : null;\n\n         // ensure correct type and really bound of object flow\n         JavaSDM.ensure ( _TmpObject instanceof BasicFlow );\n         flow = (BasicFlow) _TmpObject;\n\n         // check if contained via correct reference\n         JavaSDM.ensure(flow.getSteps().contains(step));\n\n         // bind object\n         useCase = flow.eContainer() instanceof UseCase ? (UseCase) flow.eContainer() : null;\n\n         // check object useCase is really bound\n         JavaSDM.ensure ( useCase != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(useCase.getFlows().contains(flow));\n\n         // check link trg from _edge_actor to actor\n         JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n         ));\n\n         // bind object\n         packageDeclaration = useCase.eContainer() instanceof PackageDeclaration ? (PackageDeclaration) useCase.eContainer() : null;\n\n         // check object packageDeclaration is really bound\n         JavaSDM.ensure ( packageDeclaration != null );\n\n         // check if contained via correct reference\n         JavaSDM.ensure(packageDeclaration.getUseCases().contains(useCase));\n\n         // check link actors from actor to packageDeclaration\n         JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n         ));\n\n         // iterate to-many link stepAlternative from step to alt\n         fujaba__Success = false;\n\n         fujaba__IterStepToAlt = new ArrayList(step.getStepAlternative()).iterator ();\n\n         while ( fujaba__IterStepToAlt.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterStepToAlt.next ();\n\n               // ensure correct type and really bound of object alt\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlowAlternative );\n               alt = (AlternativeFlowAlternative) _TmpObject;\n               // bind object\n               _TmpObject = alt.getRef ();\n\n               // ensure correct type and really bound of object altFlow\n               JavaSDM.ensure ( _TmpObject instanceof AlternativeFlow );\n               altFlow = (AlternativeFlow) _TmpObject;\n\n               // story node \'test core match and DECs\'\n               try \n               {\n                  fujaba__Success = false; \n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_altFlow_flows_286774 = altFlow.eContainer() instanceof UseCase ? (UseCase) altFlow.eContainer() : null;\n\n                     // check object __DEC_altFlow_flows_286774 is really bound\n                     JavaSDM.ensure ( __DEC_altFlow_flows_286774 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_altFlow_flows_286774.getFlows().contains(altFlow));\n\n                     // check isomorphic binding between objects __DEC_altFlow_flows_286774 and useCase \n                     JavaSDM.ensure ( !__DEC_altFlow_flows_286774.equals (useCase) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_alt_stepAlternative_736902 = alt.eContainer() instanceof NormalStep ? (NormalStep) alt.eContainer() : null;\n\n                     // check object __DEC_alt_stepAlternative_736902 is really bound\n                     JavaSDM.ensure ( __DEC_alt_stepAlternative_736902 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_alt_stepAlternative_736902.getStepAlternative().contains(alt));\n\n                     // check isomorphic binding between objects __DEC_alt_stepAlternative_736902 and step \n                     JavaSDM.ensure ( !__DEC_alt_stepAlternative_736902.equals (step) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // bind object\n                     __DEC_step_steps_680005 = step.eContainer() instanceof Flow ? (Flow) step.eContainer() : null;\n\n                     // check object __DEC_step_steps_680005 is really bound\n                     JavaSDM.ensure ( __DEC_step_steps_680005 != null );\n\n                     // check if contained via correct reference\n                     JavaSDM.ensure(__DEC_step_steps_680005.getSteps().contains(step));\n\n                     // check isomorphic binding between objects __DEC_step_steps_680005 and altFlow \n                     JavaSDM.ensure ( !__DEC_step_steps_680005.equals (altFlow) );\n\n                     // check isomorphic binding between objects __DEC_step_steps_680005 and flow \n                     JavaSDM.ensure ( !__DEC_step_steps_680005.equals (flow) );\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check negative bindings\n                  try\n                  {\n                     fujaba__Success = false;\n\n                     // iterate to-many link ref from altFlow to __DEC_altFlow_ref_924626\n                     fujaba__Success = false;\n\n                     fujaba__IterAltFlowTo__DEC_altFlow_ref_924626 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,AlternativeFlowAlternative.class,\"ref\")).iterator ();\n\n                     while ( !(fujaba__Success) && fujaba__IterAltFlowTo__DEC_altFlow_ref_924626.hasNext () )\n                     {\n                        try\n                        {\n                           __DEC_altFlow_ref_924626 = (AlternativeFlowAlternative) fujaba__IterAltFlowTo__DEC_altFlow_ref_924626.next ();\n\n                           // check object __DEC_altFlow_ref_924626 is really bound\n                           JavaSDM.ensure ( __DEC_altFlow_ref_924626 != null );\n                           // check isomorphic binding between objects __DEC_altFlow_ref_924626 and alt \n                           JavaSDM.ensure ( !__DEC_altFlow_ref_924626.equals (alt) );\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n\n                  fujaba__Success = !(fujaba__Success);\n\n                  JavaSDM.ensure ( fujaba__Success );\n\n                  // check object _edge_actor is really bound\n                  JavaSDM.ensure ( _edge_actor != null );\n                  // check object actor is really bound\n                  JavaSDM.ensure ( actor != null );\n                  // check object alt is really bound\n                  JavaSDM.ensure ( alt != null );\n                  // check object altFlow is really bound\n                  JavaSDM.ensure ( altFlow != null );\n                  // check object flow is really bound\n                  JavaSDM.ensure ( flow != null );\n                  // check object packageDeclaration is really bound\n                  JavaSDM.ensure ( packageDeclaration != null );\n                  // check object step is really bound\n                  JavaSDM.ensure ( step != null );\n                  // check object useCase is really bound\n                  JavaSDM.ensure ( useCase != null );\n                  // check link actor from step to actor\n                  JavaSDM.ensure (actor.equals (step.getActor ()\n                  ));\n\n                  // check link ref from alt to altFlow\n                  JavaSDM.ensure (altFlow.equals (alt.getRef ()\n                  ));\n\n                  // check link actors from actor to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (actor.eContainer()\n                  ));\n\n                  // check link flows from flow to useCase\n                  JavaSDM.ensure (useCase.equals (flow.eContainer()\n                  ));\n\n                  // check link flows from altFlow to useCase\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(altFlow,UseCase.class,\"$eContainer\")\n                  .contains (useCase)));\n\n                  // check link src from _edge_actor to step\n                  JavaSDM.ensure (step.equals (_edge_actor.getSrc ()\n                  ));\n\n                  // check link stepAlternative from alt to step\n                  JavaSDM.ensure (step.equals (alt.eContainer()\n                  ));\n\n                  // check link steps from step to flow\n                  JavaSDM.ensure (flow.equals (step.eContainer()\n                  ));\n\n                  // check link steps from step to altFlow\n                  JavaSDM.ensure (!(org.moflon.util.eMoflonEMFUtil.getOppositeReference(step,AlternativeFlow.class,\"$eContainer\")\n                  .contains (altFlow)));\n\n                  // check link trg from _edge_actor to actor\n                  JavaSDM.ensure (actor.equals (_edge_actor.getTrg ()\n                  ));\n\n                  // check link useCases from useCase to packageDeclaration\n                  JavaSDM.ensure (packageDeclaration.equals (useCase.eContainer()\n                  ));\n\n                  // create object match\n                  match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                  // assign attribute match\n                  match.setRuleName (__eClass.getName());\n                  // statement node \'bookkeeping with generic isAppropriate method\'\n                  fujaba__Success = this.isAppropriate_FWD(match,flow,step,alt,altFlow,useCase,actor,packageDeclaration);\n                  if (fujaba__Success)\n                  {\n                     // statement node \'Ensure that the correct types of elements are matched\'\n                     fujaba__Success = this.checkTypes_FWD(match);\n                     if (fujaba__Success)\n                     {\n                        // story node \'Add match to rule result\'\n                        try \n                        {\n                           fujaba__Success = false; \n\n                           // check object __performOperation is really bound\n                           JavaSDM.ensure ( __performOperation != null );\n                           // check object __result is really bound\n                           JavaSDM.ensure ( __result != null );\n                           // check object match is really bound\n                           JavaSDM.ensure ( match != null );\n\n                           // create link\n                           org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                           // create link\n                           __result.getContents().add(match);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n\n\n                     }\n                     else\n                     {\n\n                     }\n\n                  }\n                  else\n                  {\n\n                  }\n                  fujaba__Success = true;\n               }\n               catch ( JavaSDMException fujaba__InternalException )\n               {\n                  fujaba__Success = false;\n               }\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_FWD_EMoflonEdge_32(EMoflonEdge _edge_actor);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_950308 = null;\n      InteractionOperand __DEC_messageReceive_fragment_929436 = null;\n      InteractionOperand __DEC_messageSend_fragment_32581 = null;\n      Interaction __DEC_operand_enclosingInteraction_750986 = null;\n      InteractionOperand __DEC_operand_fragment_897498 = null;\n      InteractionOperand __DEC_guard_guard_133755 = null;\n      CombinedFragment __DEC_operand_operand_996635 = null;\n      Constraint __DEC_spec_specification_365119 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_459796 = null;\n      Message __DEC_messageReceive_receiveEvent_459796 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_499535 = null;\n      Message __DEC_messageSend_receiveEvent_499535 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_659025 = null;\n      Message __DEC_messageReceive_sendEvent_659025 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_592753 = null;\n      Message __DEC_messageSend_sendEvent_592753 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_302294 = null;\n      MessageEnd __DEC_message_message_302294 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_sendEvent is really bound\n         JavaSDM.ensure ( _edge_sendEvent != null );\n         // bind object\n         _TmpObject = _edge_sendEvent.getSrc ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link fragment from messageReceive to interaction\n         JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageSend to interaction\n         JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n         ));\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link trg from _edge_sendEvent to messageSend\n         JavaSDM.ensure (messageSend.equals (_edge_sendEvent.getTrg ()\n         ));\n\n         // iterate to-many link fragment from interaction to combo\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link lifeline from interaction to line\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n               while ( fujaba__IterInteractionToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check link covered from line to combo\n                     JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                     // check link covered from line to messageReceive\n                     JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_950308 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_950308 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_950308 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_950308 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_950308.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_929436 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_929436 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_929436 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_929436 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_929436.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_32581 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_32581 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_32581 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_32581 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_32581.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_750986 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_750986 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_750986 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_750986 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_750986.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_897498 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_897498 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_897498 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_897498 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_897498.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_133755 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_133755 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_133755 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_133755.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_133755 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_133755.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_996635 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_996635 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_996635 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_996635.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_996635 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_996635.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_365119 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_365119 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_365119 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_365119.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_365119 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_365119.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_459796\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_459796 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_459796.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_459796 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_459796.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_459796 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_459796 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_459796 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_459796.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_499535\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_499535 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_499535.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_499535 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_499535.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_499535 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_499535 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_499535 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_499535.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_659025\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_659025 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_659025.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_659025 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_659025.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_659025 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_659025 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_659025 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_659025.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_592753\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_592753 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_592753.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_592753 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_592753.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_592753 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_592753 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_592753 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_592753.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_302294\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_302294 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_302294.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_302294 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_302294.next ();\n\n                                       // check object __DEC_message_message_302294 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_302294 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_302294 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_302294.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_302294 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_302294.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_sendEvent is really bound\n                              JavaSDM.ensure ( _edge_sendEvent != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_sendEvent to message\n                              JavaSDM.ensure (message.equals (_edge_sendEvent.getSrc ()\n                              ));\n\n                              // check link trg from _edge_sendEvent to messageSend\n                              JavaSDM.ensure (messageSend.equals (_edge_sendEvent.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_122(
			EMoflonEdge _edge_sendEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_800959 = null;\n      InteractionOperand __DEC_messageReceive_fragment_535033 = null;\n      InteractionOperand __DEC_messageSend_fragment_776146 = null;\n      Interaction __DEC_operand_enclosingInteraction_272318 = null;\n      InteractionOperand __DEC_operand_fragment_572049 = null;\n      InteractionOperand __DEC_guard_guard_146887 = null;\n      CombinedFragment __DEC_operand_operand_10200 = null;\n      Constraint __DEC_spec_specification_399163 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_310580 = null;\n      Message __DEC_messageReceive_receiveEvent_310580 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_128200 = null;\n      Message __DEC_messageSend_receiveEvent_128200 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_815073 = null;\n      Message __DEC_messageReceive_sendEvent_815073 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_904035 = null;\n      Message __DEC_messageSend_sendEvent_904035 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_24661 = null;\n      MessageEnd __DEC_message_message_24661 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_receiveEvent is really bound\n         JavaSDM.ensure ( _edge_receiveEvent != null );\n         // bind object\n         _TmpObject = _edge_receiveEvent.getSrc ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link fragment from messageReceive to interaction\n         JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageSend to interaction\n         JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n         ));\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link trg from _edge_receiveEvent to messageReceive\n         JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n         ));\n\n         // iterate to-many link fragment from interaction to combo\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link lifeline from interaction to line\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n               while ( fujaba__IterInteractionToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check link covered from line to combo\n                     JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                     // check link covered from line to messageReceive\n                     JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_800959 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_800959 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_800959 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_800959 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_800959.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_535033 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_535033 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_535033 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_535033 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_535033.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_776146 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_776146 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_776146 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_776146 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_776146.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_272318 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_272318 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_272318 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_272318 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_272318.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_572049 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_572049 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_572049 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_572049 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_572049.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_146887 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_146887 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_146887 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_146887.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_146887 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_146887.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_10200 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_10200 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_10200 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_10200.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_10200 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_10200.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_399163 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_399163 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_399163 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_399163.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_399163 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_399163.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_310580\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_310580 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_310580.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_310580 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_310580.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_310580 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_310580 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_310580 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_310580.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_128200\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_128200 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_128200.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_128200 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_128200.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_128200 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_128200 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_128200 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_128200.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_815073\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_815073 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_815073.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_815073 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_815073.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_815073 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_815073 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_815073 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_815073.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_904035\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_904035 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_904035.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_904035 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_904035.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_904035 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_904035 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_904035 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_904035.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_24661\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_24661 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_24661.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_24661 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_24661.next ();\n\n                                       // check object __DEC_message_message_24661 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_24661 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_24661 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_24661.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_24661 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_24661.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_receiveEvent is really bound\n                              JavaSDM.ensure ( _edge_receiveEvent != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_receiveEvent to message\n                              JavaSDM.ensure (message.equals (_edge_receiveEvent.getSrc ()\n                              ));\n\n                              // check link trg from _edge_receiveEvent to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (_edge_receiveEvent.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_123(
			EMoflonEdge _edge_receiveEvent);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_705268 = null;\n      InteractionOperand __DEC_messageReceive_fragment_189921 = null;\n      InteractionOperand __DEC_messageSend_fragment_580763 = null;\n      Interaction __DEC_operand_enclosingInteraction_411338 = null;\n      InteractionOperand __DEC_operand_fragment_569378 = null;\n      InteractionOperand __DEC_guard_guard_584804 = null;\n      CombinedFragment __DEC_operand_operand_945637 = null;\n      Constraint __DEC_spec_specification_962524 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_247195 = null;\n      Message __DEC_messageReceive_receiveEvent_247195 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_688651 = null;\n      Message __DEC_messageSend_receiveEvent_688651 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_964853 = null;\n      Message __DEC_messageReceive_sendEvent_964853 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_385333 = null;\n      Message __DEC_messageSend_sendEvent_385333 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_981043 = null;\n      MessageEnd __DEC_message_message_981043 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_interaction is really bound\n         JavaSDM.ensure ( _edge_interaction != null );\n         // bind object\n         _TmpObject = _edge_interaction.getTrg ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link fragment from interaction to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToMessageReceive = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // bind object\n               message = messageReceive.getMessage ();\n\n               // check object message is really bound\n               JavaSDM.ensure ( message != null );\n\n               // check link message from message to interaction\n               JavaSDM.ensure (interaction.equals (message.getInteraction ()\n               ));\n\n               // check link receiveEvent from message to messageReceive\n               JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n               ));\n\n               // bind object\n               _TmpObject = message.getSendEvent ();\n\n               // ensure correct type and really bound of object messageSend\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link fragment from messageSend to interaction\n               JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n               ));\n\n               // check link message from messageSend to message\n               JavaSDM.ensure (message.equals (messageSend.getMessage ()\n               ));\n\n               // check link src from _edge_interaction to message\n               JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n               ));\n\n               // iterate to-many link fragment from interaction to combo\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n               while ( fujaba__IterInteractionToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link lifeline from interaction to line\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n                     while ( fujaba__IterInteractionToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check link covered from line to combo\n                           JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                           // check link covered from line to messageReceive\n                           JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_705268 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_705268 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_705268 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_705268 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_705268.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_189921 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_189921 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_189921 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_189921 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_189921.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_580763 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_580763 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_580763 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_580763 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_580763.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_411338 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_411338 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_411338 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_411338 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_411338.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_569378 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_569378 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_569378 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_569378 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_569378.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_584804 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_584804 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_584804 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_584804.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_584804 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_584804.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_945637 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_945637 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_945637 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_945637.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_945637 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_945637.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_962524 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_962524 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_962524 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_962524.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_962524 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_962524.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_247195\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_247195 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_247195.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_247195 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_247195.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_247195 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_247195 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_247195 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_247195.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_688651\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_688651 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_688651.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_688651 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_688651.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_688651 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_688651 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_688651 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_688651.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_964853\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_964853 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_964853.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_964853 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_964853.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_964853 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_964853 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_964853 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_964853.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_385333\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_385333 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_385333.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_385333 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_385333.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_385333 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_385333 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_385333 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_385333.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_981043\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_981043 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_981043.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_981043 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_981043.next ();\n\n                                             // check object __DEC_message_message_981043 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_981043 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_981043 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_981043.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_981043 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_981043.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_interaction is really bound\n                                    JavaSDM.ensure ( _edge_interaction != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_interaction to message\n                                    JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_interaction to interaction\n                                    JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from line to messageReceive\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_124(
			EMoflonEdge _edge_interaction);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_937240 = null;\n      InteractionOperand __DEC_messageReceive_fragment_567377 = null;\n      InteractionOperand __DEC_messageSend_fragment_115238 = null;\n      Interaction __DEC_operand_enclosingInteraction_102876 = null;\n      InteractionOperand __DEC_operand_fragment_41395 = null;\n      InteractionOperand __DEC_guard_guard_223743 = null;\n      CombinedFragment __DEC_operand_operand_104716 = null;\n      Constraint __DEC_spec_specification_607988 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_838712 = null;\n      Message __DEC_messageReceive_receiveEvent_838712 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_993927 = null;\n      Message __DEC_messageSend_receiveEvent_993927 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_479951 = null;\n      Message __DEC_messageReceive_sendEvent_479951 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_232943 = null;\n      Message __DEC_messageSend_sendEvent_232943 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_674563 = null;\n      MessageEnd __DEC_message_message_674563 = null;\n      Match match = null;\n      Iterator fujaba__IterInteractionTo_edge_interaction = null;\n      EMoflonEdge _edge_interaction = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterInteractionToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object interaction\n         JavaSDM.ensure ( _TmpObject instanceof Interaction );\n         interaction = (Interaction) _TmpObject;\n\n         // iterate to-many link fragment from interaction to combo\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link fragment from interaction to messageReceive\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToMessageReceive = new ArrayList(interaction.getFragment()).iterator ();\n\n               while ( fujaba__IterInteractionToMessageReceive.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInteractionToMessageReceive.next ();\n\n                     // ensure correct type and really bound of object messageReceive\n                     JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                     messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n                     // iterate to-many link fragment from interaction to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n                     while ( fujaba__IterInteractionToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // check link trg from _edge_message to message\n                           JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                           ));\n\n                           // iterate to-many link lifeline from interaction to line\n                           fujaba__Success = false;\n\n                           fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n                           while ( fujaba__IterInteractionToLine.hasNext () )\n                           {\n                              try\n                              {\n                                 line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                                 // check object line is really bound\n                                 JavaSDM.ensure ( line != null );\n                                 // check link covered from line to combo\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                 // check link covered from line to messageReceive\n                                 JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                 // iterate to-many link covered from line to operand\n                                 fujaba__Success = false;\n\n                                 fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                                 while ( fujaba__IterLineToOperand.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                       // ensure correct type and really bound of object operand\n                                       JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                       operand = (InteractionOperand) _TmpObject;\n                                       // bind object\n                                       guard = operand.getGuard ();\n\n                                       // check object guard is really bound\n                                       JavaSDM.ensure ( guard != null );\n\n                                       // check link operand from operand to combo\n                                       JavaSDM.ensure (combo.equals (operand.eContainer()\n                                       ));\n\n                                       // bind object\n                                       _TmpObject = guard.getSpecification ();\n\n                                       // ensure correct type and really bound of object spec\n                                       JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                       spec = (LiteralString) _TmpObject;\n\n                                       // iterate to-many link trg from interaction to _edge_interaction\n                                       fujaba__Success = false;\n\n                                       fujaba__IterInteractionTo_edge_interaction = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(interaction,EMoflonEdge.class,\"trg\")).iterator ();\n\n                                       while ( fujaba__IterInteractionTo_edge_interaction.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             _edge_interaction = (EMoflonEdge) fujaba__IterInteractionTo_edge_interaction.next ();\n\n                                             // check object _edge_interaction is really bound\n                                             JavaSDM.ensure ( _edge_interaction != null );\n                                             // check isomorphic binding between objects _edge_message and _edge_interaction \n                                             JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                             // check link src from _edge_interaction to message\n                                             JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                             ));\n\n                                             // story node \'test core match and DECs\'\n                                             try \n                                             {\n                                                fujaba__Success = false; \n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_combo_fragment_937240 = combo.getEnclosingOperand ();\n\n                                                   // check object __DEC_combo_fragment_937240 is really bound\n                                                   JavaSDM.ensure ( __DEC_combo_fragment_937240 != null );\n\n                                                   // check isomorphic binding between objects __DEC_combo_fragment_937240 and operand \n                                                   JavaSDM.ensure ( !__DEC_combo_fragment_937240.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageReceive_fragment_567377 = messageReceive.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageReceive_fragment_567377 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageReceive_fragment_567377 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageReceive_fragment_567377 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageReceive_fragment_567377.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_messageSend_fragment_115238 = messageSend.getEnclosingOperand ();\n\n                                                   // check object __DEC_messageSend_fragment_115238 is really bound\n                                                   JavaSDM.ensure ( __DEC_messageSend_fragment_115238 != null );\n\n                                                   // check isomorphic binding between objects __DEC_messageSend_fragment_115238 and operand \n                                                   JavaSDM.ensure ( !__DEC_messageSend_fragment_115238.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_enclosingInteraction_102876 = operand.getEnclosingInteraction ();\n\n                                                   // check object __DEC_operand_enclosingInteraction_102876 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_enclosingInteraction_102876 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_enclosingInteraction_102876 and interaction \n                                                   JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_102876.equals (interaction) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_fragment_41395 = operand.getEnclosingOperand ();\n\n                                                   // check object __DEC_operand_fragment_41395 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_fragment_41395 != null );\n\n                                                   // check isomorphic binding between objects __DEC_operand_fragment_41395 and operand \n                                                   JavaSDM.ensure ( !__DEC_operand_fragment_41395.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // negative check for link packagedElement from guard\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // negative check for link packagedElement from spec\n                                                JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_guard_guard_223743 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                                   // check object __DEC_guard_guard_223743 is really bound\n                                                   JavaSDM.ensure ( __DEC_guard_guard_223743 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(guard.equals(__DEC_guard_guard_223743.getGuard()));\n\n                                                   // check isomorphic binding between objects __DEC_guard_guard_223743 and operand \n                                                   JavaSDM.ensure ( !__DEC_guard_guard_223743.equals (operand) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_operand_operand_104716 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                                   // check object __DEC_operand_operand_104716 is really bound\n                                                   JavaSDM.ensure ( __DEC_operand_operand_104716 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(__DEC_operand_operand_104716.getOperand().contains(operand));\n\n                                                   // check isomorphic binding between objects __DEC_operand_operand_104716 and combo \n                                                   JavaSDM.ensure ( !__DEC_operand_operand_104716.equals (combo) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // bind object\n                                                   __DEC_spec_specification_607988 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                                   // check object __DEC_spec_specification_607988 is really bound\n                                                   JavaSDM.ensure ( __DEC_spec_specification_607988 != null );\n\n                                                   // check if contained via correct reference\n                                                   JavaSDM.ensure(spec.equals(__DEC_spec_specification_607988.getSpecification()));\n\n                                                   // check isomorphic binding between objects __DEC_spec_specification_607988 and guard \n                                                   JavaSDM.ensure ( !__DEC_spec_specification_607988.equals (guard) );\n\n\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_838712\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_838712 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_838712.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageReceive_receiveEvent_838712 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_838712.next ();\n\n                                                         // check object __DEC_messageReceive_receiveEvent_838712 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_838712 != null );\n                                                         // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_838712 and message \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_838712.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_993927\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_993927 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_993927.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageSend_receiveEvent_993927 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_993927.next ();\n\n                                                         // check object __DEC_messageSend_receiveEvent_993927 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_receiveEvent_993927 != null );\n                                                         // check isomorphic binding between objects __DEC_messageSend_receiveEvent_993927 and message \n                                                         JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_993927.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_479951\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_479951 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_479951.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageReceive_sendEvent_479951 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_479951.next ();\n\n                                                         // check object __DEC_messageReceive_sendEvent_479951 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageReceive_sendEvent_479951 != null );\n                                                         // check isomorphic binding between objects __DEC_messageReceive_sendEvent_479951 and message \n                                                         JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_479951.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_232943\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_232943 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_232943.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_messageSend_sendEvent_232943 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_232943.next ();\n\n                                                         // check object __DEC_messageSend_sendEvent_232943 is really bound\n                                                         JavaSDM.ensure ( __DEC_messageSend_sendEvent_232943 != null );\n                                                         // check isomorphic binding between objects __DEC_messageSend_sendEvent_232943 and message \n                                                         JavaSDM.ensure ( !__DEC_messageSend_sendEvent_232943.equals (message) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check negative bindings\n                                                try\n                                                {\n                                                   fujaba__Success = false;\n\n                                                   // iterate to-many link message from message to __DEC_message_message_674563\n                                                   fujaba__Success = false;\n\n                                                   fujaba__IterMessageTo__DEC_message_message_674563 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                                   while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_674563.hasNext () )\n                                                   {\n                                                      try\n                                                      {\n                                                         __DEC_message_message_674563 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_674563.next ();\n\n                                                         // check object __DEC_message_message_674563 is really bound\n                                                         JavaSDM.ensure ( __DEC_message_message_674563 != null );\n                                                         // check isomorphic binding between objects __DEC_message_message_674563 and messageReceive \n                                                         JavaSDM.ensure ( !__DEC_message_message_674563.equals (messageReceive) );\n\n                                                         // check isomorphic binding between objects __DEC_message_message_674563 and messageSend \n                                                         JavaSDM.ensure ( !__DEC_message_message_674563.equals (messageSend) );\n\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n                                                   }\n                                                   JavaSDM.ensure (fujaba__Success);\n\n                                                   fujaba__Success = true;\n                                                }\n                                                catch ( JavaSDMException fujaba__InternalException )\n                                                {\n                                                   fujaba__Success = false;\n                                                }\n\n                                                fujaba__Success = !(fujaba__Success);\n\n                                                JavaSDM.ensure ( fujaba__Success );\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from operand to operand\n                                                JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                                )));\n\n                                                // check object _edge_interaction is really bound\n                                                JavaSDM.ensure ( _edge_interaction != null );\n                                                // check object _edge_message is really bound\n                                                JavaSDM.ensure ( _edge_message != null );\n                                                // check object combo is really bound\n                                                JavaSDM.ensure ( combo != null );\n                                                // check object guard is really bound\n                                                JavaSDM.ensure ( guard != null );\n                                                // check object interaction is really bound\n                                                JavaSDM.ensure ( interaction != null );\n                                                // check object line is really bound\n                                                JavaSDM.ensure ( line != null );\n                                                // check object message is really bound\n                                                JavaSDM.ensure ( message != null );\n                                                // check object messageReceive is really bound\n                                                JavaSDM.ensure ( messageReceive != null );\n                                                // check object messageSend is really bound\n                                                JavaSDM.ensure ( messageSend != null );\n                                                // check object operand is really bound\n                                                JavaSDM.ensure ( operand != null );\n                                                // check object spec is really bound\n                                                JavaSDM.ensure ( spec != null );\n                                                // check isomorphic binding between objects _edge_message and _edge_interaction \n                                                JavaSDM.ensure ( !_edge_message.equals (_edge_interaction) );\n\n                                                // check isomorphic binding between objects messageSend and messageReceive \n                                                JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                                // check link fragment from combo to interaction\n                                                JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageReceive to interaction\n                                                JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from messageSend to interaction\n                                                JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                                                ));\n\n                                                // check link fragment from operand to interaction\n                                                JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                                )));\n\n                                                // check link fragment from combo to operand\n                                                JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageReceive to operand\n                                                JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                                )));\n\n                                                // check link fragment from messageSend to operand\n                                                JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                                )));\n\n                                                // check link guard from operand to guard\n                                                JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                                ));\n\n                                                // check link lifeline from line to interaction\n                                                JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                                ));\n\n                                                // check link message from message to interaction\n                                                JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                                ));\n\n                                                // check link message from messageReceive to message\n                                                JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                                ));\n\n                                                // check link message from messageSend to message\n                                                JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                                ));\n\n                                                // check link receiveEvent from message to messageReceive\n                                                JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                                ));\n\n                                                // check link receiveEvent from message to messageSend\n                                                JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                                )));\n\n                                                // check link sendEvent from message to messageSend\n                                                JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                                ));\n\n                                                // check link sendEvent from message to messageReceive\n                                                JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                                )));\n\n                                                // check link operand from operand to combo\n                                                JavaSDM.ensure (combo.equals (operand.eContainer()\n                                                ));\n\n                                                // check link specification from spec to guard\n                                                JavaSDM.ensure (guard.equals (spec.eContainer()\n                                                ));\n\n                                                // check link src from _edge_interaction to message\n                                                JavaSDM.ensure (message.equals (_edge_interaction.getSrc ()\n                                                ));\n\n                                                // check link src from _edge_message to interaction\n                                                JavaSDM.ensure (interaction.equals (_edge_message.getSrc ()\n                                                ));\n\n                                                // check link trg from _edge_interaction to interaction\n                                                JavaSDM.ensure (interaction.equals (_edge_interaction.getTrg ()\n                                                ));\n\n                                                // check link trg from _edge_message to message\n                                                JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                                ));\n\n                                                // check link covered from line to combo\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                                // check link covered from line to messageReceive\n                                                JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                                // check link covered from operand to line\n                                                JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                                // create object match\n                                                match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                                // assign attribute match\n                                                match.setRuleName (__eClass.getName());\n                                                // statement node \'bookkeeping with generic isAppropriate method\'\n                                                fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                                                if (fujaba__Success)\n                                                {\n                                                   // statement node \'Ensure that the correct types of elements are matched\'\n                                                   fujaba__Success = this.checkTypes_BWD(match);\n                                                   if (fujaba__Success)\n                                                   {\n                                                      // story node \'Add match to rule result\'\n                                                      try \n                                                      {\n                                                         fujaba__Success = false; \n\n                                                         // check object __performOperation is really bound\n                                                         JavaSDM.ensure ( __performOperation != null );\n                                                         // check object __result is really bound\n                                                         JavaSDM.ensure ( __result != null );\n                                                         // check object match is really bound\n                                                         JavaSDM.ensure ( match != null );\n\n                                                         // create link\n                                                         org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                                         // create link\n                                                         __result.getContents().add(match);\n\n                                                         fujaba__Success = true;\n                                                      }\n                                                      catch ( JavaSDMException fujaba__InternalException )\n                                                      {\n                                                         fujaba__Success = false;\n                                                      }\n\n\n                                                   }\n                                                   else\n                                                   {\n\n                                                   }\n\n                                                }\n                                                else\n                                                {\n\n                                                }\n                                                fujaba__Success = true;\n                                             }\n                                             catch ( JavaSDMException fujaba__InternalException )\n                                             {\n                                                fujaba__Success = false;\n                                             }\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_125(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_644834 = null;\n      InteractionOperand __DEC_messageReceive_fragment_191683 = null;\n      InteractionOperand __DEC_messageSend_fragment_424701 = null;\n      Interaction __DEC_operand_enclosingInteraction_375484 = null;\n      InteractionOperand __DEC_operand_fragment_91207 = null;\n      InteractionOperand __DEC_guard_guard_94837 = null;\n      CombinedFragment __DEC_operand_operand_42140 = null;\n      Constraint __DEC_spec_specification_294944 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_302507 = null;\n      Message __DEC_messageReceive_receiveEvent_302507 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_427422 = null;\n      Message __DEC_messageSend_receiveEvent_427422 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_653942 = null;\n      Message __DEC_messageReceive_sendEvent_653942 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_272450 = null;\n      Message __DEC_messageSend_sendEvent_272450 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_310147 = null;\n      MessageEnd __DEC_message_message_310147 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      Iterator fujaba__IterInteractionToMessageReceive = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Interaction interaction = null;\n      MessageOccurrenceSpecification messageSend = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getSrc ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // bind object\n         interaction = messageSend.getEnclosingInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         message = messageSend.getMessage ();\n\n         // check object message is really bound\n         JavaSDM.ensure ( message != null );\n\n         // check link message from message to interaction\n         JavaSDM.ensure (interaction.equals (message.getInteraction ()\n         ));\n\n         // check link sendEvent from message to messageSend\n         JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n         ));\n\n         // check link trg from _edge_message to message\n         JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n         ));\n\n         // iterate to-many link fragment from interaction to messageReceive\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToMessageReceive = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToMessageReceive.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToMessageReceive.next ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n               // check isomorphic binding between objects messageSend and messageReceive \n               JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n               // check link message from messageReceive to message\n               JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n               ));\n\n               // check link receiveEvent from message to messageReceive\n               JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n               ));\n\n               // iterate to-many link fragment from interaction to combo\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n               while ( fujaba__IterInteractionToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // iterate to-many link lifeline from interaction to line\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n                     while ( fujaba__IterInteractionToLine.hasNext () )\n                     {\n                        try\n                        {\n                           line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                           // check object line is really bound\n                           JavaSDM.ensure ( line != null );\n                           // check link covered from line to combo\n                           JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                           // check link covered from line to messageReceive\n                           JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                           // iterate to-many link covered from line to operand\n                           fujaba__Success = false;\n\n                           fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                           while ( fujaba__IterLineToOperand.hasNext () )\n                           {\n                              try\n                              {\n                                 _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                                 // ensure correct type and really bound of object operand\n                                 JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                                 operand = (InteractionOperand) _TmpObject;\n                                 // bind object\n                                 guard = operand.getGuard ();\n\n                                 // check object guard is really bound\n                                 JavaSDM.ensure ( guard != null );\n\n                                 // check link operand from operand to combo\n                                 JavaSDM.ensure (combo.equals (operand.eContainer()\n                                 ));\n\n                                 // bind object\n                                 _TmpObject = guard.getSpecification ();\n\n                                 // ensure correct type and really bound of object spec\n                                 JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                                 spec = (LiteralString) _TmpObject;\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_644834 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_644834 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_644834 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_644834 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_644834.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_191683 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_191683 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_191683 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_191683 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_191683.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_424701 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_424701 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_424701 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_424701 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_424701.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_375484 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_375484 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_375484 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_375484 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_375484.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_91207 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_91207 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_91207 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_91207 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_91207.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_94837 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_94837 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_94837 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_94837.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_94837 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_94837.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_42140 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_42140 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_42140 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_42140.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_42140 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_42140.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_294944 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_294944 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_294944 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_294944.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_294944 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_294944.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_302507\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_302507 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_302507.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_302507 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_302507.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_302507 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_302507 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_302507 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_302507.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_427422\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_427422 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_427422.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_427422 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_427422.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_427422 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_427422 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_427422 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_427422.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_653942\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_653942 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_653942.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_653942 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_653942.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_653942 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_653942 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_653942 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_653942.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_272450\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_272450 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_272450.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_272450 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_272450.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_272450 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_272450 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_272450 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_272450.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_310147\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_310147 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_310147.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_310147 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_310147.next ();\n\n                                             // check object __DEC_message_message_310147 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_310147 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_310147 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_310147.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_310147 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_310147.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_message is really bound\n                                    JavaSDM.ensure ( _edge_message != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (_edge_message.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_message to message\n                                    JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from line to messageReceive\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_126(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_78912 = null;\n      InteractionOperand __DEC_messageReceive_fragment_784363 = null;\n      InteractionOperand __DEC_messageSend_fragment_207779 = null;\n      Interaction __DEC_operand_enclosingInteraction_222553 = null;\n      InteractionOperand __DEC_operand_fragment_974645 = null;\n      InteractionOperand __DEC_guard_guard_160935 = null;\n      CombinedFragment __DEC_operand_operand_650249 = null;\n      Constraint __DEC_spec_specification_683475 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_519395 = null;\n      Message __DEC_messageReceive_receiveEvent_519395 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_874539 = null;\n      Message __DEC_messageSend_receiveEvent_874539 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_593374 = null;\n      Message __DEC_messageReceive_sendEvent_593374 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_528614 = null;\n      Message __DEC_messageSend_sendEvent_528614 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_429129 = null;\n      MessageEnd __DEC_message_message_429129 = null;\n      Match match = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterInteractionToLine = null;\n      Lifeline line = null;\n      Iterator fujaba__IterInteractionToCombo = null;\n      CombinedFragment combo = null;\n      MessageOccurrenceSpecification messageSend = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Interaction interaction = null;\n      Message message = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_message is really bound\n         JavaSDM.ensure ( _edge_message != null );\n         // bind object\n         _TmpObject = _edge_message.getTrg ();\n\n         // ensure correct type and really bound of object message\n         JavaSDM.ensure ( _TmpObject instanceof Message );\n         message = (Message) _TmpObject;\n\n         // bind object\n         interaction = message.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // bind object\n         _TmpObject = message.getReceiveEvent ();\n\n         // ensure correct type and really bound of object messageReceive\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check link fragment from messageReceive to interaction\n         JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n         ));\n\n         // check link message from messageReceive to message\n         JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n         ));\n\n         // bind object\n         _TmpObject = message.getSendEvent ();\n\n         // ensure correct type and really bound of object messageSend\n         JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n         messageSend = (MessageOccurrenceSpecification) _TmpObject;\n\n         // check isomorphic binding between objects messageSend and messageReceive \n         JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n         // check link fragment from messageSend to interaction\n         JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n         ));\n\n         // check link message from messageSend to message\n         JavaSDM.ensure (message.equals (messageSend.getMessage ()\n         ));\n\n         // check link src from _edge_message to messageReceive\n         JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n         ));\n\n         // iterate to-many link fragment from interaction to combo\n         fujaba__Success = false;\n\n         fujaba__IterInteractionToCombo = new ArrayList(interaction.getFragment()).iterator ();\n\n         while ( fujaba__IterInteractionToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterInteractionToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // iterate to-many link lifeline from interaction to line\n               fujaba__Success = false;\n\n               fujaba__IterInteractionToLine = new ArrayList(interaction.getLifeline()).iterator ();\n\n               while ( fujaba__IterInteractionToLine.hasNext () )\n               {\n                  try\n                  {\n                     line = (Lifeline) fujaba__IterInteractionToLine.next ();\n\n                     // check object line is really bound\n                     JavaSDM.ensure ( line != null );\n                     // check link covered from line to combo\n                     JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                     // check link covered from line to messageReceive\n                     JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                     // iterate to-many link covered from line to operand\n                     fujaba__Success = false;\n\n                     fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n                     while ( fujaba__IterLineToOperand.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                           // ensure correct type and really bound of object operand\n                           JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                           operand = (InteractionOperand) _TmpObject;\n                           // bind object\n                           guard = operand.getGuard ();\n\n                           // check object guard is really bound\n                           JavaSDM.ensure ( guard != null );\n\n                           // check link operand from operand to combo\n                           JavaSDM.ensure (combo.equals (operand.eContainer()\n                           ));\n\n                           // bind object\n                           _TmpObject = guard.getSpecification ();\n\n                           // ensure correct type and really bound of object spec\n                           JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                           spec = (LiteralString) _TmpObject;\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_78912 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_78912 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_78912 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_78912 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_78912.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_784363 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_784363 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_784363 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_784363 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_784363.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_207779 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_207779 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_207779 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_207779 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_207779.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_222553 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_222553 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_222553 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_222553 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_222553.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_974645 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_974645 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_974645 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_974645 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_974645.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_160935 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_160935 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_160935 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_160935.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_160935 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_160935.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_650249 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_650249 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_650249 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_650249.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_650249 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_650249.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_683475 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_683475 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_683475 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_683475.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_683475 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_683475.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_519395\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_519395 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_519395.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_519395 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_519395.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_519395 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_519395 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_519395 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_519395.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_874539\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_874539 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_874539.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_874539 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_874539.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_874539 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_874539 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_874539 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_874539.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_593374\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_593374 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_593374.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_593374 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_593374.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_593374 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_593374 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_593374 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_593374.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_528614\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_528614 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_528614.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_528614 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_528614.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_528614 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_528614 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_528614 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_528614.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_429129\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_429129 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_429129.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_429129 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_429129.next ();\n\n                                       // check object __DEC_message_message_429129 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_429129 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_429129 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_429129.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_429129 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_429129.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_message is really bound\n                              JavaSDM.ensure ( _edge_message != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (_edge_message.getSrc ()\n                              ));\n\n                              // check link trg from _edge_message to message\n                              JavaSDM.ensure (message.equals (_edge_message.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_127(EMoflonEdge _edge_message);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_384121 = null;\n      InteractionOperand __DEC_messageReceive_fragment_807710 = null;\n      InteractionOperand __DEC_messageSend_fragment_811708 = null;\n      Interaction __DEC_operand_enclosingInteraction_232165 = null;\n      InteractionOperand __DEC_operand_fragment_885040 = null;\n      InteractionOperand __DEC_guard_guard_421521 = null;\n      CombinedFragment __DEC_operand_operand_919190 = null;\n      Constraint __DEC_spec_specification_312952 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_365344 = null;\n      Message __DEC_messageReceive_receiveEvent_365344 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_10308 = null;\n      Message __DEC_messageSend_receiveEvent_10308 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_741225 = null;\n      Message __DEC_messageReceive_sendEvent_741225 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_193573 = null;\n      Message __DEC_messageSend_sendEvent_193573 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_750647 = null;\n      MessageEnd __DEC_message_message_750647 = null;\n      Match match = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      LiteralString spec = null;\n      Interaction interaction = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_coveredBy is really bound\n         JavaSDM.ensure ( _edge_coveredBy != null );\n         // bind object\n         _TmpObject = _edge_coveredBy.getSrc ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // iterate to-many link covered from line to operand\n         fujaba__Success = false;\n\n         fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToOperand.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToOperand.next ();\n\n               // ensure correct type and really bound of object operand\n               JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n               operand = (InteractionOperand) _TmpObject;\n               // bind object\n               guard = operand.getGuard ();\n\n               // check object guard is really bound\n               JavaSDM.ensure ( guard != null );\n\n               // bind object\n               interaction = line.getInteraction ();\n\n               // check object interaction is really bound\n               JavaSDM.ensure ( interaction != null );\n\n               // bind object\n               _TmpObject = guard.getSpecification ();\n\n               // ensure correct type and really bound of object spec\n               JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n               spec = (LiteralString) _TmpObject;\n\n               // bind object\n               _TmpObject = _edge_coveredBy.getTrg ();\n\n               // ensure correct type and really bound of object messageReceive\n               JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n               messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n               // check link fragment from messageReceive to interaction\n               JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n               ));\n\n               // check link covered from line to messageReceive\n               JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n               // iterate to-many link covered from line to combo\n               fujaba__Success = false;\n\n               fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToCombo.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToCombo.next ();\n\n                     // ensure correct type and really bound of object combo\n                     JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n                     combo = (CombinedFragment) _TmpObject;\n                     // check link fragment from combo to interaction\n                     JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                     ));\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // iterate to-many link fragment from interaction to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n                     while ( fujaba__IterInteractionToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link receiveEvent from message to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // story node \'test core match and DECs\'\n                           try \n                           {\n                              fujaba__Success = false; \n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_combo_fragment_384121 = combo.getEnclosingOperand ();\n\n                                 // check object __DEC_combo_fragment_384121 is really bound\n                                 JavaSDM.ensure ( __DEC_combo_fragment_384121 != null );\n\n                                 // check isomorphic binding between objects __DEC_combo_fragment_384121 and operand \n                                 JavaSDM.ensure ( !__DEC_combo_fragment_384121.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageReceive_fragment_807710 = messageReceive.getEnclosingOperand ();\n\n                                 // check object __DEC_messageReceive_fragment_807710 is really bound\n                                 JavaSDM.ensure ( __DEC_messageReceive_fragment_807710 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageReceive_fragment_807710 and operand \n                                 JavaSDM.ensure ( !__DEC_messageReceive_fragment_807710.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_messageSend_fragment_811708 = messageSend.getEnclosingOperand ();\n\n                                 // check object __DEC_messageSend_fragment_811708 is really bound\n                                 JavaSDM.ensure ( __DEC_messageSend_fragment_811708 != null );\n\n                                 // check isomorphic binding between objects __DEC_messageSend_fragment_811708 and operand \n                                 JavaSDM.ensure ( !__DEC_messageSend_fragment_811708.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_enclosingInteraction_232165 = operand.getEnclosingInteraction ();\n\n                                 // check object __DEC_operand_enclosingInteraction_232165 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_enclosingInteraction_232165 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_enclosingInteraction_232165 and interaction \n                                 JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_232165.equals (interaction) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_fragment_885040 = operand.getEnclosingOperand ();\n\n                                 // check object __DEC_operand_fragment_885040 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_fragment_885040 != null );\n\n                                 // check isomorphic binding between objects __DEC_operand_fragment_885040 and operand \n                                 JavaSDM.ensure ( !__DEC_operand_fragment_885040.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // negative check for link packagedElement from guard\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // negative check for link packagedElement from spec\n                              JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_guard_guard_421521 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                 // check object __DEC_guard_guard_421521 is really bound\n                                 JavaSDM.ensure ( __DEC_guard_guard_421521 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(guard.equals(__DEC_guard_guard_421521.getGuard()));\n\n                                 // check isomorphic binding between objects __DEC_guard_guard_421521 and operand \n                                 JavaSDM.ensure ( !__DEC_guard_guard_421521.equals (operand) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_operand_operand_919190 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                 // check object __DEC_operand_operand_919190 is really bound\n                                 JavaSDM.ensure ( __DEC_operand_operand_919190 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(__DEC_operand_operand_919190.getOperand().contains(operand));\n\n                                 // check isomorphic binding between objects __DEC_operand_operand_919190 and combo \n                                 JavaSDM.ensure ( !__DEC_operand_operand_919190.equals (combo) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // bind object\n                                 __DEC_spec_specification_312952 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                 // check object __DEC_spec_specification_312952 is really bound\n                                 JavaSDM.ensure ( __DEC_spec_specification_312952 != null );\n\n                                 // check if contained via correct reference\n                                 JavaSDM.ensure(spec.equals(__DEC_spec_specification_312952.getSpecification()));\n\n                                 // check isomorphic binding between objects __DEC_spec_specification_312952 and guard \n                                 JavaSDM.ensure ( !__DEC_spec_specification_312952.equals (guard) );\n\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_365344\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_365344 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_365344.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_receiveEvent_365344 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_365344.next ();\n\n                                       // check object __DEC_messageReceive_receiveEvent_365344 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_365344 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_365344 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_365344.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_10308\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_10308 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_10308.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_receiveEvent_10308 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_10308.next ();\n\n                                       // check object __DEC_messageSend_receiveEvent_10308 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_receiveEvent_10308 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_receiveEvent_10308 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_10308.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_741225\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_741225 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_741225.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageReceive_sendEvent_741225 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_741225.next ();\n\n                                       // check object __DEC_messageReceive_sendEvent_741225 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_sendEvent_741225 != null );\n                                       // check isomorphic binding between objects __DEC_messageReceive_sendEvent_741225 and message \n                                       JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_741225.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_193573\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_193573 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_193573.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_messageSend_sendEvent_193573 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_193573.next ();\n\n                                       // check object __DEC_messageSend_sendEvent_193573 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_sendEvent_193573 != null );\n                                       // check isomorphic binding between objects __DEC_messageSend_sendEvent_193573 and message \n                                       JavaSDM.ensure ( !__DEC_messageSend_sendEvent_193573.equals (message) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check negative bindings\n                              try\n                              {\n                                 fujaba__Success = false;\n\n                                 // iterate to-many link message from message to __DEC_message_message_750647\n                                 fujaba__Success = false;\n\n                                 fujaba__IterMessageTo__DEC_message_message_750647 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                 while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_750647.hasNext () )\n                                 {\n                                    try\n                                    {\n                                       __DEC_message_message_750647 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_750647.next ();\n\n                                       // check object __DEC_message_message_750647 is really bound\n                                       JavaSDM.ensure ( __DEC_message_message_750647 != null );\n                                       // check isomorphic binding between objects __DEC_message_message_750647 and messageReceive \n                                       JavaSDM.ensure ( !__DEC_message_message_750647.equals (messageReceive) );\n\n                                       // check isomorphic binding between objects __DEC_message_message_750647 and messageSend \n                                       JavaSDM.ensure ( !__DEC_message_message_750647.equals (messageSend) );\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n                                 }\n                                 JavaSDM.ensure (fujaba__Success);\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n\n                              fujaba__Success = !(fujaba__Success);\n\n                              JavaSDM.ensure ( fujaba__Success );\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from operand to operand\n                              JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                              )));\n\n                              // check object _edge_coveredBy is really bound\n                              JavaSDM.ensure ( _edge_coveredBy != null );\n                              // check object combo is really bound\n                              JavaSDM.ensure ( combo != null );\n                              // check object guard is really bound\n                              JavaSDM.ensure ( guard != null );\n                              // check object interaction is really bound\n                              JavaSDM.ensure ( interaction != null );\n                              // check object line is really bound\n                              JavaSDM.ensure ( line != null );\n                              // check object message is really bound\n                              JavaSDM.ensure ( message != null );\n                              // check object messageReceive is really bound\n                              JavaSDM.ensure ( messageReceive != null );\n                              // check object messageSend is really bound\n                              JavaSDM.ensure ( messageSend != null );\n                              // check object operand is really bound\n                              JavaSDM.ensure ( operand != null );\n                              // check object spec is really bound\n                              JavaSDM.ensure ( spec != null );\n                              // check isomorphic binding between objects messageSend and messageReceive \n                              JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                              // check link fragment from combo to interaction\n                              JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageReceive to interaction\n                              JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from messageSend to interaction\n                              JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                              ));\n\n                              // check link fragment from operand to interaction\n                              JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                              )));\n\n                              // check link fragment from combo to operand\n                              JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageReceive to operand\n                              JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                              )));\n\n                              // check link fragment from messageSend to operand\n                              JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                              )));\n\n                              // check link guard from operand to guard\n                              JavaSDM.ensure (guard.equals (operand.getGuard ()\n                              ));\n\n                              // check link lifeline from line to interaction\n                              JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                              ));\n\n                              // check link message from message to interaction\n                              JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                              ));\n\n                              // check link message from messageReceive to message\n                              JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                              ));\n\n                              // check link message from messageSend to message\n                              JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                              ));\n\n                              // check link receiveEvent from message to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                              ));\n\n                              // check link receiveEvent from message to messageSend\n                              JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                              )));\n\n                              // check link sendEvent from message to messageSend\n                              JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                              ));\n\n                              // check link sendEvent from message to messageReceive\n                              JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                              )));\n\n                              // check link operand from operand to combo\n                              JavaSDM.ensure (combo.equals (operand.eContainer()\n                              ));\n\n                              // check link specification from spec to guard\n                              JavaSDM.ensure (guard.equals (spec.eContainer()\n                              ));\n\n                              // check link src from _edge_coveredBy to line\n                              JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                              ));\n\n                              // check link trg from _edge_coveredBy to messageReceive\n                              JavaSDM.ensure (messageReceive.equals (_edge_coveredBy.getTrg ()\n                              ));\n\n                              // check link covered from line to combo\n                              JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                              // check link covered from line to messageReceive\n                              JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                              // check link covered from operand to line\n                              JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                              // create object match\n                              match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                              // assign attribute match\n                              match.setRuleName (__eClass.getName());\n                              // statement node \'bookkeeping with generic isAppropriate method\'\n                              fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                              if (fujaba__Success)\n                              {\n                                 // statement node \'Ensure that the correct types of elements are matched\'\n                                 fujaba__Success = this.checkTypes_BWD(match);\n                                 if (fujaba__Success)\n                                 {\n                                    // story node \'Add match to rule result\'\n                                    try \n                                    {\n                                       fujaba__Success = false; \n\n                                       // check object __performOperation is really bound\n                                       JavaSDM.ensure ( __performOperation != null );\n                                       // check object __result is really bound\n                                       JavaSDM.ensure ( __result != null );\n                                       // check object match is really bound\n                                       JavaSDM.ensure ( match != null );\n\n                                       // create link\n                                       org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                       // create link\n                                       __result.getContents().add(match);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n\n                                 }\n                                 else\n                                 {\n\n                                 }\n\n                              }\n                              else\n                              {\n\n                              }\n                              fujaba__Success = true;\n                           }\n                           catch ( JavaSDMException fujaba__InternalException )\n                           {\n                              fujaba__Success = false;\n                           }\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n\n\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_128(
			EMoflonEdge _edge_coveredBy);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='boolean fujaba__Success = false;\n      Object _TmpObject = null;\n      EClass __eClass = null;\n      Iterator fujaba__Iter__eClassTo__performOperation = null;\n      EOperation __performOperation = null;\n      EObjectContainer __result = null;\n      InteractionOperand __DEC_combo_fragment_554763 = null;\n      InteractionOperand __DEC_messageReceive_fragment_272413 = null;\n      InteractionOperand __DEC_messageSend_fragment_710940 = null;\n      Interaction __DEC_operand_enclosingInteraction_392426 = null;\n      InteractionOperand __DEC_operand_fragment_522168 = null;\n      InteractionOperand __DEC_guard_guard_444216 = null;\n      CombinedFragment __DEC_operand_operand_553907 = null;\n      Constraint __DEC_spec_specification_663872 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_936382 = null;\n      Message __DEC_messageReceive_receiveEvent_936382 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_836550 = null;\n      Message __DEC_messageSend_receiveEvent_836550 = null;\n      Iterator fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_423691 = null;\n      Message __DEC_messageReceive_sendEvent_423691 = null;\n      Iterator fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_647610 = null;\n      Message __DEC_messageSend_sendEvent_647610 = null;\n      Iterator fujaba__IterMessageTo__DEC_message_message_511417 = null;\n      MessageEnd __DEC_message_message_511417 = null;\n      Match match = null;\n      Iterator fujaba__IterLineTo_edge_coveredBy = null;\n      EMoflonEdge _edge_coveredBy = null;\n      MessageOccurrenceSpecification messageReceive = null;\n      Message message = null;\n      Iterator fujaba__IterInteractionToMessageSend = null;\n      MessageOccurrenceSpecification messageSend = null;\n      LiteralString spec = null;\n      InteractionConstraint guard = null;\n      Iterator fujaba__IterLineToOperand = null;\n      InteractionOperand operand = null;\n      Iterator fujaba__IterLineToCombo = null;\n      CombinedFragment combo = null;\n      Interaction interaction = null;\n      Lifeline line = null;\n\n      // story node \'prepare return value\'\n      try \n      {\n         fujaba__Success = false; \n\n         _TmpObject = (this.eClass());\n\n         // ensure correct type and really bound of object __eClass\n         JavaSDM.ensure ( _TmpObject instanceof EClass );\n         __eClass = (EClass) _TmpObject;\n         // iterate to-many link eOperations from __eClass to __performOperation\n         fujaba__Success = false;\n\n         fujaba__Iter__eClassTo__performOperation = __eClass.getEOperations().iterator ();\n\n         while ( !(fujaba__Success) && fujaba__Iter__eClassTo__performOperation.hasNext () )\n         {\n            try\n            {\n               __performOperation = (EOperation) fujaba__Iter__eClassTo__performOperation.next ();\n\n               // check object __performOperation is really bound\n               JavaSDM.ensure ( __performOperation != null );\n               // attribute condition\n               JavaSDM.ensure ( JavaSDM.stringCompare (__performOperation.getName (), \"isApplicable_BWD\") == 0 );\n\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n         // create object __result\n         __result = TGGRuntimeFactory.eINSTANCE.createEObjectContainer();\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      // story node \'test core match kernel\'\n      try \n      {\n         fujaba__Success = false; \n\n         // check object _edge_covered is really bound\n         JavaSDM.ensure ( _edge_covered != null );\n         // bind object\n         _TmpObject = _edge_covered.getTrg ();\n\n         // ensure correct type and really bound of object line\n         JavaSDM.ensure ( _TmpObject instanceof Lifeline );\n         line = (Lifeline) _TmpObject;\n\n         // bind object\n         interaction = line.getInteraction ();\n\n         // check object interaction is really bound\n         JavaSDM.ensure ( interaction != null );\n\n         // iterate to-many link covered from line to combo\n         fujaba__Success = false;\n\n         fujaba__IterLineToCombo = new ArrayList(line.getCoveredBy()).iterator ();\n\n         while ( fujaba__IterLineToCombo.hasNext () )\n         {\n            try\n            {\n               _TmpObject =  fujaba__IterLineToCombo.next ();\n\n               // ensure correct type and really bound of object combo\n               JavaSDM.ensure ( _TmpObject instanceof CombinedFragment );\n               combo = (CombinedFragment) _TmpObject;\n               // check link fragment from combo to interaction\n               JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n               ));\n\n               // iterate to-many link covered from line to operand\n               fujaba__Success = false;\n\n               fujaba__IterLineToOperand = new ArrayList(line.getCoveredBy()).iterator ();\n\n               while ( fujaba__IterLineToOperand.hasNext () )\n               {\n                  try\n                  {\n                     _TmpObject =  fujaba__IterLineToOperand.next ();\n\n                     // ensure correct type and really bound of object operand\n                     JavaSDM.ensure ( _TmpObject instanceof InteractionOperand );\n                     operand = (InteractionOperand) _TmpObject;\n                     // bind object\n                     guard = operand.getGuard ();\n\n                     // check object guard is really bound\n                     JavaSDM.ensure ( guard != null );\n\n                     // check link operand from operand to combo\n                     JavaSDM.ensure (combo.equals (operand.eContainer()\n                     ));\n\n                     // bind object\n                     _TmpObject = guard.getSpecification ();\n\n                     // ensure correct type and really bound of object spec\n                     JavaSDM.ensure ( _TmpObject instanceof LiteralString );\n                     spec = (LiteralString) _TmpObject;\n\n                     // iterate to-many link fragment from interaction to messageSend\n                     fujaba__Success = false;\n\n                     fujaba__IterInteractionToMessageSend = new ArrayList(interaction.getFragment()).iterator ();\n\n                     while ( fujaba__IterInteractionToMessageSend.hasNext () )\n                     {\n                        try\n                        {\n                           _TmpObject =  fujaba__IterInteractionToMessageSend.next ();\n\n                           // ensure correct type and really bound of object messageSend\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageSend = (MessageOccurrenceSpecification) _TmpObject;\n                           // bind object\n                           message = messageSend.getMessage ();\n\n                           // check object message is really bound\n                           JavaSDM.ensure ( message != null );\n\n                           // check link message from message to interaction\n                           JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                           ));\n\n                           // bind object\n                           _TmpObject = message.getReceiveEvent ();\n\n                           // ensure correct type and really bound of object messageReceive\n                           JavaSDM.ensure ( _TmpObject instanceof MessageOccurrenceSpecification );\n                           messageReceive = (MessageOccurrenceSpecification) _TmpObject;\n\n                           // check isomorphic binding between objects messageSend and messageReceive \n                           JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                           // check link fragment from messageReceive to interaction\n                           JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                           ));\n\n                           // check link message from messageReceive to message\n                           JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                           ));\n\n                           // check link sendEvent from message to messageSend\n                           JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                           ));\n\n                           // check link src from _edge_covered to messageReceive\n                           JavaSDM.ensure (messageReceive.equals (_edge_covered.getSrc ()\n                           ));\n\n                           // check link covered from line to messageReceive\n                           JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                           // iterate to-many link src from line to _edge_coveredBy\n                           fujaba__Success = false;\n\n                           fujaba__IterLineTo_edge_coveredBy = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(line,EMoflonEdge.class,\"src\")).iterator ();\n\n                           while ( fujaba__IterLineTo_edge_coveredBy.hasNext () )\n                           {\n                              try\n                              {\n                                 _edge_coveredBy = (EMoflonEdge) fujaba__IterLineTo_edge_coveredBy.next ();\n\n                                 // check object _edge_coveredBy is really bound\n                                 JavaSDM.ensure ( _edge_coveredBy != null );\n                                 // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                 JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                 // check link trg from _edge_coveredBy to messageReceive\n                                 JavaSDM.ensure (messageReceive.equals (_edge_coveredBy.getTrg ()\n                                 ));\n\n                                 // story node \'test core match and DECs\'\n                                 try \n                                 {\n                                    fujaba__Success = false; \n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_combo_fragment_554763 = combo.getEnclosingOperand ();\n\n                                       // check object __DEC_combo_fragment_554763 is really bound\n                                       JavaSDM.ensure ( __DEC_combo_fragment_554763 != null );\n\n                                       // check isomorphic binding between objects __DEC_combo_fragment_554763 and operand \n                                       JavaSDM.ensure ( !__DEC_combo_fragment_554763.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageReceive_fragment_272413 = messageReceive.getEnclosingOperand ();\n\n                                       // check object __DEC_messageReceive_fragment_272413 is really bound\n                                       JavaSDM.ensure ( __DEC_messageReceive_fragment_272413 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageReceive_fragment_272413 and operand \n                                       JavaSDM.ensure ( !__DEC_messageReceive_fragment_272413.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_messageSend_fragment_710940 = messageSend.getEnclosingOperand ();\n\n                                       // check object __DEC_messageSend_fragment_710940 is really bound\n                                       JavaSDM.ensure ( __DEC_messageSend_fragment_710940 != null );\n\n                                       // check isomorphic binding between objects __DEC_messageSend_fragment_710940 and operand \n                                       JavaSDM.ensure ( !__DEC_messageSend_fragment_710940.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_enclosingInteraction_392426 = operand.getEnclosingInteraction ();\n\n                                       // check object __DEC_operand_enclosingInteraction_392426 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_enclosingInteraction_392426 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_enclosingInteraction_392426 and interaction \n                                       JavaSDM.ensure ( !__DEC_operand_enclosingInteraction_392426.equals (interaction) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_fragment_522168 = operand.getEnclosingOperand ();\n\n                                       // check object __DEC_operand_fragment_522168 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_fragment_522168 != null );\n\n                                       // check isomorphic binding between objects __DEC_operand_fragment_522168 and operand \n                                       JavaSDM.ensure ( !__DEC_operand_fragment_522168.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // negative check for link packagedElement from guard\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(guard,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // negative check for link packagedElement from spec\n                                    JavaSDM.ensure (org.moflon.util.eMoflonEMFUtil.getOppositeReference(spec,ModalSequenceDiagram.Package.class,\"packagedElement\") .size() == 0);\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_guard_guard_444216 = guard.eContainer() instanceof InteractionOperand ? (InteractionOperand) guard.eContainer() : null;\n\n                                       // check object __DEC_guard_guard_444216 is really bound\n                                       JavaSDM.ensure ( __DEC_guard_guard_444216 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(guard.equals(__DEC_guard_guard_444216.getGuard()));\n\n                                       // check isomorphic binding between objects __DEC_guard_guard_444216 and operand \n                                       JavaSDM.ensure ( !__DEC_guard_guard_444216.equals (operand) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_operand_operand_553907 = operand.eContainer() instanceof CombinedFragment ? (CombinedFragment) operand.eContainer() : null;\n\n                                       // check object __DEC_operand_operand_553907 is really bound\n                                       JavaSDM.ensure ( __DEC_operand_operand_553907 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(__DEC_operand_operand_553907.getOperand().contains(operand));\n\n                                       // check isomorphic binding between objects __DEC_operand_operand_553907 and combo \n                                       JavaSDM.ensure ( !__DEC_operand_operand_553907.equals (combo) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // bind object\n                                       __DEC_spec_specification_663872 = spec.eContainer() instanceof Constraint ? (Constraint) spec.eContainer() : null;\n\n                                       // check object __DEC_spec_specification_663872 is really bound\n                                       JavaSDM.ensure ( __DEC_spec_specification_663872 != null );\n\n                                       // check if contained via correct reference\n                                       JavaSDM.ensure(spec.equals(__DEC_spec_specification_663872.getSpecification()));\n\n                                       // check isomorphic binding between objects __DEC_spec_specification_663872 and guard \n                                       JavaSDM.ensure ( !__DEC_spec_specification_663872.equals (guard) );\n\n\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageReceive to __DEC_messageReceive_receiveEvent_936382\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_936382 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_936382.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_receiveEvent_936382 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_receiveEvent_936382.next ();\n\n                                             // check object __DEC_messageReceive_receiveEvent_936382 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_receiveEvent_936382 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_receiveEvent_936382 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_receiveEvent_936382.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link receiveEvent from messageSend to __DEC_messageSend_receiveEvent_836550\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_836550 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"receiveEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_836550.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_receiveEvent_836550 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_receiveEvent_836550.next ();\n\n                                             // check object __DEC_messageSend_receiveEvent_836550 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_receiveEvent_836550 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_receiveEvent_836550 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_receiveEvent_836550.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageReceive to __DEC_messageReceive_sendEvent_423691\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_423691 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageReceive,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_423691.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageReceive_sendEvent_423691 = (Message) fujaba__IterMessageReceiveTo__DEC_messageReceive_sendEvent_423691.next ();\n\n                                             // check object __DEC_messageReceive_sendEvent_423691 is really bound\n                                             JavaSDM.ensure ( __DEC_messageReceive_sendEvent_423691 != null );\n                                             // check isomorphic binding between objects __DEC_messageReceive_sendEvent_423691 and message \n                                             JavaSDM.ensure ( !__DEC_messageReceive_sendEvent_423691.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link sendEvent from messageSend to __DEC_messageSend_sendEvent_647610\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_647610 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(messageSend,Message.class,\"sendEvent\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_647610.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_messageSend_sendEvent_647610 = (Message) fujaba__IterMessageSendTo__DEC_messageSend_sendEvent_647610.next ();\n\n                                             // check object __DEC_messageSend_sendEvent_647610 is really bound\n                                             JavaSDM.ensure ( __DEC_messageSend_sendEvent_647610 != null );\n                                             // check isomorphic binding between objects __DEC_messageSend_sendEvent_647610 and message \n                                             JavaSDM.ensure ( !__DEC_messageSend_sendEvent_647610.equals (message) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check negative bindings\n                                    try\n                                    {\n                                       fujaba__Success = false;\n\n                                       // iterate to-many link message from message to __DEC_message_message_511417\n                                       fujaba__Success = false;\n\n                                       fujaba__IterMessageTo__DEC_message_message_511417 = new ArrayList(org.moflon.util.eMoflonEMFUtil.getOppositeReference(message,MessageEnd.class,\"message\")).iterator ();\n\n                                       while ( !(fujaba__Success) && fujaba__IterMessageTo__DEC_message_message_511417.hasNext () )\n                                       {\n                                          try\n                                          {\n                                             __DEC_message_message_511417 = (MessageEnd) fujaba__IterMessageTo__DEC_message_message_511417.next ();\n\n                                             // check object __DEC_message_message_511417 is really bound\n                                             JavaSDM.ensure ( __DEC_message_message_511417 != null );\n                                             // check isomorphic binding between objects __DEC_message_message_511417 and messageReceive \n                                             JavaSDM.ensure ( !__DEC_message_message_511417.equals (messageReceive) );\n\n                                             // check isomorphic binding between objects __DEC_message_message_511417 and messageSend \n                                             JavaSDM.ensure ( !__DEC_message_message_511417.equals (messageSend) );\n\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n                                       }\n                                       JavaSDM.ensure (fujaba__Success);\n\n                                       fujaba__Success = true;\n                                    }\n                                    catch ( JavaSDMException fujaba__InternalException )\n                                    {\n                                       fujaba__Success = false;\n                                    }\n\n                                    fujaba__Success = !(fujaba__Success);\n\n                                    JavaSDM.ensure ( fujaba__Success );\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from operand to operand\n                                    JavaSDM.ensure (!(operand.equals (operand.getEnclosingOperand ()\n                                    )));\n\n                                    // check object _edge_covered is really bound\n                                    JavaSDM.ensure ( _edge_covered != null );\n                                    // check object _edge_coveredBy is really bound\n                                    JavaSDM.ensure ( _edge_coveredBy != null );\n                                    // check object combo is really bound\n                                    JavaSDM.ensure ( combo != null );\n                                    // check object guard is really bound\n                                    JavaSDM.ensure ( guard != null );\n                                    // check object interaction is really bound\n                                    JavaSDM.ensure ( interaction != null );\n                                    // check object line is really bound\n                                    JavaSDM.ensure ( line != null );\n                                    // check object message is really bound\n                                    JavaSDM.ensure ( message != null );\n                                    // check object messageReceive is really bound\n                                    JavaSDM.ensure ( messageReceive != null );\n                                    // check object messageSend is really bound\n                                    JavaSDM.ensure ( messageSend != null );\n                                    // check object operand is really bound\n                                    JavaSDM.ensure ( operand != null );\n                                    // check object spec is really bound\n                                    JavaSDM.ensure ( spec != null );\n                                    // check isomorphic binding between objects _edge_coveredBy and _edge_covered \n                                    JavaSDM.ensure ( !_edge_coveredBy.equals (_edge_covered) );\n\n                                    // check isomorphic binding between objects messageSend and messageReceive \n                                    JavaSDM.ensure ( !messageSend.equals (messageReceive) );\n\n                                    // check link fragment from combo to interaction\n                                    JavaSDM.ensure (interaction.equals (combo.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageReceive to interaction\n                                    JavaSDM.ensure (interaction.equals (messageReceive.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from messageSend to interaction\n                                    JavaSDM.ensure (interaction.equals (messageSend.getEnclosingInteraction ()\n                                    ));\n\n                                    // check link fragment from operand to interaction\n                                    JavaSDM.ensure (!(interaction.equals (operand.getEnclosingInteraction ()\n                                    )));\n\n                                    // check link fragment from combo to operand\n                                    JavaSDM.ensure (!(operand.equals (combo.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageReceive to operand\n                                    JavaSDM.ensure (!(operand.equals (messageReceive.getEnclosingOperand ()\n                                    )));\n\n                                    // check link fragment from messageSend to operand\n                                    JavaSDM.ensure (!(operand.equals (messageSend.getEnclosingOperand ()\n                                    )));\n\n                                    // check link guard from operand to guard\n                                    JavaSDM.ensure (guard.equals (operand.getGuard ()\n                                    ));\n\n                                    // check link lifeline from line to interaction\n                                    JavaSDM.ensure (interaction.equals (line.getInteraction ()\n                                    ));\n\n                                    // check link message from message to interaction\n                                    JavaSDM.ensure (interaction.equals (message.getInteraction ()\n                                    ));\n\n                                    // check link message from messageReceive to message\n                                    JavaSDM.ensure (message.equals (messageReceive.getMessage ()\n                                    ));\n\n                                    // check link message from messageSend to message\n                                    JavaSDM.ensure (message.equals (messageSend.getMessage ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (message.getReceiveEvent ()\n                                    ));\n\n                                    // check link receiveEvent from message to messageSend\n                                    JavaSDM.ensure (!(messageSend.equals (message.getReceiveEvent ()\n                                    )));\n\n                                    // check link sendEvent from message to messageSend\n                                    JavaSDM.ensure (messageSend.equals (message.getSendEvent ()\n                                    ));\n\n                                    // check link sendEvent from message to messageReceive\n                                    JavaSDM.ensure (!(messageReceive.equals (message.getSendEvent ()\n                                    )));\n\n                                    // check link operand from operand to combo\n                                    JavaSDM.ensure (combo.equals (operand.eContainer()\n                                    ));\n\n                                    // check link specification from spec to guard\n                                    JavaSDM.ensure (guard.equals (spec.eContainer()\n                                    ));\n\n                                    // check link src from _edge_covered to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_covered.getSrc ()\n                                    ));\n\n                                    // check link src from _edge_coveredBy to line\n                                    JavaSDM.ensure (line.equals (_edge_coveredBy.getSrc ()\n                                    ));\n\n                                    // check link trg from _edge_covered to line\n                                    JavaSDM.ensure (line.equals (_edge_covered.getTrg ()\n                                    ));\n\n                                    // check link trg from _edge_coveredBy to messageReceive\n                                    JavaSDM.ensure (messageReceive.equals (_edge_coveredBy.getTrg ()\n                                    ));\n\n                                    // check link covered from line to combo\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (combo));\n\n                                    // check link covered from line to messageReceive\n                                    JavaSDM.ensure (line.getCoveredBy ().contains (messageReceive));\n\n                                    // check link covered from operand to line\n                                    JavaSDM.ensure (operand.getCovered ().contains (line));\n\n                                    // create object match\n                                    match = TGGRuntimeFactory.eINSTANCE.createMatch();\n\n                                    // assign attribute match\n                                    match.setRuleName (__eClass.getName());\n                                    // statement node \'bookkeeping with generic isAppropriate method\'\n                                    fujaba__Success = this.isAppropriate_BWD(match,interaction,combo,messageSend,messageReceive,line,operand,guard,spec,message);\n                                    if (fujaba__Success)\n                                    {\n                                       // statement node \'Ensure that the correct types of elements are matched\'\n                                       fujaba__Success = this.checkTypes_BWD(match);\n                                       if (fujaba__Success)\n                                       {\n                                          // story node \'Add match to rule result\'\n                                          try \n                                          {\n                                             fujaba__Success = false; \n\n                                             // check object __performOperation is really bound\n                                             JavaSDM.ensure ( __performOperation != null );\n                                             // check object __result is really bound\n                                             JavaSDM.ensure ( __result != null );\n                                             // check object match is really bound\n                                             JavaSDM.ensure ( match != null );\n\n                                             // create link\n                                             org.moflon.util.eMoflonEMFUtil.addOppositeReference(match,__performOperation,\"isApplicableOperation\");\n\n                                             // create link\n                                             __result.getContents().add(match);\n\n                                             fujaba__Success = true;\n                                          }\n                                          catch ( JavaSDMException fujaba__InternalException )\n                                          {\n                                             fujaba__Success = false;\n                                          }\n\n\n                                       }\n                                       else\n                                       {\n\n                                       }\n\n                                    }\n                                    else\n                                    {\n\n                                    }\n                                    fujaba__Success = true;\n                                 }\n                                 catch ( JavaSDMException fujaba__InternalException )\n                                 {\n                                    fujaba__Success = false;\n                                 }\n\n\n                                 fujaba__Success = true;\n                              }\n                              catch ( JavaSDMException fujaba__InternalException )\n                              {\n                                 fujaba__Success = false;\n                              }\n                           }\n                           JavaSDM.ensure (fujaba__Success);\n\n\n\n                           fujaba__Success = true;\n                        }\n                        catch ( JavaSDMException fujaba__InternalException )\n                        {\n                           fujaba__Success = false;\n                        }\n                     }\n                     JavaSDM.ensure (fujaba__Success);\n\n\n\n                     fujaba__Success = true;\n                  }\n                  catch ( JavaSDMException fujaba__InternalException )\n                  {\n                     fujaba__Success = false;\n                  }\n               }\n               JavaSDM.ensure (fujaba__Success);\n\n               fujaba__Success = true;\n            }\n            catch ( JavaSDMException fujaba__InternalException )\n            {\n               fujaba__Success = false;\n            }\n         }\n         JavaSDM.ensure (fujaba__Success);\n\n\n         fujaba__Success = true;\n      }\n      catch ( JavaSDMException fujaba__InternalException )\n      {\n         fujaba__Success = false;\n      }\n\n      return __result;'"
	 * @generated
	 */
	EObjectContainer isAppropriate_BWD_EMoflonEdge_129(EMoflonEdge _edge_covered);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_FWD(TripleMatch tripleMatch);

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @model annotation="http://www.eclipse.org/emf/2002/GenModel body='\n// [user code injected with eMoflon]\n\n// TODO: implement this method here but do not remove the injection marker \nthrow new UnsupportedOperationException();'"
	 * @generated
	 */
	RuleResult checkAttributes_BWD(TripleMatch tripleMatch);
	// <-- [user code injected with eMoflon]

	// [user code injected with eMoflon] -->
} // AltStepBFToComboRule
